{
	"id": "ab59aa5a0b9df4576f92af3c7e9e5b14",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/EasyStaking.sol": {
				"content": "pragma solidity 0.5.16;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\";\nimport \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\";\nimport \"./IERC20Mintable.sol\";\nimport \"./Sacrifice.sol\";\nimport \"./lib/Sigmoid.sol\";\n\n/**\n * @title EasyStaking\n *\n * Note: all percentage values are between 0 (0%) and 1 (100%)\n * and represented as fixed point numbers containing 18 decimals like with Ether\n * 100% == 1 ether\n */\ncontract EasyStaking is Ownable, ReentrancyGuard {\n    using Address for address;\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n    using Sigmoid for Sigmoid.State;\n\n    /**\n     * @dev Emitted when a user deposits tokens.\n     * @param sender User address.\n     * @param id User's unique deposit ID.\n     * @param amount The amount of deposited tokens.\n     * @param balance Current user balance.\n     * @param accruedEmission User's accrued emission.\n     * @param prevDepositDuration Duration of the previous deposit in seconds.\n     */\n    event Deposited(\n        address indexed sender,\n        uint256 indexed id,\n        uint256 amount,\n        uint256 balance,\n        uint256 accruedEmission,\n        uint256 prevDepositDuration\n    );\n\n    /**\n     * @dev Emitted when a user requests withdrawal.\n     * @param sender User address.\n     * @param id User's unique deposit ID.\n     */\n    event WithdrawalRequested(address indexed sender, uint256 indexed id);\n\n    /**\n     * @dev Emitted when a user withdraws tokens.\n     * @param sender User address.\n     * @param id User's unique deposit ID.\n     * @param amount The amount of withdrawn tokens.\n     * @param fee The withdrawal fee.\n     * @param balance Current user balance.\n     * @param accruedEmission User's accrued emission.\n     * @param lastDepositDuration Duration of the last deposit in seconds.\n     */\n    event Withdrawn(\n        address indexed sender,\n        uint256 indexed id,\n        uint256 amount,\n        uint256 fee,\n        uint256 balance,\n        uint256 accruedEmission,\n        uint256 lastDepositDuration\n    );\n\n    /**\n     * @dev Emitted when a new fee value is set.\n     * @param value A new fee value.\n     * @param sender The owner address at the moment of fee changing.\n     */\n    event FeeSet(uint256 value, address sender);\n\n    /**\n     * @dev Emitted when a new withdrawal lock duration value is set.\n     * @param value A new withdrawal lock duration value.\n     * @param sender The owner address at the moment of value changing.\n     */\n    event WithdrawalLockDurationSet(uint256 value, address sender);\n\n    /**\n     * @dev Emitted when a new withdrawal unlock duration value is set.\n     * @param value A new withdrawal unlock duration value.\n     * @param sender The owner address at the moment of value changing.\n     */\n    event WithdrawalUnlockDurationSet(uint256 value, address sender);\n\n    /**\n     * @dev Emitted when lock after duration value is set.\n     * @param value A new withdrawal lock duration value.\n     * @param sender The owner address at the moment of value changing.\n     */\n    event LockAfterStakeDurationSet(uint256 value, address sender);\n    \n    /**\n     * @dev Emitted when a new total supply factor value is set.\n     * @param value A new total supply factor value.\n     * @param sender The owner address at the moment of value changing.\n     */\n    event TotalSupplyFactorSet(uint256 value, address sender);\n\n    /**\n     * @dev Emitted when new sigmoid parameters values are set.\n     * @param a A new parameter A value.\n     * @param b A new parameter B value.\n     * @param c A new parameter C value.\n     * @param sender The owner address at the moment of value changing.\n     */\n    event SigmoidParametersSet(uint256 a, int256 b, uint256 c, address sender);\n\n    /**\n     * @dev Emitted when a new Liquidity Providers Reward address value is set.\n     * @param value A new address value.\n     * @param sender The owner address at the moment of address changing.\n     */\n    event LiquidityProvidersRewardAddressSet(address value, address sender);\n\n    uint256 private constant YEAR = 365 days;\n    // The maximum emission rate (in percentage)\n    uint256 public constant MAX_EMISSION_RATE = 150 finney; // 15%, 0.15 ether\n    // The period after which the new value of the parameter is set\n    uint256 public constant PARAM_UPDATE_DELAY = 7 days;\n\n    // STAKE token\n    IERC20Mintable public token;\n\n    struct UintParam {\n        uint256 oldValue;\n        uint256 newValue;\n        uint256 timestamp;\n    }\n\n    struct AddressParam {\n        address oldValue;\n        address newValue;\n        uint256 timestamp;\n    }\n\n    // The address for the Liquidity Providers reward\n    AddressParam public liquidityProvidersRewardAddressParam;\n    // The fee of the forced withdrawal (in percentage)\n    UintParam public feeParam;\n    // The time from the request after which the withdrawal will be available (in seconds)\n    UintParam public withdrawalLockDurationParam;\n    // The time during which the withdrawal will be available from the moment of unlocking (in seconds)\n    UintParam public withdrawalUnlockDurationParam;\n    // The time during which the user can not withdraw after initial stake.\n    UintParam public lockAfterStakeDurationParam;\n    // Total supply factor for calculating emission rate (in percentage)\n    UintParam public totalSupplyFactorParam;\n\n    // The deposit balances of users\n    mapping (address => mapping (uint256 => uint256)) public balances;\n    // The dates of users' deposits\n    mapping (address => mapping (uint256 => uint256)) public depositDates;\n    // The dates of users' withdrawal requests\n    mapping (address => mapping (uint256 => uint256)) public withdrawalRequestsDates;\n    // The last deposit id\n    mapping (address => uint256) public lastDepositIds;\n    // The total staked amount\n    uint256 public totalStaked;\n\n    // Variable that prevents _deposit method from being called 2 times\n    bool private locked;\n    // The library that is used to calculate user's current emission rate\n    Sigmoid.State private sigmoid;\n\n    /**\n     * @dev Initializes the contract.\n     * @param _owner The owner of the contract.\n     * @param _tokenAddress The address of the STAKE token contract.\n     * @param _liquidityProvidersRewardAddress The address for the Liquidity Providers reward.\n     * @param _fee The fee of the forced withdrawal (in percentage).\n     * @param _withdrawalLockDuration The time from the request after which the withdrawal will be available (in seconds).\n     * @param _withdrawalUnlockDuration The time during which the withdrawal will be available from the moment of unlocking (in seconds).\n     * @param _totalSupplyFactor Total supply factor for calculating emission rate (in percentage).\n     * @param _sigmoidParamA Sigmoid parameter A.\n     * @param _sigmoidParamB Sigmoid parameter B.\n     * @param _sigmoidParamC Sigmoid parameter C.\n     */\n    function initialize(\n        address _owner,\n        address _tokenAddress,\n        address _liquidityProvidersRewardAddress,\n        uint256 _fee,\n        uint256 _withdrawalLockDuration,\n        uint256 _withdrawalUnlockDuration,\n        uint256 _lockAfterStakeDuration,\n        uint256 _totalSupplyFactor,\n        uint256 _sigmoidParamA,\n        int256 _sigmoidParamB,\n        uint256 _sigmoidParamC\n    ) external initializer {\n        require(_owner != address(0), \"zero address\");\n        require(_tokenAddress.isContract(), \"not a contract address\");\n        Ownable.initialize(msg.sender);\n        ReentrancyGuard.initialize();\n        token = IERC20Mintable(_tokenAddress);\n        setFee(_fee);\n        setWithdrawalLockDuration(_withdrawalLockDuration);\n        setWithdrawalUnlockDuration(_withdrawalUnlockDuration);\n        setLockAfterStakeDuration(_lockAfterStakeDuration);\n        setTotalSupplyFactor(_totalSupplyFactor);\n        setSigmoidParameters(_sigmoidParamA, _sigmoidParamB, _sigmoidParamC);\n        setLiquidityProvidersRewardAddress(_liquidityProvidersRewardAddress);\n        Ownable.transferOwnership(_owner);\n    }\n\n    /**\n     * @dev This method is used to deposit tokens to a new deposit.\n     * It generates a new deposit ID and calls another public \"deposit\" method. See its description.\n     * @param _amount The amount to deposit.\n     */\n    function deposit(uint256 _amount) external {\n        deposit(++lastDepositIds[msg.sender], _amount);\n    }\n\n    /**\n     * @dev This method is used to deposit tokens to the deposit opened before.\n     * It calls the internal \"_deposit\" method and transfers tokens from sender to contract.\n     * Sender must approve tokens first.\n     *\n     * Instead this, user can use the simple \"transfer\" method of STAKE token contract to make a deposit.\n     * Sender's approval is not needed in this case.\n     *\n     * Note: each call updates the deposit date so be careful if you want to make a long staking.\n     *\n     * @param _depositId User's unique deposit ID.\n     * @param _amount The amount to deposit.\n     */\n    function deposit(uint256 _depositId, uint256 _amount) public {\n        require(_depositId > 0 && _depositId <= lastDepositIds[msg.sender], \"wrong deposit id\");\n        _deposit(msg.sender, _depositId, _amount);\n        _setLocked(true);\n        require(token.transferFrom(msg.sender, address(this), _amount), \"transfer failed\");\n        _setLocked(false);\n    }\n\n    /**\n     * @dev This method is called when STAKE tokens are transferred to this contract.\n     * using \"transfer\", \"transferFrom\", or \"transferAndCall\" method of STAKE token contract.\n     * It generates a new deposit ID and calls the internal \"_deposit\" method.\n     * @param _sender The sender of tokens.\n     * @param _amount The transferred amount.\n     * @return true if successful\n     */\n    function onTokenTransfer(address _sender, uint256 _amount, bytes calldata) external returns (bool) {\n        require(msg.sender == address(token), \"only token contract is allowed\");\n        if (!locked) {\n            _deposit(_sender, ++lastDepositIds[_sender], _amount);\n        }\n        return true;\n    }\n\n    /**\n     * @dev This method is used to make a forced withdrawal with a fee.\n     * It calls the internal \"_withdraw\" method.\n     * @param _depositId User's unique deposit ID.\n     * @param _amount The amount to withdraw (0 - to withdraw all).\n     */\n    function makeForcedWithdrawal(uint256 _depositId, uint256 _amount) external {\n        _withdraw(msg.sender, _depositId, _amount, true);\n    }\n\n    /**\n     * @dev This method is used to request a withdrawal without a fee.\n     * It sets the date of the request.\n     *\n     * Note: each call updates the date of the request so don't call this method twice during the lock.\n     *\n     * @param _depositId User's unique deposit ID.\n     */\n    function requestWithdrawal(uint256 _depositId) external {\n        require(_depositId > 0 && _depositId <= lastDepositIds[msg.sender], \"wrong deposit id\");\n        withdrawalRequestsDates[msg.sender][_depositId] = _now();\n        emit WithdrawalRequested(msg.sender, _depositId);\n    }\n\n    /**\n     * @dev This method is used to make a requested withdrawal.\n     * It calls the internal \"_withdraw\" method and resets the date of the request.\n     *\n     * If sender didn't call this method during the unlock period (if timestamp >= lockEnd + withdrawalUnlockDuration)\n     * they have to call \"requestWithdrawal\" one more time.\n     *\n     * @param _depositId User's unique deposit ID.\n     * @param _amount The amount to withdraw (0 - to withdraw all).\n     */\n    function makeRequestedWithdrawal(uint256 _depositId, uint256 _amount) external {\n        uint256 requestDate = withdrawalRequestsDates[msg.sender][_depositId];\n        require(requestDate > 0, \"withdrawal wasn't requested\");\n        uint256 timestamp = _now();\n        uint256 lockEnd = requestDate.add(withdrawalLockDuration());\n        require(timestamp >= lockEnd, \"too early\");\n        require(timestamp < lockEnd.add(withdrawalUnlockDuration()), \"too late\");\n        withdrawalRequestsDates[msg.sender][_depositId] = 0;\n        _withdraw(msg.sender, _depositId, _amount, false);\n    }\n\n    /**\n     * @dev This method is used to claim unsupported tokens accidentally sent to the contract.\n     * It can only be called by the owner.\n     * @param _token The address of the token contract (zero address for claiming native coins).\n     * @param _to The address of the tokens/coins receiver.\n     * @param _amount Amount to claim.\n     */\n    function claimTokens(address _token, address payable _to, uint256 _amount) external onlyOwner {\n        require(_to != address(0) && _to != address(this), \"not a valid recipient\");\n        require(_amount > 0, \"amount should be greater than 0\");\n        if (_token == address(0)) {\n            if (!_to.send(_amount)) { // solium-disable-line security/no-send\n                (new Sacrifice).value(_amount)(_to);\n            }\n        } else if (_token == address(token)) {\n            uint256 availableAmount = token.balanceOf(address(this)).sub(totalStaked);\n            require(availableAmount >= _amount, \"insufficient funds\");\n            require(token.transfer(_to, _amount), \"transfer failed\");\n        } else {\n            IERC20 customToken = IERC20(_token);\n            customToken.safeTransfer(_to, _amount);\n        }\n    }\n\n    /**\n     * @dev Sets the fee for forced withdrawals. Can only be called by owner.\n     * @param _value The new fee value (in percentage).\n     */\n    function setFee(uint256 _value) public onlyOwner {\n        _updateUintParam(feeParam, _value);\n        emit FeeSet(_value, msg.sender);\n    }\n\n    /**\n     * @dev Sets the time from the request after which the withdrawal will be available.\n     * Can only be called by owner.\n     * @param _value The new duration value (in seconds).\n     */\n    function setWithdrawalLockDuration(uint256 _value) public onlyOwner {\n        require(_value <= 30 days, \"shouldn't be greater than 30 days\");\n        _updateUintParam(withdrawalLockDurationParam, _value);\n        emit WithdrawalLockDurationSet(_value, msg.sender);\n    }\n\n    /**\n     * @dev Sets the time during which the withdrawal will be available from the moment of unlocking.\n     * Can only be called by owner.\n     * @param _value The new duration value (in seconds).\n     */\n    function setWithdrawalUnlockDuration(uint256 _value) public onlyOwner {\n        require(_value >= 1 hours, \"shouldn't be less than 1 hour\");\n        _updateUintParam(withdrawalUnlockDurationParam, _value);\n        emit WithdrawalUnlockDurationSet(_value, msg.sender);\n    }\n\n    /**\n     * @dev Sets the time from the initial stake after which withdrawals are allowed\n     * Can only be called by owner.\n     * @param _value The new duration value (in seconds).\n     */\n    function setLockAfterStakeDuration(uint256 _value) public onlyOwner {\n        _updateUintParam(lockAfterStakeDurationParam, _value);\n        emit LockAfterStakeDurationSet(_value, msg.sender);\n    }\n\n    /**\n     * @dev Sets total supply factor for calculating emission rate.\n     * Can only be called by owner.\n     * @param _value The new factor value (in percentage).\n     */\n    function setTotalSupplyFactor(uint256 _value) public onlyOwner {\n        require(_value <= 1 ether, \"should be less than or equal to 1 ether\");\n        _updateUintParam(totalSupplyFactorParam, _value);\n        emit TotalSupplyFactorSet(_value, msg.sender);\n    }\n\n    /**\n     * @dev Sets parameters of the sigmoid that is used to calculate the user's current emission rate.\n     * Can only be called by owner.\n     * @param _a Sigmoid parameter A. Unsigned integer.\n     * @param _b Sigmoid parameter B. Signed integer.\n     * @param _c Sigmoid parameter C. Unsigned integer. Cannot be zero.\n     */\n    function setSigmoidParameters(uint256 _a, int256 _b, uint256 _c) public onlyOwner {\n        require(_a <= MAX_EMISSION_RATE.div(2), \"should be less than or equal to a half of the maximum emission rate\");\n        sigmoid.setParameters(_a, _b, _c);\n        emit SigmoidParametersSet(_a, _b, _c, msg.sender);\n    }\n\n    /**\n     * @dev Sets the address for the Liquidity Providers reward.\n     * Can only be called by owner.\n     * @param _address The new address.\n     */\n    function setLiquidityProvidersRewardAddress(address _address) public onlyOwner {\n        require(_address != address(0), \"zero address\");\n        require(_address != address(this), \"wrong address\");\n        AddressParam memory param = liquidityProvidersRewardAddressParam;\n        if (param.timestamp == 0) {\n            param.oldValue = _address;\n        } else if (_paramUpdateDelayElapsed(param.timestamp)) {\n            param.oldValue = param.newValue;\n        }\n        param.newValue = _address;\n        param.timestamp = _now();\n        liquidityProvidersRewardAddressParam = param;\n        emit LiquidityProvidersRewardAddressSet(_address, msg.sender);\n    }\n\n    /**\n     * @return Returns current fee.\n     */\n    function fee() public view returns (uint256) {\n        return _getUintParamValue(feeParam);\n    }\n\n    /**\n     * @return Returns current withdrawal lock duration.\n     */\n    function withdrawalLockDuration() public view returns (uint256) {\n        return _getUintParamValue(withdrawalLockDurationParam);\n    }\n\n    /**\n     * @return Returns current withdrawal unlock duration.\n     */\n    function withdrawalUnlockDuration() public view returns (uint256) {\n        return _getUintParamValue(withdrawalUnlockDurationParam);\n    }\n\n    /**\n     * @return Returns current lock after stake duration.\n     */\n    function lockAfterStakeDuration() public view returns (uint256) {\n        return _getUintParamValue(lockAfterStakeDurationParam);\n    }\n\n    function lockAfterStakeDurationPassed(address _sender, uint256 _id) public view returns (bool) {\n        uint256 timePassed = _now().sub(depositDates[_sender][_id]);\n        return timePassed >= lockAfterStakeDuration();\n    }\n\n    /**\n     * @return Returns current total supply factor.\n     */\n    function totalSupplyFactor() public view returns (uint256) {\n        return _getUintParamValue(totalSupplyFactorParam);\n    }\n\n    /**\n     * @return Returns current liquidity providers reward address.\n     */\n    function liquidityProvidersRewardAddress() public view returns (address) {\n        AddressParam memory param = liquidityProvidersRewardAddressParam;\n        return _paramUpdateDelayElapsed(param.timestamp) ? param.newValue : param.oldValue;\n    }\n\n    /**\n     * @return Emission rate based on the ratio of total staked to total supply.\n     */\n    function getSupplyBasedEmissionRate() public view returns (uint256) {\n        uint256 totalSupply = token.totalSupply();\n        uint256 factor = totalSupplyFactor();\n        if (factor == 0) return 0;\n        uint256 target = totalSupply.mul(factor).div(1 ether);\n        uint256 maxSupplyBasedEmissionRate = MAX_EMISSION_RATE.div(2); // 7.5%\n        if (totalStaked >= target) {\n            return maxSupplyBasedEmissionRate;\n        }\n        return maxSupplyBasedEmissionRate.mul(totalStaked).div(target);\n    }\n\n    /**\n     * @param _depositDate Deposit date.\n     * @param _amount Amount based on which emission is calculated and accrued.\n     * @return Total accrued emission (for the user and Liquidity Providers), user share, and seconds passed since the previous deposit started.\n     */\n    function getAccruedEmission(\n        uint256 _depositDate,\n        uint256 _amount\n    ) public view returns (uint256 total, uint256 userShare, uint256 timePassed) {\n        if (_amount == 0 || _depositDate == 0) return (0, 0, 0);\n        timePassed = _now().sub(_depositDate);\n        if (timePassed == 0) return (0, 0, 0);\n        uint256 userEmissionRate = sigmoid.calculate(int256(timePassed));\n        userEmissionRate = userEmissionRate.add(getSupplyBasedEmissionRate());\n        if (userEmissionRate == 0) return (0, 0, timePassed);\n        assert(userEmissionRate <= MAX_EMISSION_RATE);\n        total = _amount.mul(MAX_EMISSION_RATE).mul(timePassed).div(YEAR * 1 ether);\n        userShare = _amount.mul(userEmissionRate).mul(timePassed).div(YEAR * 1 ether);\n    }\n\n    /**\n     * @return Sigmoid parameters.\n     */\n    function getSigmoidParameters() public view returns (uint256 a, int256 b, uint256 c) {\n        return sigmoid.getParameters();\n    }\n\n    /**\n     * @dev Calls internal \"_mint\" method, increases the user balance, and updates the deposit date.\n     * @param _sender The address of the sender.\n     * @param _id User's unique deposit ID.\n     * @param _amount The amount to deposit.\n     */\n    function _deposit(address _sender, uint256 _id, uint256 _amount) internal nonReentrant {\n        require(_amount > 0, \"deposit amount should be more than 0\");\n        (uint256 sigmoidParamA,,) = getSigmoidParameters();\n        if (sigmoidParamA == 0 && totalSupplyFactor() == 0) revert(\"emission stopped\");\n        (uint256 userShare, uint256 timePassed) = _mint(_sender, _id, 0);\n        uint256 newBalance = balances[_sender][_id].add(_amount);\n        balances[_sender][_id] = newBalance;\n        totalStaked = totalStaked.add(_amount);\n        depositDates[_sender][_id] = _now();\n        emit Deposited(_sender, _id, _amount, newBalance, userShare, timePassed);\n    }\n\n    /**\n     * @dev Calls internal \"_mint\" method and then transfers tokens to the sender.\n     * @param _sender The address of the sender.\n     * @param _id User's unique deposit ID.\n     * @param _amount The amount to withdraw (0 - to withdraw all).\n     * @param _forced Defines whether to apply fee (true), or not (false).\n     */\n    function _withdraw(address _sender, uint256 _id, uint256 _amount, bool _forced) internal nonReentrant {\n        require(_id > 0 && _id <= lastDepositIds[_sender], \"wrong deposit id\");\n        require(balances[_sender][_id] > 0 && balances[_sender][_id] >= _amount, \"insufficient funds\");\n        require(lockAfterStakeDurationPassed(_sender, _id), \"can not withdraw during initial lock period\");\n        (uint256 accruedEmission, uint256 timePassed) = _mint(_sender, _id, _amount);\n        uint256 amount = _amount == 0 ? balances[_sender][_id] : _amount.add(accruedEmission);\n        balances[_sender][_id] = balances[_sender][_id].sub(amount);\n        totalStaked = totalStaked.sub(amount);\n        if (balances[_sender][_id] == 0) {\n            depositDates[_sender][_id] = 0;\n        }\n        uint256 feeValue = 0;\n        if (_forced) {\n            feeValue = amount.mul(fee()).div(1 ether);\n            amount = amount.sub(feeValue);\n            require(token.transfer(liquidityProvidersRewardAddress(), feeValue), \"transfer failed\");\n        }\n        require(token.transfer(_sender, amount), \"transfer failed\");\n        emit Withdrawn(_sender, _id, amount, feeValue, balances[_sender][_id], accruedEmission, timePassed);\n    }\n\n    /**\n     * @dev Mints MAX_EMISSION_RATE per annum and distributes the emission between the user and Liquidity Providers in proportion.\n     * @param _user User's address.\n     * @param _id User's unique deposit ID.\n     * @param _amount Amount based on which emission is calculated and accrued. When 0, current deposit balance is used.\n     */\n    function _mint(address _user, uint256 _id, uint256 _amount) internal returns (uint256, uint256) {\n        uint256 currentBalance = balances[_user][_id];\n        uint256 amount = _amount == 0 ? currentBalance : _amount;\n        (uint256 total, uint256 userShare, uint256 timePassed) = getAccruedEmission(depositDates[_user][_id], amount);\n        if (total > 0) {\n            balances[_user][_id] = currentBalance.add(userShare);\n            totalStaked = totalStaked.add(userShare);\n            require(token.transfer(liquidityProvidersRewardAddress(), total.sub(userShare)), \"transfer failed\");\n        }\n        return (userShare, timePassed);\n    }\n\n    /**\n     * @dev Sets the next value of the parameter and the timestamp of this setting.\n     */\n    function _updateUintParam(UintParam storage _param, uint256 _newValue) internal {\n        if (_param.timestamp == 0) {\n            _param.oldValue = _newValue;\n        } else if (_paramUpdateDelayElapsed(_param.timestamp)) {\n            _param.oldValue = _param.newValue;\n        }\n        _param.newValue = _newValue;\n        _param.timestamp = _now();\n    }\n\n    /**\n     * @return Returns the current value of the parameter.\n     */\n    function _getUintParamValue(UintParam memory _param) internal view returns (uint256) {\n        return _paramUpdateDelayElapsed(_param.timestamp) ? _param.newValue : _param.oldValue;\n    }\n\n    /**\n     * @return Returns true if param update delay elapsed.\n     */\n    function _paramUpdateDelayElapsed(uint256 _paramTimestamp) internal view returns (bool) {\n        return _now() > _paramTimestamp.add(PARAM_UPDATE_DELAY);\n    }\n\n    /**\n     * @dev Sets lock to prevent reentrance.\n     */\n    function _setLocked(bool _locked) internal {\n        locked = _locked;\n    }\n\n    /**\n     * @return Returns current timestamp.\n     */\n    function _now() internal view returns (uint256) {\n        // Note that the timestamp can have a 900-second error:\n        // https://github.com/ethereum/wiki/blob/c02254611f218f43cbb07517ca8e5d00fd6d6d75/Block-Protocol-2.0.md\n        return now; // solium-disable-line security/no-block-members\n    }\n}\n"
			},
			"contracts/lib/Sigmoid.sol": {
				"content": "pragma solidity 0.5.16;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\";\nimport \"./ExtendedMath.sol\";\n\nlibrary Sigmoid {\n    using SafeMath for uint256;\n    using ExtendedMath for uint256;\n\n    // The period after which the new value of the parameter is set\n    uint256 public constant PARAM_UPDATE_DELAY = 7 days;\n\n    struct Params {\n        uint256 a;\n        int256 b;\n        uint256 c;\n    }\n\n    struct State {\n        Params oldParams;\n        Params newParams;\n        uint256 timestamp;\n    }\n\n    /**\n     * @dev Sets sigmoid parameters\n     * @param _a Sigmoid parameter A.\n     * @param _b Sigmoid parameter B.\n     * @param _c Sigmoid parameter C.\n     */\n    function setParameters(State storage self, uint256 _a, int256 _b, uint256 _c) internal {\n        require(_c != 0, \"should be greater than 0\"); // prevent division by zero\n        uint256 currentTimestamp = _now();\n        if (self.timestamp == 0) {\n            self.oldParams = Params(_a, _b, _c);\n        } else if (currentTimestamp > self.timestamp.add(PARAM_UPDATE_DELAY)) {\n            self.oldParams = self.newParams;\n        }\n        self.newParams = Params(_a, _b, _c);\n        self.timestamp = currentTimestamp;\n    }\n\n    /**\n     * @return Sigmoid parameters\n     */\n    function getParameters(State storage self) internal view returns (uint256, int256, uint256) {\n        bool isUpdated = _now() > self.timestamp.add(PARAM_UPDATE_DELAY);\n        return isUpdated ?\n            (self.newParams.a, self.newParams.b, self.newParams.c) :\n            (self.oldParams.a, self.oldParams.b, self.oldParams.c);\n    }\n\n    /**\n     * @return The corresponding Y value for a given X value\n     */\n    function calculate(State storage self, int256 _x) internal view returns (uint256) {\n        (uint256 a, int256 b, uint256 c) = getParameters(self);\n        int256 k = _x - b;\n        if (k < 0) return 0;\n        uint256 uk = uint256(k);\n        return a.mul(uk).div(uk.pow2().add(c).sqrt());\n    }\n\n    /**\n     * @return Returns current timestamp.\n     */\n    function _now() internal view returns (uint256) {\n        // Note that the timestamp can have a 900-second error:\n        // https://github.com/ethereum/wiki/blob/c02254611f218f43cbb07517ca8e5d00fd6d6d75/Block-Protocol-2.0.md\n        return now; // solium-disable-line security/no-block-members\n    }\n}\n"
			},
			"contracts/Sacrifice.sol": {
				"content": "pragma solidity 0.5.16;\n\ncontract Sacrifice {\n    constructor(address payable _recipient) public payable {\n        selfdestruct(_recipient);\n    }\n}\n"
			},
			"contracts/IERC20Mintable.sol": {
				"content": "pragma solidity 0.5.16;\n\n\ninterface IERC20Mintable {\n    function transfer(address _to, uint256 _value) external returns (bool);\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool);\n    function mint(address _to, uint256 _value) external returns (bool);\n    function balanceOf(address _account) external view returns (uint256);\n    function totalSupply() external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n */\ncontract ReentrancyGuard is Initializable {\n    // counter to allow mutex lock with only one SSTORE operation\n    uint256 private _guardCounter;\n\n    function initialize() public initializer {\n        // The counter starts at one to prevent changing it from zero to a non-zero\n        // value, which is a more expensive operation.\n        _guardCounter = 1;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _guardCounter += 1;\n        uint256 localCounter = _guardCounter;\n        _;\n        require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\");\n    }\n\n    uint256[50] private ______gap;\n}\n"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n        // solhint-disable-next-line max-line-length\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol": {
				"content": "pragma solidity ^0.5.5;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following \n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Converts an `address` into `address payable`. Note that this is\n     * simply a type cast: the actual underlying value is not changed.\n     *\n     * _Available since v2.4.0._\n     */\n    function toPayable(address account) internal pure returns (address payable) {\n        return address(uint160(account));\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     *\n     * _Available since v2.4.0._\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-call-value\n        (bool success, ) = recipient.call.value(amount)(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n}\n"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\nimport \"../GSN/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be aplied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Initializable, Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function initialize(address sender) public initializer {\n        _owner = sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return _msgSender() == _owner;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * > Note: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n\n    uint256[50] private ______gap;\n}\n"
			},
			"contracts/lib/ExtendedMath.sol": {
				"content": "pragma solidity 0.5.16;\n\nlibrary ExtendedMath {\n    /**\n     * @return The given number raised to the power of 2\n     */\n    function pow2(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * a;\n        require(c / a == a, \"ExtendedMath: squaring overflow\");\n        return c;\n    }\n\n    /**\n     * @return The square root of the given number\n     */\n    function sqrt(uint y) internal pure returns (uint z) {\n        if (y > 3) {\n            z = y;\n            uint x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n}\n"
			},
			"@openzeppelin/upgrades/contracts/Initializable.sol": {
				"content": "pragma solidity >=0.4.24 <0.7.0;\n\n\n/**\n * @title Initializable\n *\n * @dev Helper contract to support initializer functions. To use it, replace\n * the constructor with a function that has the `initializer` modifier.\n * WARNING: Unlike constructors, initializer functions must be manually\n * invoked. This applies both to deploying an Initializable contract, as well\n * as extending an Initializable contract via inheritance.\n * WARNING: When used with inheritance, manual care must be taken to not invoke\n * a parent initializer twice, or ensure that all initializers are idempotent,\n * because this is not dealt with automatically as with constructors.\n */\ncontract Initializable {\n\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  bool private initialized;\n\n  /**\n   * @dev Indicates that the contract is in the process of being initialized.\n   */\n  bool private initializing;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\n\n    bool isTopLevelCall = !initializing;\n    if (isTopLevelCall) {\n      initializing = true;\n      initialized = true;\n    }\n\n    _;\n\n    if (isTopLevelCall) {\n      initializing = false;\n    }\n  }\n\n  /// @dev Returns true if and only if the function is running in the constructor\n  function isConstructor() private view returns (bool) {\n    // extcodesize checks the size of the code stored in an address, and\n    // address returns the current address. Since the code is still not\n    // deployed when running a constructor, any checks on its code size will\n    // yield zero, making it an effective way to detect if a contract is\n    // under construction or not.\n    address self = address(this);\n    uint256 cs;\n    assembly { cs := extcodesize(self) }\n    return cs == 0;\n  }\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {ERC20Detailed}.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context is Initializable {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor () internal { }\n    // solhint-disable-previous-line no-empty-blocks\n\n    function _msgSender() internal view returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820db2c3a7caede54c730208d3ca5510fba68da0fbf2311cdf272e0e49bbaa7735364736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820db2c3a7caede54c730208d3ca5510fba68da0fbf2311cdf272e0e49bbaa7735364736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xDB 0x2C GASPRICE PUSH29 0xAEDE54C730208D3CA5510FBA68DA0FBF2311CDF272E0E49BBAA7735364 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "589:4708:1:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820db2c3a7caede54c730208d3ca5510fba68da0fbf2311cdf272e0e49bbaa7735364736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xDB 0x2C GASPRICE PUSH29 0xAEDE54C730208D3CA5510FBA68DA0FBF2311CDF272E0E49BBAA7735364 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "589:4708:1:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820db2c3a7caede54c730208d3ca5510fba68da0fbf2311cdf272e0e49bbaa7735364736f6c63430005100032",
									".code": [
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be aplied to your functions to restrict their use to the owner.",
						"methods": {
							"initialize(address)": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":477:2503  contract Ownable is Initializable, Context {... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":477:2503  contract Ownable is Initializable, Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":477:2503  contract Ownable is Initializable, Context {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1746:1883  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":959:1036  function owner() public view returns (address) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1310:1402  function isOwner() public view returns (bool) {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":741:883  function initialize(address sender) public initializer {... */\n    tag_6:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":741:883  function initialize(address sender) public initializer {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2032:2139  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_7:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2032:2139  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1746:1883  function renounceOwnership() public onlyOwner {... */\n    tag_9:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      tag_21\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1170  isOwner */\n      tag_13\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      jump\t// in\n    tag_21:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1155:1209  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1844:1845  0 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1807:1847  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1828:1834  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1807:1847  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1874:1875  0 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1857:1863  _owner */\n      0x33\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1857:1876  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1746:1883  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":959:1036  function owner() public view returns (address) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":997:1004  address */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1023:1029  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1016:1029  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":959:1036  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1310:1402  function isOwner() public view returns (bool) {... */\n    tag_13:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1350:1354  bool */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1389:1395  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1373:1395  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1373:1385  _msgSender() */\n      tag_26\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1373:1383  _msgSender */\n      tag_27\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1373:1385  _msgSender() */\n      jump\t// in\n    tag_26:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1373:1395  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1366:1395  return _msgSender() == _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1310:1402  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":741:883  function initialize(address sender) public initializer {... */\n    tag_16:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1036  initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n      dup1\n      tag_29\n      jumpi\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      tag_30\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1053  isConstructor */\n      tag_31\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      jump\t// in\n    tag_30:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n    tag_29:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n      dup1\n      tag_32\n      jumpi\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1060:1071  initialized */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1059:1071  !initialized */\n      iszero\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n    tag_32:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1016:1122  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1129:1148  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1152:1164  initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1151:1164  !initializing */\n      iszero\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1129:1164  bool isTopLevelCall = !initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1174:1188  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n      iszero\n      tag_34\n      jumpi\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1213:1217  true */\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1198:1210  initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1198:1217  initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1239:1243  true */\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1225:1236  initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1225:1243  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":815:821  sender */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":806:812  _owner */\n      0x33\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":806:821  _owner = sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":869:875  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":836:876  OwnershipTransferred(address(0), _owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":865:866  0 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":836:876  OwnershipTransferred(address(0), _owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1268:1282  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n      iszero\n      tag_36\n      jumpi\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1307:1312  false */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1292:1304  initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1292:1312  initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":741:883  function initialize(address sender) public initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2032:2139  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_19:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      tag_38\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1170  isOwner */\n      tag_13\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      jump\t// in\n    tag_38:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1155:1209  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_39\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_39:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2104:2132  _transferOwnership(newOwner) */\n      tag_41\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2123:2131  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2104:2122  _transferOwnership */\n      tag_42\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2104:2132  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_41:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2032:2139  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":867:963  function _msgSender() internal view returns (address payable) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":912:927  address payable */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":946:956  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":939:956  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":867:963  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1409:1907  function isConstructor() private view returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1456:1460  bool */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1797:1809  address self */\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1820:1824  this */\n      address\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1797:1825  address self = address(this) */\n      swap1\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1831:1841  uint256 cs */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1876:1880  self */\n      dup2\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1864:1881  extcodesize(self) */\n      extcodesize\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1858:1881  cs := extcodesize(self) */\n      swap1\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1901:1902  0 */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1895:1897  cs */\n      dup2\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1895:1902  cs == 0 */\n      eq\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1888:1902  return cs == 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1409:1907  function isConstructor() private view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2240:2465  function _transferOwnership(address newOwner) internal {... */\n    tag_42:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2333:2334  0 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2313:2335  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2313:2321  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2313:2335  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2305:2378  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2422:2430  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2393:2431  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2414:2420  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2393:2431  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2450:2458  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2441:2447  _owner */\n      0x33\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2441:2458  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2240:2465  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4 436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564\n\n    auxdata: 0xa265627a7a7231582078c731ace7e179e0afeac54da4061444113b0c6cef4c47c1745f945385ff19f764736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052610750806100136000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b146100665780638f32d59b146100b0578063c4d66de8146100d2578063f2fde38b14610116575b600080fd5b61006461015a565b005b61006e610295565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100b86102bf565b604051808215151515815260200191505060405180910390f35b610114600480360360208110156100e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031e565b005b6101586004803603602081101561012c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104dc565b005b6101626102bf565b6101d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610302610562565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600060019054906101000a900460ff168061033d575061033c61056a565b5b8061035457506000809054906101000a900460ff16155b6103a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806106ee602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156103f9576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380156104d85760008060016101000a81548160ff0219169083151502179055505b5050565b6104e46102bf565b610556576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61055f81610581565b50565b600033905090565b6000803090506000813b9050600081149250505090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106c86026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a7231582078c731ace7e179e0afeac54da4061444113b0c6cef4c47c1745f945385ff19f764736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x750 DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x116 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x15A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB8 PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x31E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x1D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x302 PUSH2 0x562 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x33D JUMPI POP PUSH2 0x33C PUSH2 0x56A JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x354 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x6EE PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4E4 PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55F DUP2 PUSH2 0x581 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x6C8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373436F6E747261637420696E7374616E63 PUSH6 0x206861732061 PUSH13 0x7265616479206265656E20696E PUSH10 0x7469616C697A6564A265 PUSH3 0x7A7A72 BALANCE PC KECCAK256 PUSH25 0xC731ACE7E179E0AFEAC54DA4061444113B0C6CEF4C47C1745F SWAP5 MSTORE8 DUP6 SELFDESTRUCT NOT 0xF7 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "477:2026:2:-;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b146100665780638f32d59b146100b0578063c4d66de8146100d2578063f2fde38b14610116575b600080fd5b61006461015a565b005b61006e610295565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100b86102bf565b604051808215151515815260200191505060405180910390f35b610114600480360360208110156100e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061031e565b005b6101586004803603602081101561012c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104dc565b005b6101626102bf565b6101d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610302610562565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600060019054906101000a900460ff168061033d575061033c61056a565b5b8061035457506000809054906101000a900460ff16155b6103a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806106ee602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156103f9576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380156104d85760008060016101000a81548160ff0219169083151502179055505b5050565b6104e46102bf565b610556576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61055f81610581565b50565b600033905090565b6000803090506000813b9050600081149250505090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806106c86026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a7231582078c731ace7e179e0afeac54da4061444113b0c6cef4c47c1745f945385ff19f764736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0xB0 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x116 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x15A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x295 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB8 PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x31E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x158 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x1D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x302 PUSH2 0x562 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x33D JUMPI POP PUSH2 0x33C PUSH2 0x56A JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x354 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x6EE PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4E4 PUSH2 0x2BF JUMP JUMPDEST PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55F DUP2 PUSH2 0x581 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x6C8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373436F6E747261637420696E7374616E63 PUSH6 0x206861732061 PUSH13 0x7265616479206265656E20696E PUSH10 0x7469616C697A6564A265 PUSH3 0x7A7A72 BALANCE PC KECCAK256 PUSH25 0xC731ACE7E179E0AFEAC54DA4061444113B0C6CEF4C47C1745F SWAP5 MSTORE8 DUP6 SELFDESTRUCT NOT 0xF7 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "477:2026:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;477:2026:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:137;;;:::i;:::-;;959:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1310:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;741:142;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;741:142:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;2032:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2032:107:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;1746:137;1163:9;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:1;1807:40;;1828:6;;;;;;;;;;;1807:40;;;;;;;;;;;;1874:1;1857:6;;:19;;;;;;;;;;;;;;;;;;1746:137::o;959:77::-;997:7;1023:6;;;;;;;;;;;1016:13;;959:77;:::o;1310:92::-;1350:4;1389:6;;;;;;;;;;;1373:22;;:12;:10;:12::i;:::-;:22;;;1366:29;;1310:92;:::o;741:142::-;1024:12:7;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;815:6:2;806;;:15;;;;;;;;;;;;;;;;;;869:6;;;;;;;;;;;836:40;;865:1;836:40;;;;;;;;;;;;1268:14:7;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;741:142:2;;:::o;2032:107::-;1163:9;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;:::-;2032:107;:::o;867:96:0:-;912:15;946:10;939:17;;867:96;:::o;1409:498:7:-;1456:4;1797:12;1820:4;1797:28;;1831:10;1876:4;1864:17;1858:23;;1901:1;1895:2;:7;1888:14;;;;1409:498;:::o;2240:225:2:-;2333:1;2313:22;;:8;:22;;;;2305:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2422:8;2393:38;;2414:6;;;;;;;;;;;2393:38;;;;;;;;;;;;2450:8;2441:6;;:17;;;;;;;;;;;;;;;;;;2240:225;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "374400",
								"executionCost": "387",
								"totalCost": "374787"
							},
							"external": {
								"initialize(address)": "infinite",
								"isOwner()": "1135",
								"owner()": "1061",
								"renounceOwnership()": "24310",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 477,
									"end": 2503,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 477,
									"end": 2503,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 477,
									"end": 2503,
									"name": "MSTORE"
								},
								{
									"begin": 477,
									"end": 2503,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 477,
									"end": 2503,
									"name": "DUP1"
								},
								{
									"begin": 477,
									"end": 2503,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 477,
									"end": 2503,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 477,
									"end": 2503,
									"name": "CODECOPY"
								},
								{
									"begin": 477,
									"end": 2503,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 477,
									"end": 2503,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582078c731ace7e179e0afeac54da4061444113b0c6cef4c47c1745f945385ff19f764736f6c63430005100032",
									".code": [
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "MSTORE"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "POP"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "LT"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "JUMPI"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "SHR"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "EQ"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "JUMPI"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "EQ"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "JUMPI"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "EQ"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "JUMPI"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH",
											"value": "C4D66DE8"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "EQ"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "JUMPI"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "EQ"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "JUMPI"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "JUMPDEST"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "DUP1"
										},
										{
											"begin": 477,
											"end": 2503,
											"name": "REVERT"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "JUMPDEST"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "JUMPDEST"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "STOP"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "JUMPDEST"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "JUMPDEST"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "MLOAD"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "DUP1"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "DUP3"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "DUP2"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "SWAP2"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "MLOAD"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "DUP1"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "SWAP2"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "SUB"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "RETURN"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "JUMPDEST"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "JUMPDEST"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "MLOAD"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "DUP1"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "DUP3"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "ISZERO"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "ISZERO"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "ISZERO"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "ISZERO"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "DUP2"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "MSTORE"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "ADD"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "SWAP2"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "POP"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "POP"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "MLOAD"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "DUP1"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "SWAP2"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "SUB"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "SWAP1"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "RETURN"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "JUMPDEST"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "DUP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "DUP2"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "ADD"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SWAP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "DUP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "DUP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "AND"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SWAP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "ADD"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SWAP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SWAP3"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SWAP2"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SWAP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "JUMPDEST"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "STOP"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "JUMPDEST"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "DUP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "DUP2"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "ADD"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "DUP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "DUP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "AND"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "ADD"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SWAP3"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SWAP2"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "POP"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "POP"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "POP"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "JUMPDEST"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "STOP"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPI"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "REVERT"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 1844,
											"end": 1845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "AND"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "SLOAD"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "EXP"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "DIV"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "AND"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "AND"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "MLOAD"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "MLOAD"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "DUP1"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "SWAP2"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "SUB"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "LOG3"
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1863,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 1857,
											"end": 1863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "EXP"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "DUP2"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "SLOAD"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "DUP2"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "MUL"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "NOT"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "AND"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "SWAP1"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "DUP4"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "AND"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "MUL"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "OR"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "SWAP1"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "SSTORE"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "POP"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "JUMPDEST"
										},
										{
											"begin": 997,
											"end": 1004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "SWAP1"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "SLOAD"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "SWAP1"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "EXP"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "SWAP1"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "DIV"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "AND"
										},
										{
											"begin": 1016,
											"end": 1029,
											"name": "SWAP1"
										},
										{
											"begin": 1016,
											"end": 1029,
											"name": "POP"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "JUMPDEST"
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SWAP1"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SLOAD"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SWAP1"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "EXP"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SWAP1"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "DIV"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "AND"
										},
										{
											"begin": 1373,
											"end": 1395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1395,
											"name": "AND"
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1373,
											"end": 1383,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "JUMPDEST"
										},
										{
											"begin": 1373,
											"end": 1395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1395,
											"name": "AND"
										},
										{
											"begin": 1373,
											"end": 1395,
											"name": "EQ"
										},
										{
											"begin": 1366,
											"end": 1395,
											"name": "SWAP1"
										},
										{
											"begin": 1366,
											"end": 1395,
											"name": "POP"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "SWAP1"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "EXP"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DIV"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPI"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "POP"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPI"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "POP"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "DUP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SLOAD"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "EXP"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "DIV"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "AND"
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "ISZERO"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPDEST"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPI"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH data",
											"value": "9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "CODECOPY"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "REVERT"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPDEST"
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DUP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SLOAD"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "EXP"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DIV"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "AND"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "ISZERO"
										},
										{
											"begin": 1129,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1129,
											"end": 1164,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1188,
											"name": "DUP1"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "ISZERO"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPI"
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "EXP"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "NOT"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP4"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "OR"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SSTORE"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "POP"
										},
										{
											"begin": 1239,
											"end": 1243,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1225,
											"end": 1236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1236,
											"name": "DUP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "EXP"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SLOAD"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "NOT"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "OR"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SSTORE"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPDEST"
										},
										{
											"begin": 815,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 806,
											"end": 812,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 806,
											"end": 812,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "EXP"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "SLOAD"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "MUL"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "NOT"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "AND"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "DUP4"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "AND"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "MUL"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "OR"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "SSTORE"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "SWAP1"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "SLOAD"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "SWAP1"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "EXP"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "SWAP1"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "DIV"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "AND"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "AND"
										},
										{
											"begin": 865,
											"end": 866,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "AND"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "MLOAD"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "MLOAD"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "DUP1"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "SWAP2"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "SUB"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "SWAP1"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "LOG3"
										},
										{
											"begin": 1268,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "ISZERO"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPI"
										},
										{
											"begin": 1307,
											"end": 1312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "DUP1"
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "EXP"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP2"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SLOAD"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP2"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "MUL"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "NOT"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "AND"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP4"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "ISZERO"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "ISZERO"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "MUL"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "OR"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SSTORE"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPDEST"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPI"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "REVERT"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 2123,
											"end": 2131,
											"name": "DUP2"
										},
										{
											"begin": 2104,
											"end": 2122,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "JUMPDEST"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "POP"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 867,
											"end": 963,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 867,
											"end": 963,
											"name": "JUMPDEST"
										},
										{
											"begin": 912,
											"end": 927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "CALLER"
										},
										{
											"begin": 939,
											"end": 956,
											"name": "SWAP1"
										},
										{
											"begin": 939,
											"end": 956,
											"name": "POP"
										},
										{
											"begin": 867,
											"end": 963,
											"name": "SWAP1"
										},
										{
											"begin": 867,
											"end": 963,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "JUMPDEST"
										},
										{
											"begin": 1456,
											"end": 1460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1809,
											"name": "DUP1"
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "ADDRESS"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1864,
											"end": 1881,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1858,
											"end": 1881,
											"name": "SWAP1"
										},
										{
											"begin": 1858,
											"end": 1881,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "DUP2"
										},
										{
											"begin": 1895,
											"end": 1902,
											"name": "EQ"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP3"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "SWAP1"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2240,
											"end": 2465,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2240,
											"end": 2465,
											"name": "JUMPDEST"
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "AND"
										},
										{
											"begin": 2313,
											"end": 2321,
											"name": "DUP2"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "AND"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "EQ"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "ISZERO"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "JUMPI"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "MLOAD"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "MSTORE"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP3"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "SUB"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP3"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "MSTORE"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "MSTORE"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "SWAP2"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "CODECOPY"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "SWAP2"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "MLOAD"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "SWAP2"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "SUB"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "SWAP1"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "REVERT"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "JUMPDEST"
										},
										{
											"begin": 2422,
											"end": 2430,
											"name": "DUP1"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "AND"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "SWAP1"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "SLOAD"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "SWAP1"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "EXP"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "SWAP1"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DIV"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "AND"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "AND"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "MLOAD"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "MLOAD"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "DUP1"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "SWAP2"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "SUB"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "SWAP1"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "LOG3"
										},
										{
											"begin": 2450,
											"end": 2458,
											"name": "DUP1"
										},
										{
											"begin": 2441,
											"end": 2447,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 2441,
											"end": 2447,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "EXP"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "DUP2"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "SLOAD"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "DUP2"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "MUL"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "NOT"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "AND"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "SWAP1"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "DUP4"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "AND"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "MUL"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "OR"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "SWAP1"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "SSTORE"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "POP"
										},
										{
											"begin": 2240,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2240,
											"end": 2465,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"initialize(address)": "c4d66de8",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be aplied to your functions to restrict their use to the owner.\",\"methods\":{\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"methods": {},
						"title": "SafeERC20"
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":574:3763  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":574:3763  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158205fd660ed6b0a0374fcd101a5912fbd20b6ba5fe2b8a1220486681e96ffc9dd9064736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158205fd660ed6b0a0374fcd101a5912fbd20b6ba5fe2b8a1220486681e96ffc9dd9064736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x5F 0xD6 PUSH1 0xED PUSH12 0xA0374FCD101A5912FBD20B6 0xBA 0x5F 0xE2 0xB8 LOG1 0x22 DIV DUP7 PUSH9 0x1E96FFC9DD9064736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "574:3189:4:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158205fd660ed6b0a0374fcd101a5912fbd20b6ba5fe2b8a1220486681e96ffc9dd9064736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x5F 0xD6 PUSH1 0xED PUSH12 0xA0374FCD101A5912FBD20B6 0xBA 0x5F 0xE2 0xB8 LOG1 0x22 DIV DUP7 PUSH9 0x1E96FFC9DD9064736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "574:3189:4:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 574,
									"end": 3763,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 3763,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158205fd660ed6b0a0374fcd101a5912fbd20b6ba5fe2b8a1220486681e96ffc9dd9064736f6c63430005100032",
									".code": [
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "ADDRESS"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "EQ"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "MSTORE"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "DUP1"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"methods\":{},\"title\":\"SafeERC20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":93:2954  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":93:2954  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820e22c8104947f1ab16e43d7b878e1508570785a803f9ed4ad4390eb542db6d3e664736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e22c8104947f1ab16e43d7b878e1508570785a803f9ed4ad4390eb542db6d3e664736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE2 0x2C DUP2 DIV SWAP5 PUSH32 0x1AB16E43D7B878E1508570785A803F9ED4AD4390EB542DB6D3E664736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "93:2861:5:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e22c8104947f1ab16e43d7b878e1508570785a803f9ed4ad4390eb542db6d3e664736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE2 0x2C DUP2 DIV SWAP5 PUSH32 0x1AB16E43D7B878E1508570785A803F9ED4AD4390EB542DB6D3E664736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "93:2861:5:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"toPayable(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 2954,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 2954,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820e22c8104947f1ab16e43d7b878e1508570785a803f9ed4ad4390eb542db6d3e664736f6c63430005100032",
									".code": [
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "ADDRESS"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "EQ"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "MSTORE"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "DUP1"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. * Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":619:1595  contract ReentrancyGuard is Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":619:1595  contract ReentrancyGuard is Initializable {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":619:1595  contract ReentrancyGuard is Initializable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":619:1595  contract ReentrancyGuard is Initializable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8129fc1c\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":769:983  function initialize() public initializer {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1036  initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n      dup1\n      tag_7\n      jumpi\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      tag_8\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1053  isConstructor */\n      tag_9\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      jump\t// in\n    tag_8:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n    tag_7:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n      dup1\n      tag_10\n      jumpi\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1060:1071  initialized */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1059:1071  !initialized */\n      iszero\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n    tag_10:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1016:1122  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n      tag_11\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_11:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1129:1148  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1152:1164  initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1151:1164  !initializing */\n      iszero\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1129:1164  bool isTopLevelCall = !initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1174:1188  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n      iszero\n      tag_12\n      jumpi\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1213:1217  true */\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1198:1210  initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1198:1217  initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1239:1243  true */\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1225:1236  initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1225:1243  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":975:976  1 */\n      0x01\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":959:972  _guardCounter */\n      0x33\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":959:976  _guardCounter = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1268:1282  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n      iszero\n      tag_14\n      jumpi\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1307:1312  false */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1292:1304  initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1292:1312  initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":769:983  function initialize() public initializer {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1409:1907  function isConstructor() private view returns (bool) {... */\n    tag_9:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1456:1460  bool */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1797:1809  address self */\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1820:1824  this */\n      address\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1797:1825  address self = address(this) */\n      swap1\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1831:1841  uint256 cs */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1876:1880  self */\n      dup2\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1864:1881  extcodesize(self) */\n      extcodesize\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1858:1881  cs := extcodesize(self) */\n      swap1\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1901:1902  0 */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1895:1897  cs */\n      dup2\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1895:1902  cs == 0 */\n      eq\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1888:1902  return cs == 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1409:1907  function isConstructor() private view returns (bool) {... */\n      swap1\n      jump\t// out\n    stop\n    data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4 436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564\n\n    auxdata: 0xa265627a7a72315820290673f8286a7308e9db3c0add6e418f10bec10ae59ae3922668afdd6901914b64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101bb806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638129fc1c14610030575b600080fd5b61003861003a565b005b600060019054906101000a900460ff16806100595750610058610141565b5b8061007057506000809054906101000a900460ff16155b6100c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610159602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610115576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6001603381905550801561013e5760008060016101000a81548160ff0219169083151502179055505b50565b6000803090506000813b905060008114925050509056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820290673f8286a7308e9db3c0add6e418f10bec10ae59ae3922668afdd6901914b64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x59 JUMPI POP PUSH2 0x58 PUSH2 0x141 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x70 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x159 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x33 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP INVALID NUMBER PUSH16 0x6E747261637420696E7374616E636520 PUSH9 0x617320616C72656164 PUSH26 0x206265656E20696E697469616C697A6564A265627A7A72315820 0x29 MOD PUSH20 0xF8286A7308E9DB3C0ADD6E418F10BEC10AE59AE3 SWAP3 0x26 PUSH9 0xAFDD6901914B64736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "619:976:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;619:976:6;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80638129fc1c14610030575b600080fd5b61003861003a565b005b600060019054906101000a900460ff16806100595750610058610141565b5b8061007057506000809054906101000a900460ff16155b6100c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610159602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015610115576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6001603381905550801561013e5760008060016101000a81548160ff0219169083151502179055505b50565b6000803090506000813b905060008114925050509056fe436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820290673f8286a7308e9db3c0add6e418f10bec10ae59ae3922668afdd6901914b64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x59 JUMPI POP PUSH2 0x58 PUSH2 0x141 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x70 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x159 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x33 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP INVALID NUMBER PUSH16 0x6E747261637420696E7374616E636520 PUSH9 0x617320616C72656164 PUSH26 0x206265656E20696E697469616C697A6564A265627A7A72315820 0x29 MOD PUSH20 0xF8286A7308E9DB3C0ADD6E418F10BEC10AE59AE3 SWAP3 0x26 PUSH9 0xAFDD6901914B64736F PUSH13 0x63430005100032000000000000 ",
							"sourceMap": "619:976:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;619:976:6;;;;;;;;;;;;;;;;;;;769:214;;;:::i;:::-;;;1024:12:7;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;975:1:6;959:13;:17;;;;1268:14:7;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;769:214:6;:::o;1409:498:7:-;1456:4;1797:12;1820:4;1797:28;;1831:10;1876:4;1864:17;1858:23;;1901:1;1895:2;:7;1888:14;;;;1409:498;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "88600",
								"executionCost": "135",
								"totalCost": "88735"
							},
							"external": {
								"initialize()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 619,
									"end": 1595,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 619,
									"end": 1595,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 619,
									"end": 1595,
									"name": "MSTORE"
								},
								{
									"begin": 619,
									"end": 1595,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 619,
									"end": 1595,
									"name": "POP"
								},
								{
									"begin": 619,
									"end": 1595,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 619,
									"end": 1595,
									"name": "DUP1"
								},
								{
									"begin": 619,
									"end": 1595,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 619,
									"end": 1595,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 619,
									"end": 1595,
									"name": "CODECOPY"
								},
								{
									"begin": 619,
									"end": 1595,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 619,
									"end": 1595,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820290673f8286a7308e9db3c0add6e418f10bec10ae59ae3922668afdd6901914b64736f6c63430005100032",
									".code": [
										{
											"begin": 619,
											"end": 1595,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "MSTORE"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "POP"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "LT"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "JUMPI"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "SHR"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "DUP1"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "PUSH",
											"value": "8129FC1C"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "EQ"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "JUMPI"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "JUMPDEST"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "DUP1"
										},
										{
											"begin": 619,
											"end": 1595,
											"name": "REVERT"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "STOP"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "EXP"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DIV"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPI"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "POP"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPI"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "POP"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "DUP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SLOAD"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "EXP"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "DIV"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "AND"
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "ISZERO"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPDEST"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPI"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH data",
											"value": "9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "CODECOPY"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "REVERT"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPDEST"
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DUP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SLOAD"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "EXP"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DIV"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "AND"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "ISZERO"
										},
										{
											"begin": 1129,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1129,
											"end": 1164,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1188,
											"name": "DUP1"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "ISZERO"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPI"
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "EXP"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "NOT"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP4"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "OR"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SSTORE"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "POP"
										},
										{
											"begin": 1239,
											"end": 1243,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1225,
											"end": 1236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1236,
											"name": "DUP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "EXP"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SLOAD"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "NOT"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "OR"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SSTORE"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPDEST"
										},
										{
											"begin": 975,
											"end": 976,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 959,
											"end": 972,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 959,
											"end": 976,
											"name": "DUP2"
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1"
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SSTORE"
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "ISZERO"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPI"
										},
										{
											"begin": 1307,
											"end": 1312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "DUP1"
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "EXP"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP2"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SLOAD"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP2"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "MUL"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "NOT"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "AND"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP4"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "ISZERO"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "ISZERO"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "MUL"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "OR"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SSTORE"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPDEST"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "JUMPDEST"
										},
										{
											"begin": 1456,
											"end": 1460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1809,
											"name": "DUP1"
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "ADDRESS"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1864,
											"end": 1881,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1858,
											"end": 1881,
											"name": "SWAP1"
										},
										{
											"begin": 1858,
											"end": 1881,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "DUP2"
										},
										{
											"begin": 1895,
											"end": 1902,
											"name": "EQ"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP3"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "SWAP1"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"initialize()": "8129fc1c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. * Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@openzeppelin/upgrades/contracts/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.",
						"methods": {},
						"title": "Initializable"
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":657:2014  contract Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":657:2014  contract Initializable {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":657:2014  contract Initializable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a7231582010585ba3ab746998d88a3bc074e8cc59292141211ae7bfaa4c14cf0f72062c7e64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a7231582010585ba3ab746998d88a3bc074e8cc59292141211ae7bfaa4c14cf0f72062c7e64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LT PC JUMPDEST LOG3 0xAB PUSH21 0x6998D88A3BC074E8CC59292141211AE7BFAA4C14CF 0xF PUSH19 0x62C7E64736F6C634300051000320000000000 ",
							"sourceMap": "657:1357:7:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;657:1357:7;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea265627a7a7231582010585ba3ab746998d88a3bc074e8cc59292141211ae7bfaa4c14cf0f72062c7e64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LT PC JUMPDEST LOG3 0xAB PUSH21 0x6998D88A3BC074E8CC59292141211AE7BFAA4C14CF 0xF PUSH19 0x62C7E64736F6C634300051000320000000000 ",
							"sourceMap": "657:1357:7:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "66",
								"totalCost": "12466"
							},
							"internal": {
								"isConstructor()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "MSTORE"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "POP"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "DUP1"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "CODECOPY"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 657,
									"end": 2014,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582010585ba3ab746998d88a3bc074e8cc59292141211ae7bfaa4c14cf0f72062c7e64736f6c63430005100032",
									".code": [
										{
											"begin": 657,
											"end": 2014,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "MSTORE"
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "DUP1"
										},
										{
											"begin": 657,
											"end": 2014,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"methods\":{},\"title\":\"Initializable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/upgrades/contracts/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/EasyStaking.sol": {
				"EasyStaking": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "accruedEmission",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "prevDepositDuration",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "FeeSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "value",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "LiquidityProvidersRewardAddressSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "LockAfterStakeDurationSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "b",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "c",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "SigmoidParametersSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "TotalSupplyFactorSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "WithdrawalLockDurationSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "WithdrawalRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "WithdrawalUnlockDurationSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "accruedEmission",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lastDepositDuration",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "MAX_EMISSION_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PARAM_UPDATE_DELAY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "claimTokens",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_depositId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "depositDates",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "feeParam",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "oldValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_depositDate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getAccruedEmission",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "total",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "userShare",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timePassed",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getSigmoidParameters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "b",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "c",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getSupplyBasedEmissionRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_liquidityProvidersRewardAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_withdrawalLockDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_withdrawalUnlockDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockAfterStakeDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_totalSupplyFactor",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_sigmoidParamA",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "_sigmoidParamB",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "_sigmoidParamC",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastDepositIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "liquidityProvidersRewardAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "liquidityProvidersRewardAddressParam",
							"outputs": [
								{
									"internalType": "address",
									"name": "oldValue",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "newValue",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lockAfterStakeDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lockAfterStakeDurationParam",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "oldValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "lockAfterStakeDurationPassed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_depositId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "makeForcedWithdrawal",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_depositId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "makeRequestedWithdrawal",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onTokenTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_depositId",
									"type": "uint256"
								}
							],
							"name": "requestWithdrawal",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "setFee",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setLiquidityProvidersRewardAddress",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "setLockAfterStakeDuration",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_a",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "_b",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "_c",
									"type": "uint256"
								}
							],
							"name": "setSigmoidParameters",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "setTotalSupplyFactor",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "setWithdrawalLockDuration",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "setWithdrawalUnlockDuration",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20Mintable",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupplyFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupplyFactorParam",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "oldValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "withdrawalLockDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "withdrawalLockDurationParam",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "oldValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdrawalRequestsDates",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "withdrawalUnlockDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "withdrawalUnlockDurationParam",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "oldValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newValue",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"claimTokens(address,address,uint256)": {
								"details": "This method is used to claim unsupported tokens accidentally sent to the contract. It can only be called by the owner.",
								"params": {
									"_amount": "Amount to claim.",
									"_to": "The address of the tokens/coins receiver.",
									"_token": "The address of the token contract (zero address for claiming native coins)."
								}
							},
							"deposit(uint256)": {
								"details": "This method is used to deposit tokens to a new deposit. It generates a new deposit ID and calls another public \"deposit\" method. See its description.",
								"params": {
									"_amount": "The amount to deposit."
								}
							},
							"deposit(uint256,uint256)": {
								"details": "This method is used to deposit tokens to the deposit opened before. It calls the internal \"_deposit\" method and transfers tokens from sender to contract. Sender must approve tokens first.     * Instead this, user can use the simple \"transfer\" method of STAKE token contract to make a deposit. Sender's approval is not needed in this case.     * Note: each call updates the deposit date so be careful if you want to make a long staking.",
								"params": {
									"_amount": "The amount to deposit.",
									"_depositId": "User's unique deposit ID."
								}
							},
							"fee()": {
								"return": "Returns current fee."
							},
							"getAccruedEmission(uint256,uint256)": {
								"params": {
									"_amount": "Amount based on which emission is calculated and accrued.",
									"_depositDate": "Deposit date."
								},
								"return": "Total accrued emission (for the user and Liquidity Providers), user share, and seconds passed since the previous deposit started."
							},
							"getSigmoidParameters()": {
								"return": "Sigmoid parameters."
							},
							"getSupplyBasedEmissionRate()": {
								"return": "Emission rate based on the ratio of total staked to total supply."
							},
							"initialize(address)": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"initialize(address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,int256,uint256)": {
								"details": "Initializes the contract.",
								"params": {
									"_fee": "The fee of the forced withdrawal (in percentage).",
									"_liquidityProvidersRewardAddress": "The address for the Liquidity Providers reward.",
									"_owner": "The owner of the contract.",
									"_sigmoidParamA": "Sigmoid parameter A.",
									"_sigmoidParamB": "Sigmoid parameter B.",
									"_sigmoidParamC": "Sigmoid parameter C.",
									"_tokenAddress": "The address of the STAKE token contract.",
									"_totalSupplyFactor": "Total supply factor for calculating emission rate (in percentage).",
									"_withdrawalLockDuration": "The time from the request after which the withdrawal will be available (in seconds).",
									"_withdrawalUnlockDuration": "The time during which the withdrawal will be available from the moment of unlocking (in seconds)."
								}
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"liquidityProvidersRewardAddress()": {
								"return": "Returns current liquidity providers reward address."
							},
							"lockAfterStakeDuration()": {
								"return": "Returns current lock after stake duration."
							},
							"makeForcedWithdrawal(uint256,uint256)": {
								"details": "This method is used to make a forced withdrawal with a fee. It calls the internal \"_withdraw\" method.",
								"params": {
									"_amount": "The amount to withdraw (0 - to withdraw all).",
									"_depositId": "User's unique deposit ID."
								}
							},
							"makeRequestedWithdrawal(uint256,uint256)": {
								"details": "This method is used to make a requested withdrawal. It calls the internal \"_withdraw\" method and resets the date of the request.     * If sender didn't call this method during the unlock period (if timestamp >= lockEnd + withdrawalUnlockDuration) they have to call \"requestWithdrawal\" one more time.",
								"params": {
									"_amount": "The amount to withdraw (0 - to withdraw all).",
									"_depositId": "User's unique deposit ID."
								}
							},
							"onTokenTransfer(address,uint256,bytes)": {
								"details": "This method is called when STAKE tokens are transferred to this contract. using \"transfer\", \"transferFrom\", or \"transferAndCall\" method of STAKE token contract. It generates a new deposit ID and calls the internal \"_deposit\" method.",
								"params": {
									"_amount": "The transferred amount.",
									"_sender": "The sender of tokens."
								},
								"return": "true if successful"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"requestWithdrawal(uint256)": {
								"details": "This method is used to request a withdrawal without a fee. It sets the date of the request.     * Note: each call updates the date of the request so don't call this method twice during the lock.",
								"params": {
									"_depositId": "User's unique deposit ID."
								}
							},
							"setFee(uint256)": {
								"details": "Sets the fee for forced withdrawals. Can only be called by owner.",
								"params": {
									"_value": "The new fee value (in percentage)."
								}
							},
							"setLiquidityProvidersRewardAddress(address)": {
								"details": "Sets the address for the Liquidity Providers reward. Can only be called by owner.",
								"params": {
									"_address": "The new address."
								}
							},
							"setLockAfterStakeDuration(uint256)": {
								"details": "Sets the time from the initial stake after which withdrawals are allowed Can only be called by owner.",
								"params": {
									"_value": "The new duration value (in seconds)."
								}
							},
							"setSigmoidParameters(uint256,int256,uint256)": {
								"details": "Sets parameters of the sigmoid that is used to calculate the user's current emission rate. Can only be called by owner.",
								"params": {
									"_a": "Sigmoid parameter A. Unsigned integer.",
									"_b": "Sigmoid parameter B. Signed integer.",
									"_c": "Sigmoid parameter C. Unsigned integer. Cannot be zero."
								}
							},
							"setTotalSupplyFactor(uint256)": {
								"details": "Sets total supply factor for calculating emission rate. Can only be called by owner.",
								"params": {
									"_value": "The new factor value (in percentage)."
								}
							},
							"setWithdrawalLockDuration(uint256)": {
								"details": "Sets the time from the request after which the withdrawal will be available. Can only be called by owner.",
								"params": {
									"_value": "The new duration value (in seconds)."
								}
							},
							"setWithdrawalUnlockDuration(uint256)": {
								"details": "Sets the time during which the withdrawal will be available from the moment of unlocking. Can only be called by owner.",
								"params": {
									"_value": "The new duration value (in seconds)."
								}
							},
							"totalSupplyFactor()": {
								"return": "Returns current total supply factor."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawalLockDuration()": {
								"return": "Returns current withdrawal lock duration."
							},
							"withdrawalUnlockDuration()": {
								"return": "Returns current withdrawal unlock duration."
							}
						},
						"title": "EasyStaking * Note: all percentage values are between 0 (0%) and 1 (100%) and represented as fixed point numbers containing 18 decimals like with Ether 100% == 1 ether"
					},
					"evm": {
						"assembly": "    /* \"contracts/EasyStaking.sol\":722:25659  contract EasyStaking is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/EasyStaking.sol\":722:25659  contract EasyStaking is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/EasyStaking.sol\":722:25659  contract EasyStaking is Ownable, ReentrancyGuard {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8b53ccb3\n      gt\n      tag_48\n      jumpi\n      dup1\n      0xc3bd8fd0\n      gt\n      tag_49\n      jumpi\n      dup1\n      0xdb51ef92\n      gt\n      tag_50\n      jumpi\n      dup1\n      0xdb51ef92\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xddca3f43\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xe0648a28\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_47\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0xc3bd8fd0\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xc5401ce3\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xca758993\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xcbf1304d\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xd6463151\n      eq\n      tag_41\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x97559cdc\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x97559cdc\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x9ee679e8\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x9fc314c8\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xa4c0ed36\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xb4a86c48\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_35\n      jumpi\n      jump(tag_2)\n    tag_51:\n      dup1\n      0x8b53ccb3\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8df67680\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x94967fa1\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0x5e9e230d\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x74949b6d\n      gt\n      tag_53\n      jumpi\n      dup1\n      0x74949b6d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x75fa901b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8235c378\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x868867b5\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_53:\n      dup1\n      0x5e9e230d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x60c251c1\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x60d4ffb0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x69fe0e2d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_52:\n      dup1\n      0x294a5b04\n      gt\n      tag_54\n      jumpi\n      dup1\n      0x294a5b04\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2c3144da\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x41682990\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x436cc3d6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x47e318de\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x522ea5e2\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_54:\n      dup1\n      0x03d6d343\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0e559215\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18194359\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18cca7a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x224313fa\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/EasyStaking.sol\":5492:5536  UintParam public lockAfterStakeDurationParam */\n    tag_3:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":18036:18262  function lockAfterStakeDurationPassed(address _sender, uint256 _id) public view returns (bool) {... */\n    tag_4:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_58\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_58:\n        /* \"contracts/EasyStaking.sol\":18036:18262  function lockAfterStakeDurationPassed(address _sender, uint256 _id) public view returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":4970:5026  AddressParam public liquidityProvidersRewardAddressParam */\n    tag_5:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":11853:12442  function makeRequestedWithdrawal(uint256 _depositId, uint256 _amount) external {... */\n    tag_6:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n        /* \"contracts/EasyStaking.sol\":11853:12442  function makeRequestedWithdrawal(uint256 _depositId, uint256 _amount) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/EasyStaking.sol\":14135:14406  function setWithdrawalLockDuration(uint256 _value) public onlyOwner {... */\n    tag_7:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n        /* \"contracts/EasyStaking.sol\":14135:14406  function setWithdrawalLockDuration(uint256 _value) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/EasyStaking.sol\":16086:16397  function setSigmoidParameters(uint256 _a, int256 _b, uint256 _c) public onlyOwner {... */\n    tag_8:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"contracts/EasyStaking.sol\":16086:16397  function setSigmoidParameters(uint256 _a, int256 _b, uint256 _c) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/EasyStaking.sol\":5210:5254  UintParam public withdrawalLockDurationParam */\n    tag_9:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":15481:15743  function setTotalSupplyFactor(uint256 _value) public onlyOwner {... */\n    tag_10:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_74\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_74:\n        /* \"contracts/EasyStaking.sol\":15481:15743  function setTotalSupplyFactor(uint256 _value) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/EasyStaking.sol\":4437:4491  uint256 public constant MAX_EMISSION_RATE = 150 finney */\n    tag_11:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":5088:5113  UintParam public feeParam */\n    tag_12:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":18336:18461  function totalSupplyFactor() public view returns (uint256) {... */\n    tag_13:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":5364:5410  UintParam public withdrawalUnlockDurationParam */\n    tag_14:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":17460:17595  function withdrawalLockDuration() public view returns (uint256) {... */\n    tag_15:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":19702:20473  function getAccruedEmission(... */\n    tag_16:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_87\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_87:\n        /* \"contracts/EasyStaking.sol\":19702:20473  function getAccruedEmission(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":13789:13930  function setFee(uint256 _value) public onlyOwner {... */\n    tag_17:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_90\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_90:\n        /* \"contracts/EasyStaking.sol\":13789:13930  function setFee(uint256 _value) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1746:1883  function renounceOwnership() public onlyOwner {... */\n    tag_18:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/EasyStaking.sol\":15098:15296  function setLockAfterStakeDuration(uint256 _value) public onlyOwner {... */\n    tag_19:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_95:\n        /* \"contracts/EasyStaking.sol\":15098:15296  function setLockAfterStakeDuration(uint256 _value) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_96\n      jump\t// in\n    tag_94:\n      stop\n        /* \"contracts/EasyStaking.sol\":20530:20662  function getSigmoidParameters() public view returns (uint256 a, int256 b, uint256 c) {... */\n    tag_20:\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":769:983  function initialize() public initializer {... */\n    tag_21:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/EasyStaking.sol\":6127:6153  uint256 public totalStaked */\n    tag_22:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":18899:19414  function getSupplyBasedEmissionRate() public view returns (uint256) {... */\n    tag_23:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":14624:14897  function setWithdrawalUnlockDuration(uint256 _value) public onlyOwner {... */\n    tag_24:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_106:\n        /* \"contracts/EasyStaking.sol\":14624:14897  function setWithdrawalUnlockDuration(uint256 _value) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_107\n      jump\t// in\n    tag_105:\n      stop\n        /* \"contracts/EasyStaking.sol\":5805:5874  mapping (address => mapping (uint256 => uint256)) public depositDates */\n    tag_25:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_109\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_109:\n        /* \"contracts/EasyStaking.sol\":5805:5874  mapping (address => mapping (uint256 => uint256)) public depositDates */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_110\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":959:1036  function owner() public view returns (address) {... */\n    tag_26:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":17676:17815  function withdrawalUnlockDuration() public view returns (uint256) {... */\n    tag_27:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1310:1402  function isOwner() public view returns (bool) {... */\n    tag_28:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":10644:10785  function makeForcedWithdrawal(uint256 _depositId, uint256 _amount) external {... */\n    tag_29:\n      tag_117\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_118\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_118:\n        /* \"contracts/EasyStaking.sol\":10644:10785  function makeForcedWithdrawal(uint256 _depositId, uint256 _amount) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_119\n      jump\t// in\n    tag_117:\n      stop\n        /* \"contracts/EasyStaking.sol\":17895:18030  function lockAfterStakeDuration() public view returns (uint256) {... */\n    tag_30:\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":11087:11371  function requestWithdrawal(uint256 _depositId) external {... */\n    tag_31:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_123\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_123:\n        /* \"contracts/EasyStaking.sol\":11087:11371  function requestWithdrawal(uint256 _depositId) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_124\n      jump\t// in\n    tag_122:\n      stop\n        /* \"contracts/EasyStaking.sol\":12798:13633  function claimTokens(address _token, address payable _to, uint256 _amount) external onlyOwner {... */\n    tag_32:\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_126\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_126:\n        /* \"contracts/EasyStaking.sol\":12798:13633  function claimTokens(address _token, address payable _to, uint256 _amount) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_127\n      jump\t// in\n    tag_125:\n      stop\n        /* \"contracts/EasyStaking.sol\":10074:10382  function onTokenTransfer(address _sender, uint256 _amount, bytes calldata) external returns (bool) {... */\n    tag_33:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_129:\n        /* \"contracts/EasyStaking.sol\":10074:10382  function onTokenTransfer(address _sender, uint256 _amount, bytes calldata) external returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_130\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_130:\n        /* \"contracts/EasyStaking.sol\":10074:10382  function onTokenTransfer(address _sender, uint256 _amount, bytes calldata) external returns (bool) {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_131\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_131:\n        /* \"contracts/EasyStaking.sol\":10074:10382  function onTokenTransfer(address _sender, uint256 _amount, bytes calldata) external returns (bool) {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_132:\n        /* \"contracts/EasyStaking.sol\":10074:10382  function onTokenTransfer(address _sender, uint256 _amount, bytes calldata) external returns (bool) {... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap2\n      swap3\n      swap4\n      swap1\n      pop\n      pop\n      pop\n      tag_133\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":5615:5654  UintParam public totalSupplyFactorParam */\n    tag_34:\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":8592:8698  function deposit(uint256 _amount) external {... */\n    tag_35:\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_137\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_137:\n        /* \"contracts/EasyStaking.sol\":8592:8698  function deposit(uint256 _amount) external {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_138\n      jump\t// in\n    tag_136:\n      stop\n        /* \"contracts/EasyStaking.sol\":6040:6090  mapping (address => uint256) public lastDepositIds */\n    tag_36:\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_140\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_140:\n        /* \"contracts/EasyStaking.sol\":6040:6090  mapping (address => uint256) public lastDepositIds */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_141\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":741:883  function initialize(address sender) public initializer {... */\n    tag_37:\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_143\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_143:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":741:883  function initialize(address sender) public initializer {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_144\n      jump\t// in\n    tag_142:\n      stop\n        /* \"contracts/EasyStaking.sol\":18550:18796  function liquidityProvidersRewardAddress() public view returns (address) {... */\n    tag_38:\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":7213:8356  function initialize(... */\n    tag_39:\n      tag_147\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x0160\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_148\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_148:\n        /* \"contracts/EasyStaking.sol\":7213:8356  function initialize(... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_149\n      jump\t// in\n    tag_147:\n      stop\n        /* \"contracts/EasyStaking.sol\":5698:5763  mapping (address => mapping (uint256 => uint256)) public balances */\n    tag_40:\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_151\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_151:\n        /* \"contracts/EasyStaking.sol\":5698:5763  mapping (address => mapping (uint256 => uint256)) public balances */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_152\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":16560:17226  function setLiquidityProvidersRewardAddress(address _address) public onlyOwner {... */\n    tag_41:\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_154\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_154:\n        /* \"contracts/EasyStaking.sol\":16560:17226  function setLiquidityProvidersRewardAddress(address _address) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_155\n      jump\t// in\n    tag_153:\n      stop\n        /* \"contracts/EasyStaking.sol\":4584:4635  uint256 public constant PARAM_UPDATE_DELAY = 7 days */\n    tag_42:\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":17284:17381  function fee() public view returns (uint256) {... */\n    tag_43:\n      tag_158\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":5927:6007  mapping (address => mapping (uint256 => uint256)) public withdrawalRequestsDates */\n    tag_44:\n      tag_160\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_161\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_161:\n        /* \"contracts/EasyStaking.sol\":5927:6007  mapping (address => mapping (uint256 => uint256)) public withdrawalRequestsDates */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_162\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":9308:9669  function deposit(uint256 _depositId, uint256 _amount) public {... */\n    tag_45:\n      tag_163\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_164\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_164:\n        /* \"contracts/EasyStaking.sol\":9308:9669  function deposit(uint256 _depositId, uint256 _amount) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_165\n      jump\t// in\n    tag_163:\n      stop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2032:2139  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_46:\n      tag_166\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_167\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_167:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2032:2139  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_168\n      jump\t// in\n    tag_166:\n      stop\n        /* \"contracts/EasyStaking.sol\":4661:4688  IERC20Mintable public token */\n    tag_47:\n      tag_169\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/EasyStaking.sol\":5492:5536  UintParam public lockAfterStakeDurationParam */\n    tag_56:\n      0xa6\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":18036:18262  function lockAfterStakeDurationPassed(address _sender, uint256 _id) public view returns (bool) {... */\n    tag_59:\n        /* \"contracts/EasyStaking.sol\":18125:18129  bool */\n      0x00\n        /* \"contracts/EasyStaking.sol\":18141:18159  uint256 timePassed */\n      dup1\n        /* \"contracts/EasyStaking.sol\":18162:18200  _now().sub(depositDates[_sender][_id]) */\n      tag_172\n        /* \"contracts/EasyStaking.sol\":18173:18185  depositDates */\n      0xad\n        /* \"contracts/EasyStaking.sol\":18173:18194  depositDates[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":18186:18193  _sender */\n      dup7\n        /* \"contracts/EasyStaking.sol\":18173:18194  depositDates[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":18173:18199  depositDates[_sender][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":18195:18198  _id */\n      dup6\n        /* \"contracts/EasyStaking.sol\":18173:18199  depositDates[_sender][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":18162:18168  _now() */\n      tag_173\n        /* \"contracts/EasyStaking.sol\":18162:18166  _now */\n      tag_174\n        /* \"contracts/EasyStaking.sol\":18162:18168  _now() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/EasyStaking.sol\":18162:18172  _now().sub */\n      tag_175\n      swap1\n        /* \"contracts/EasyStaking.sol\":18162:18200  _now().sub(depositDates[_sender][_id]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"contracts/EasyStaking.sol\":18141:18200  uint256 timePassed = _now().sub(depositDates[_sender][_id]) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":18231:18255  lockAfterStakeDuration() */\n      tag_176\n        /* \"contracts/EasyStaking.sol\":18231:18253  lockAfterStakeDuration */\n      tag_121\n        /* \"contracts/EasyStaking.sol\":18231:18255  lockAfterStakeDuration() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/EasyStaking.sol\":18217:18227  timePassed */\n      dup2\n        /* \"contracts/EasyStaking.sol\":18217:18255  timePassed >= lockAfterStakeDuration() */\n      lt\n      iszero\n        /* \"contracts/EasyStaking.sol\":18210:18255  return timePassed >= lockAfterStakeDuration() */\n      swap2\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":18036:18262  function lockAfterStakeDurationPassed(address _sender, uint256 _id) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":4970:5026  AddressParam public liquidityProvidersRewardAddressParam */\n    tag_61:\n      0x9a\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":11853:12442  function makeRequestedWithdrawal(uint256 _depositId, uint256 _amount) external {... */\n    tag_64:\n        /* \"contracts/EasyStaking.sol\":11942:11961  uint256 requestDate */\n      0x00\n        /* \"contracts/EasyStaking.sol\":11964:11987  withdrawalRequestsDates */\n      0xae\n        /* \"contracts/EasyStaking.sol\":11964:11999  withdrawalRequestsDates[msg.sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":11988:11998  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":11964:11999  withdrawalRequestsDates[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":11964:12011  withdrawalRequestsDates[msg.sender][_depositId] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":12000:12010  _depositId */\n      dup5\n        /* \"contracts/EasyStaking.sol\":11964:12011  withdrawalRequestsDates[msg.sender][_depositId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":11942:12011  uint256 requestDate = withdrawalRequestsDates[msg.sender][_depositId] */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":12043:12044  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":12029:12040  requestDate */\n      dup2\n        /* \"contracts/EasyStaking.sol\":12029:12044  requestDate > 0 */\n      gt\n        /* \"contracts/EasyStaking.sol\":12021:12076  require(requestDate > 0, \"withdrawal wasn't requested\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7769746864726177616c207761736e2774207265717565737465640000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"contracts/EasyStaking.sol\":12086:12103  uint256 timestamp */\n      0x00\n        /* \"contracts/EasyStaking.sol\":12106:12112  _now() */\n      tag_179\n        /* \"contracts/EasyStaking.sol\":12106:12110  _now */\n      tag_174\n        /* \"contracts/EasyStaking.sol\":12106:12112  _now() */\n      jump\t// in\n    tag_179:\n        /* \"contracts/EasyStaking.sol\":12086:12112  uint256 timestamp = _now() */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":12122:12137  uint256 lockEnd */\n      0x00\n        /* \"contracts/EasyStaking.sol\":12140:12181  requestDate.add(withdrawalLockDuration()) */\n      tag_180\n        /* \"contracts/EasyStaking.sol\":12156:12180  withdrawalLockDuration() */\n      tag_181\n        /* \"contracts/EasyStaking.sol\":12156:12178  withdrawalLockDuration */\n      tag_85\n        /* \"contracts/EasyStaking.sol\":12156:12180  withdrawalLockDuration() */\n      jump\t// in\n    tag_181:\n        /* \"contracts/EasyStaking.sol\":12140:12151  requestDate */\n      dup5\n        /* \"contracts/EasyStaking.sol\":12140:12155  requestDate.add */\n      tag_182\n      swap1\n        /* \"contracts/EasyStaking.sol\":12140:12181  requestDate.add(withdrawalLockDuration()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n        /* \"contracts/EasyStaking.sol\":12122:12181  uint256 lockEnd = requestDate.add(withdrawalLockDuration()) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":12212:12219  lockEnd */\n      dup1\n        /* \"contracts/EasyStaking.sol\":12199:12208  timestamp */\n      dup3\n        /* \"contracts/EasyStaking.sol\":12199:12219  timestamp >= lockEnd */\n      lt\n      iszero\n        /* \"contracts/EasyStaking.sol\":12191:12233  require(timestamp >= lockEnd, \"too early\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x746f6f206561726c790000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/EasyStaking.sol\":12263:12302  lockEnd.add(withdrawalUnlockDuration()) */\n      tag_184\n        /* \"contracts/EasyStaking.sol\":12275:12301  withdrawalUnlockDuration() */\n      tag_185\n        /* \"contracts/EasyStaking.sol\":12275:12299  withdrawalUnlockDuration */\n      tag_114\n        /* \"contracts/EasyStaking.sol\":12275:12301  withdrawalUnlockDuration() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/EasyStaking.sol\":12263:12270  lockEnd */\n      dup3\n        /* \"contracts/EasyStaking.sol\":12263:12274  lockEnd.add */\n      tag_182\n      swap1\n        /* \"contracts/EasyStaking.sol\":12263:12302  lockEnd.add(withdrawalUnlockDuration()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"contracts/EasyStaking.sol\":12251:12260  timestamp */\n      dup3\n        /* \"contracts/EasyStaking.sol\":12251:12302  timestamp < lockEnd.add(withdrawalUnlockDuration()) */\n      lt\n        /* \"contracts/EasyStaking.sol\":12243:12315  require(timestamp < lockEnd.add(withdrawalUnlockDuration()), \"too late\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x746f6f206c617465000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"contracts/EasyStaking.sol\":12375:12376  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":12325:12348  withdrawalRequestsDates */\n      0xae\n        /* \"contracts/EasyStaking.sol\":12325:12360  withdrawalRequestsDates[msg.sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":12349:12359  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":12325:12360  withdrawalRequestsDates[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":12325:12372  withdrawalRequestsDates[msg.sender][_depositId] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":12361:12371  _depositId */\n      dup8\n        /* \"contracts/EasyStaking.sol\":12325:12372  withdrawalRequestsDates[msg.sender][_depositId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":12325:12376  withdrawalRequestsDates[msg.sender][_depositId] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":12386:12435  _withdraw(msg.sender, _depositId, _amount, false) */\n      tag_187\n        /* \"contracts/EasyStaking.sol\":12396:12406  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":12408:12418  _depositId */\n      dup7\n        /* \"contracts/EasyStaking.sol\":12420:12427  _amount */\n      dup7\n        /* \"contracts/EasyStaking.sol\":12429:12434  false */\n      0x00\n        /* \"contracts/EasyStaking.sol\":12386:12395  _withdraw */\n      tag_188\n        /* \"contracts/EasyStaking.sol\":12386:12435  _withdraw(msg.sender, _depositId, _amount, false) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/EasyStaking.sol\":11853:12442  function makeRequestedWithdrawal(uint256 _depositId, uint256 _amount) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":14135:14406  function setWithdrawalLockDuration(uint256 _value) public onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      tag_190\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1170  isOwner */\n      tag_116\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1155:1209  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/EasyStaking.sol\":14231:14238  30 days */\n      0x278d00\n        /* \"contracts/EasyStaking.sol\":14221:14227  _value */\n      dup2\n        /* \"contracts/EasyStaking.sol\":14221:14238  _value <= 30 days */\n      gt\n      iszero\n        /* \"contracts/EasyStaking.sol\":14213:14276  require(_value <= 30 days, \"shouldn't be greater than 30 days\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_efcc4c1bf2d1d2579b900a9df600f3c0d822d0a6e5ef236f035bfce4f914ebf5\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"contracts/EasyStaking.sol\":14286:14339  _updateUintParam(withdrawalLockDurationParam, _value) */\n      tag_194\n        /* \"contracts/EasyStaking.sol\":14303:14330  withdrawalLockDurationParam */\n      0xa0\n        /* \"contracts/EasyStaking.sol\":14332:14338  _value */\n      dup3\n        /* \"contracts/EasyStaking.sol\":14286:14302  _updateUintParam */\n      tag_195\n        /* \"contracts/EasyStaking.sol\":14286:14339  _updateUintParam(withdrawalLockDurationParam, _value) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/EasyStaking.sol\":14354:14399  WithdrawalLockDurationSet(_value, msg.sender) */\n      0xb1effbb8dc5cfa97751137110a061198891986f1567677e11ec9449743180f74\n        /* \"contracts/EasyStaking.sol\":14380:14386  _value */\n      dup2\n        /* \"contracts/EasyStaking.sol\":14388:14398  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":14354:14399  WithdrawalLockDurationSet(_value, msg.sender) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/EasyStaking.sol\":14135:14406  function setWithdrawalLockDuration(uint256 _value) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":16086:16397  function setSigmoidParameters(uint256 _a, int256 _b, uint256 _c) public onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      tag_197\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1170  isOwner */\n      tag_116\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1155:1209  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"contracts/EasyStaking.sol\":16192:16216  MAX_EMISSION_RATE.div(2) */\n      tag_200\n        /* \"contracts/EasyStaking.sol\":16214:16215  2 */\n      0x02\n        /* \"contracts/EasyStaking.sol\":4481:4491  150 finney */\n      0x0214e8348c4f0000\n        /* \"contracts/EasyStaking.sol\":16192:16213  MAX_EMISSION_RATE.div */\n      tag_201\n      swap1\n        /* \"contracts/EasyStaking.sol\":16192:16216  MAX_EMISSION_RATE.div(2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/EasyStaking.sol\":16186:16188  _a */\n      dup4\n        /* \"contracts/EasyStaking.sol\":16186:16216  _a <= MAX_EMISSION_RATE.div(2) */\n      gt\n      iszero\n        /* \"contracts/EasyStaking.sol\":16178:16288  require(_a <= MAX_EMISSION_RATE.div(2), \"should be less than or equal to a half of the maximum emission rate\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x43\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_4998dfccf9aebf799608e8abb3a4403d6d01bdd7d35c16885304d7b267aa9576\n      0x43\n      swap2\n      codecopy\n      0x60\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"contracts/EasyStaking.sol\":16298:16331  sigmoid.setParameters(_a, _b, _c) */\n      tag_203\n        /* \"contracts/EasyStaking.sol\":16320:16322  _a */\n      dup4\n        /* \"contracts/EasyStaking.sol\":16324:16326  _b */\n      dup4\n        /* \"contracts/EasyStaking.sol\":16328:16330  _c */\n      dup4\n        /* \"contracts/EasyStaking.sol\":16298:16305  sigmoid */\n      0xb2\n        /* \"contracts/EasyStaking.sol\":16298:16319  sigmoid.setParameters */\n      tag_204\n      swap1\n        /* \"contracts/EasyStaking.sol\":16298:16331  sigmoid.setParameters(_a, _b, _c) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"contracts/EasyStaking.sol\":16346:16390  SigmoidParametersSet(_a, _b, _c, msg.sender) */\n      0xddf30262673035378258d8aab83a68d6d8b8e45e5510d3b295fcc7cd65c6378a\n        /* \"contracts/EasyStaking.sol\":16367:16369  _a */\n      dup4\n        /* \"contracts/EasyStaking.sol\":16371:16373  _b */\n      dup4\n        /* \"contracts/EasyStaking.sol\":16375:16377  _c */\n      dup4\n        /* \"contracts/EasyStaking.sol\":16379:16389  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":16346:16390  SigmoidParametersSet(_a, _b, _c, msg.sender) */\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/EasyStaking.sol\":16086:16397  function setSigmoidParameters(uint256 _a, int256 _b, uint256 _c) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":5210:5254  UintParam public withdrawalLockDurationParam */\n    tag_72:\n      0xa0\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":15481:15743  function setTotalSupplyFactor(uint256 _value) public onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      tag_206\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1170  isOwner */\n      tag_116\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1155:1209  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"contracts/EasyStaking.sol\":15572:15579  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/EasyStaking.sol\":15562:15568  _value */\n      dup2\n        /* \"contracts/EasyStaking.sol\":15562:15579  _value <= 1 ether */\n      gt\n      iszero\n        /* \"contracts/EasyStaking.sol\":15554:15623  require(_value <= 1 ether, \"should be less than or equal to 1 ether\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_df908f90cdd1684dfaa27aae3563b8fc031d301853c805a295067181cd132d8d\n      0x27\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/EasyStaking.sol\":15633:15681  _updateUintParam(totalSupplyFactorParam, _value) */\n      tag_210\n        /* \"contracts/EasyStaking.sol\":15650:15672  totalSupplyFactorParam */\n      0xa9\n        /* \"contracts/EasyStaking.sol\":15674:15680  _value */\n      dup3\n        /* \"contracts/EasyStaking.sol\":15633:15649  _updateUintParam */\n      tag_195\n        /* \"contracts/EasyStaking.sol\":15633:15681  _updateUintParam(totalSupplyFactorParam, _value) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/EasyStaking.sol\":15696:15736  TotalSupplyFactorSet(_value, msg.sender) */\n      0xb7b23f70fe41cd9debaaa54902f2492c79f94d7582d587844dc12fdc8fc42a2b\n        /* \"contracts/EasyStaking.sol\":15717:15723  _value */\n      dup2\n        /* \"contracts/EasyStaking.sol\":15725:15735  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":15696:15736  TotalSupplyFactorSet(_value, msg.sender) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/EasyStaking.sol\":15481:15743  function setTotalSupplyFactor(uint256 _value) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":4437:4491  uint256 public constant MAX_EMISSION_RATE = 150 finney */\n    tag_77:\n        /* \"contracts/EasyStaking.sol\":4481:4491  150 finney */\n      0x0214e8348c4f0000\n        /* \"contracts/EasyStaking.sol\":4437:4491  uint256 public constant MAX_EMISSION_RATE = 150 finney */\n      dup2\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":5088:5113  UintParam public feeParam */\n    tag_79:\n      0x9d\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":18336:18461  function totalSupplyFactor() public view returns (uint256) {... */\n    tag_81:\n        /* \"contracts/EasyStaking.sol\":18386:18393  uint256 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":18412:18454  _getUintParamValue(totalSupplyFactorParam) */\n      tag_212\n        /* \"contracts/EasyStaking.sol\":18431:18453  totalSupplyFactorParam */\n      0xa9\n        /* \"contracts/EasyStaking.sol\":18412:18454  _getUintParamValue(totalSupplyFactorParam) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":18412:18430  _getUintParamValue */\n      tag_213\n        /* \"contracts/EasyStaking.sol\":18412:18454  _getUintParamValue(totalSupplyFactorParam) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/EasyStaking.sol\":18405:18454  return _getUintParamValue(totalSupplyFactorParam) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":18336:18461  function totalSupplyFactor() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":5364:5410  UintParam public withdrawalUnlockDurationParam */\n    tag_83:\n      0xa3\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":17460:17595  function withdrawalLockDuration() public view returns (uint256) {... */\n    tag_85:\n        /* \"contracts/EasyStaking.sol\":17515:17522  uint256 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":17541:17588  _getUintParamValue(withdrawalLockDurationParam) */\n      tag_215\n        /* \"contracts/EasyStaking.sol\":17560:17587  withdrawalLockDurationParam */\n      0xa0\n        /* \"contracts/EasyStaking.sol\":17541:17588  _getUintParamValue(withdrawalLockDurationParam) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":17541:17559  _getUintParamValue */\n      tag_213\n        /* \"contracts/EasyStaking.sol\":17541:17588  _getUintParamValue(withdrawalLockDurationParam) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/EasyStaking.sol\":17534:17588  return _getUintParamValue(withdrawalLockDurationParam) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":17460:17595  function withdrawalLockDuration() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":19702:20473  function getAccruedEmission(... */\n    tag_88:\n        /* \"contracts/EasyStaking.sol\":19812:19825  uint256 total */\n      0x00\n        /* \"contracts/EasyStaking.sol\":19827:19844  uint256 userShare */\n      dup1\n        /* \"contracts/EasyStaking.sol\":19846:19864  uint256 timePassed */\n      0x00\n        /* \"contracts/EasyStaking.sol\":19891:19892  0 */\n      dup1\n        /* \"contracts/EasyStaking.sol\":19880:19887  _amount */\n      dup5\n        /* \"contracts/EasyStaking.sol\":19880:19892  _amount == 0 */\n      eq\n        /* \"contracts/EasyStaking.sol\":19880:19913  _amount == 0 || _depositDate == 0 */\n      dup1\n      tag_217\n      jumpi\n      pop\n        /* \"contracts/EasyStaking.sol\":19912:19913  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":19896:19908  _depositDate */\n      dup6\n        /* \"contracts/EasyStaking.sol\":19896:19913  _depositDate == 0 */\n      eq\n        /* \"contracts/EasyStaking.sol\":19880:19913  _amount == 0 || _depositDate == 0 */\n    tag_217:\n        /* \"contracts/EasyStaking.sol\":19876:19931  if (_amount == 0 || _depositDate == 0) return (0, 0, 0) */\n      iszero\n      tag_218\n      jumpi\n        /* \"contracts/EasyStaking.sol\":19923:19924  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":19926:19927  0 */\n      dup1\n        /* \"contracts/EasyStaking.sol\":19929:19930  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":19915:19931  return (0, 0, 0) */\n      dup3\n      swap3\n      pop\n      dup2\n      swap2\n      pop\n      dup1\n      swap1\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_216)\n        /* \"contracts/EasyStaking.sol\":19876:19931  if (_amount == 0 || _depositDate == 0) return (0, 0, 0) */\n    tag_218:\n        /* \"contracts/EasyStaking.sol\":19954:19978  _now().sub(_depositDate) */\n      tag_219\n        /* \"contracts/EasyStaking.sol\":19965:19977  _depositDate */\n      dup6\n        /* \"contracts/EasyStaking.sol\":19954:19960  _now() */\n      tag_220\n        /* \"contracts/EasyStaking.sol\":19954:19958  _now */\n      tag_174\n        /* \"contracts/EasyStaking.sol\":19954:19960  _now() */\n      jump\t// in\n    tag_220:\n        /* \"contracts/EasyStaking.sol\":19954:19964  _now().sub */\n      tag_175\n      swap1\n        /* \"contracts/EasyStaking.sol\":19954:19978  _now().sub(_depositDate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_219:\n        /* \"contracts/EasyStaking.sol\":19941:19978  timePassed = _now().sub(_depositDate) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":20006:20007  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":19992:20002  timePassed */\n      dup2\n        /* \"contracts/EasyStaking.sol\":19992:20007  timePassed == 0 */\n      eq\n        /* \"contracts/EasyStaking.sol\":19988:20025  if (timePassed == 0) return (0, 0, 0) */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/EasyStaking.sol\":20017:20018  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":20020:20021  0 */\n      dup1\n        /* \"contracts/EasyStaking.sol\":20023:20024  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":20009:20025  return (0, 0, 0) */\n      dup3\n      swap3\n      pop\n      dup2\n      swap2\n      pop\n      dup1\n      swap1\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_216)\n        /* \"contracts/EasyStaking.sol\":19988:20025  if (timePassed == 0) return (0, 0, 0) */\n    tag_221:\n        /* \"contracts/EasyStaking.sol\":20035:20059  uint256 userEmissionRate */\n      0x00\n        /* \"contracts/EasyStaking.sol\":20062:20099  sigmoid.calculate(int256(timePassed)) */\n      tag_222\n        /* \"contracts/EasyStaking.sol\":20087:20097  timePassed */\n      dup3\n        /* \"contracts/EasyStaking.sol\":20062:20069  sigmoid */\n      0xb2\n        /* \"contracts/EasyStaking.sol\":20062:20079  sigmoid.calculate */\n      tag_223\n      swap1\n        /* \"contracts/EasyStaking.sol\":20062:20099  sigmoid.calculate(int256(timePassed)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_222:\n        /* \"contracts/EasyStaking.sol\":20035:20099  uint256 userEmissionRate = sigmoid.calculate(int256(timePassed)) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":20128:20178  userEmissionRate.add(getSupplyBasedEmissionRate()) */\n      tag_224\n        /* \"contracts/EasyStaking.sol\":20149:20177  getSupplyBasedEmissionRate() */\n      tag_225\n        /* \"contracts/EasyStaking.sol\":20149:20175  getSupplyBasedEmissionRate */\n      tag_104\n        /* \"contracts/EasyStaking.sol\":20149:20177  getSupplyBasedEmissionRate() */\n      jump\t// in\n    tag_225:\n        /* \"contracts/EasyStaking.sol\":20128:20144  userEmissionRate */\n      dup3\n        /* \"contracts/EasyStaking.sol\":20128:20148  userEmissionRate.add */\n      tag_182\n      swap1\n        /* \"contracts/EasyStaking.sol\":20128:20178  userEmissionRate.add(getSupplyBasedEmissionRate()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_224:\n        /* \"contracts/EasyStaking.sol\":20109:20178  userEmissionRate = userEmissionRate.add(getSupplyBasedEmissionRate()) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":20212:20213  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":20192:20208  userEmissionRate */\n      dup2\n        /* \"contracts/EasyStaking.sol\":20192:20213  userEmissionRate == 0 */\n      eq\n        /* \"contracts/EasyStaking.sol\":20188:20240  if (userEmissionRate == 0) return (0, 0, timePassed) */\n      iszero\n      tag_226\n      jumpi\n        /* \"contracts/EasyStaking.sol\":20223:20224  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":20226:20227  0 */\n      dup1\n        /* \"contracts/EasyStaking.sol\":20229:20239  timePassed */\n      dup4\n        /* \"contracts/EasyStaking.sol\":20215:20240  return (0, 0, timePassed) */\n      dup3\n      swap3\n      pop\n      dup2\n      swap2\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_216)\n        /* \"contracts/EasyStaking.sol\":20188:20240  if (userEmissionRate == 0) return (0, 0, timePassed) */\n    tag_226:\n        /* \"contracts/EasyStaking.sol\":4481:4491  150 finney */\n      0x0214e8348c4f0000\n        /* \"contracts/EasyStaking.sol\":20257:20273  userEmissionRate */\n      dup2\n        /* \"contracts/EasyStaking.sol\":20257:20294  userEmissionRate <= MAX_EMISSION_RATE */\n      gt\n      iszero\n        /* \"contracts/EasyStaking.sol\":20250:20295  assert(userEmissionRate <= MAX_EMISSION_RATE) */\n      tag_227\n      jumpi\n      invalid\n    tag_227:\n        /* \"contracts/EasyStaking.sol\":20313:20379  _amount.mul(MAX_EMISSION_RATE).mul(timePassed).div(YEAR * 1 ether) */\n      tag_228\n        /* \"contracts/EasyStaking.sol\":20371:20378  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/EasyStaking.sol\":4374:4382  365 days */\n      0x01e13380\n        /* \"contracts/EasyStaking.sol\":20364:20378  YEAR * 1 ether */\n      mul\n        /* \"contracts/EasyStaking.sol\":20313:20359  _amount.mul(MAX_EMISSION_RATE).mul(timePassed) */\n      tag_229\n        /* \"contracts/EasyStaking.sol\":20348:20358  timePassed */\n      dup5\n        /* \"contracts/EasyStaking.sol\":20313:20343  _amount.mul(MAX_EMISSION_RATE) */\n      tag_230\n        /* \"contracts/EasyStaking.sol\":4481:4491  150 finney */\n      0x0214e8348c4f0000\n        /* \"contracts/EasyStaking.sol\":20313:20320  _amount */\n      dup11\n        /* \"contracts/EasyStaking.sol\":20313:20324  _amount.mul */\n      tag_231\n      swap1\n        /* \"contracts/EasyStaking.sol\":20313:20343  _amount.mul(MAX_EMISSION_RATE) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"contracts/EasyStaking.sol\":20313:20347  _amount.mul(MAX_EMISSION_RATE).mul */\n      tag_231\n      swap1\n        /* \"contracts/EasyStaking.sol\":20313:20359  _amount.mul(MAX_EMISSION_RATE).mul(timePassed) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"contracts/EasyStaking.sol\":20313:20363  _amount.mul(MAX_EMISSION_RATE).mul(timePassed).div */\n      tag_201\n      swap1\n        /* \"contracts/EasyStaking.sol\":20313:20379  _amount.mul(MAX_EMISSION_RATE).mul(timePassed).div(YEAR * 1 ether) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_228:\n        /* \"contracts/EasyStaking.sol\":20305:20379  total = _amount.mul(MAX_EMISSION_RATE).mul(timePassed).div(YEAR * 1 ether) */\n      swap4\n      pop\n        /* \"contracts/EasyStaking.sol\":20401:20466  _amount.mul(userEmissionRate).mul(timePassed).div(YEAR * 1 ether) */\n      tag_232\n        /* \"contracts/EasyStaking.sol\":20458:20465  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/EasyStaking.sol\":4374:4382  365 days */\n      0x01e13380\n        /* \"contracts/EasyStaking.sol\":20451:20465  YEAR * 1 ether */\n      mul\n        /* \"contracts/EasyStaking.sol\":20401:20446  _amount.mul(userEmissionRate).mul(timePassed) */\n      tag_233\n        /* \"contracts/EasyStaking.sol\":20435:20445  timePassed */\n      dup5\n        /* \"contracts/EasyStaking.sol\":20401:20430  _amount.mul(userEmissionRate) */\n      tag_234\n        /* \"contracts/EasyStaking.sol\":20413:20429  userEmissionRate */\n      dup6\n        /* \"contracts/EasyStaking.sol\":20401:20408  _amount */\n      dup11\n        /* \"contracts/EasyStaking.sol\":20401:20412  _amount.mul */\n      tag_231\n      swap1\n        /* \"contracts/EasyStaking.sol\":20401:20430  _amount.mul(userEmissionRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_234:\n        /* \"contracts/EasyStaking.sol\":20401:20434  _amount.mul(userEmissionRate).mul */\n      tag_231\n      swap1\n        /* \"contracts/EasyStaking.sol\":20401:20446  _amount.mul(userEmissionRate).mul(timePassed) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_233:\n        /* \"contracts/EasyStaking.sol\":20401:20450  _amount.mul(userEmissionRate).mul(timePassed).div */\n      tag_201\n      swap1\n        /* \"contracts/EasyStaking.sol\":20401:20466  _amount.mul(userEmissionRate).mul(timePassed).div(YEAR * 1 ether) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"contracts/EasyStaking.sol\":20389:20466  userShare = _amount.mul(userEmissionRate).mul(timePassed).div(YEAR * 1 ether) */\n      swap3\n      pop\n        /* \"contracts/EasyStaking.sol\":19702:20473  function getAccruedEmission(... */\n      pop\n    tag_216:\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":13789:13930  function setFee(uint256 _value) public onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      tag_236\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1170  isOwner */\n      tag_116\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1155:1209  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"contracts/EasyStaking.sol\":13848:13882  _updateUintParam(feeParam, _value) */\n      tag_239\n        /* \"contracts/EasyStaking.sol\":13865:13873  feeParam */\n      0x9d\n        /* \"contracts/EasyStaking.sol\":13875:13881  _value */\n      dup3\n        /* \"contracts/EasyStaking.sol\":13848:13864  _updateUintParam */\n      tag_195\n        /* \"contracts/EasyStaking.sol\":13848:13882  _updateUintParam(feeParam, _value) */\n      jump\t// in\n    tag_239:\n        /* \"contracts/EasyStaking.sol\":13897:13923  FeeSet(_value, msg.sender) */\n      0xc8242dc5446855370b781abbfc5d882af1d1a3cc29143216aba3558feb0ce925\n        /* \"contracts/EasyStaking.sol\":13904:13910  _value */\n      dup2\n        /* \"contracts/EasyStaking.sol\":13912:13922  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":13897:13923  FeeSet(_value, msg.sender) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/EasyStaking.sol\":13789:13930  function setFee(uint256 _value) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1746:1883  function renounceOwnership() public onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      tag_241\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1170  isOwner */\n      tag_116\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1155:1209  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1844:1845  0 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1807:1847  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1828:1834  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1807:1847  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1874:1875  0 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1857:1863  _owner */\n      0x33\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1857:1876  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1746:1883  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":15098:15296  function setLockAfterStakeDuration(uint256 _value) public onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      tag_245\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1170  isOwner */\n      tag_116\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1155:1209  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"contracts/EasyStaking.sol\":15176:15229  _updateUintParam(lockAfterStakeDurationParam, _value) */\n      tag_248\n        /* \"contracts/EasyStaking.sol\":15193:15220  lockAfterStakeDurationParam */\n      0xa6\n        /* \"contracts/EasyStaking.sol\":15222:15228  _value */\n      dup3\n        /* \"contracts/EasyStaking.sol\":15176:15192  _updateUintParam */\n      tag_195\n        /* \"contracts/EasyStaking.sol\":15176:15229  _updateUintParam(lockAfterStakeDurationParam, _value) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/EasyStaking.sol\":15244:15289  LockAfterStakeDurationSet(_value, msg.sender) */\n      0x597b9881536f6a87f60171072e2a2d56c53e5e2c1d72270259008ad4932e61ed\n        /* \"contracts/EasyStaking.sol\":15270:15276  _value */\n      dup2\n        /* \"contracts/EasyStaking.sol\":15278:15288  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":15244:15289  LockAfterStakeDurationSet(_value, msg.sender) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/EasyStaking.sol\":15098:15296  function setLockAfterStakeDuration(uint256 _value) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":20530:20662  function getSigmoidParameters() public view returns (uint256 a, int256 b, uint256 c) {... */\n    tag_98:\n        /* \"contracts/EasyStaking.sol\":20583:20592  uint256 a */\n      0x00\n        /* \"contracts/EasyStaking.sol\":20594:20602  int256 b */\n      dup1\n        /* \"contracts/EasyStaking.sol\":20604:20613  uint256 c */\n      0x00\n        /* \"contracts/EasyStaking.sol\":20632:20655  sigmoid.getParameters() */\n      tag_250\n        /* \"contracts/EasyStaking.sol\":20632:20639  sigmoid */\n      0xb2\n        /* \"contracts/EasyStaking.sol\":20632:20653  sigmoid.getParameters */\n      tag_251\n        /* \"contracts/EasyStaking.sol\":20632:20655  sigmoid.getParameters() */\n      jump\t// in\n    tag_250:\n        /* \"contracts/EasyStaking.sol\":20625:20655  return sigmoid.getParameters() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/EasyStaking.sol\":20530:20662  function getSigmoidParameters() public view returns (uint256 a, int256 b, uint256 c) {... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":769:983  function initialize() public initializer {... */\n    tag_100:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1036  initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n      dup1\n      tag_253\n      jumpi\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      tag_254\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1053  isConstructor */\n      tag_255\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n    tag_253:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n      dup1\n      tag_256\n      jumpi\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1060:1071  initialized */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1059:1071  !initialized */\n      iszero\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n    tag_256:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1016:1122  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_257:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1129:1148  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1152:1164  initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1151:1164  !initializing */\n      iszero\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1129:1164  bool isTopLevelCall = !initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1174:1188  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1213:1217  true */\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1198:1210  initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1198:1217  initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1239:1243  true */\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1225:1236  initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1225:1243  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":975:976  1 */\n      0x01\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":959:972  _guardCounter */\n      0x66\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":959:976  _guardCounter = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1268:1282  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1307:1312  false */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1292:1304  initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1292:1312  initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":769:983  function initialize() public initializer {... */\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":6127:6153  uint256 public totalStaked */\n    tag_102:\n      sload(0xb0)\n      dup2\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":18899:19414  function getSupplyBasedEmissionRate() public view returns (uint256) {... */\n    tag_104:\n        /* \"contracts/EasyStaking.sol\":18958:18965  uint256 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":18977:18996  uint256 totalSupply */\n      dup1\n        /* \"contracts/EasyStaking.sol\":18999:19004  token */\n      0x99\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":18999:19016  token.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/EasyStaking.sol\":18999:19018  token.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_262\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_262:\n        /* \"contracts/EasyStaking.sol\":18999:19018  token.totalSupply() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_263\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_263:\n        /* \"contracts/EasyStaking.sol\":18999:19018  token.totalSupply() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_264\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_264:\n        /* \"contracts/EasyStaking.sol\":18999:19018  token.totalSupply() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":18977:19018  uint256 totalSupply = token.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":19028:19042  uint256 factor */\n      0x00\n        /* \"contracts/EasyStaking.sol\":19045:19064  totalSupplyFactor() */\n      tag_265\n        /* \"contracts/EasyStaking.sol\":19045:19062  totalSupplyFactor */\n      tag_81\n        /* \"contracts/EasyStaking.sol\":19045:19064  totalSupplyFactor() */\n      jump\t// in\n    tag_265:\n        /* \"contracts/EasyStaking.sol\":19028:19064  uint256 factor = totalSupplyFactor() */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":19088:19089  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":19078:19084  factor */\n      dup2\n        /* \"contracts/EasyStaking.sol\":19078:19089  factor == 0 */\n      eq\n        /* \"contracts/EasyStaking.sol\":19074:19099  if (factor == 0) return 0 */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/EasyStaking.sol\":19098:19099  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":19091:19099  return 0 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_261)\n        /* \"contracts/EasyStaking.sol\":19074:19099  if (factor == 0) return 0 */\n    tag_266:\n        /* \"contracts/EasyStaking.sol\":19109:19123  uint256 target */\n      0x00\n        /* \"contracts/EasyStaking.sol\":19126:19162  totalSupply.mul(factor).div(1 ether) */\n      tag_267\n        /* \"contracts/EasyStaking.sol\":19154:19161  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/EasyStaking.sol\":19126:19149  totalSupply.mul(factor) */\n      tag_268\n        /* \"contracts/EasyStaking.sol\":19142:19148  factor */\n      dup5\n        /* \"contracts/EasyStaking.sol\":19126:19137  totalSupply */\n      dup7\n        /* \"contracts/EasyStaking.sol\":19126:19141  totalSupply.mul */\n      tag_231\n      swap1\n        /* \"contracts/EasyStaking.sol\":19126:19149  totalSupply.mul(factor) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/EasyStaking.sol\":19126:19153  totalSupply.mul(factor).div */\n      tag_201\n      swap1\n        /* \"contracts/EasyStaking.sol\":19126:19162  totalSupply.mul(factor).div(1 ether) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_267:\n        /* \"contracts/EasyStaking.sol\":19109:19162  uint256 target = totalSupply.mul(factor).div(1 ether) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":19172:19206  uint256 maxSupplyBasedEmissionRate */\n      0x00\n        /* \"contracts/EasyStaking.sol\":19209:19233  MAX_EMISSION_RATE.div(2) */\n      tag_269\n        /* \"contracts/EasyStaking.sol\":19231:19232  2 */\n      0x02\n        /* \"contracts/EasyStaking.sol\":4481:4491  150 finney */\n      0x0214e8348c4f0000\n        /* \"contracts/EasyStaking.sol\":19209:19230  MAX_EMISSION_RATE.div */\n      tag_201\n      swap1\n        /* \"contracts/EasyStaking.sol\":19209:19233  MAX_EMISSION_RATE.div(2) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"contracts/EasyStaking.sol\":19172:19233  uint256 maxSupplyBasedEmissionRate = MAX_EMISSION_RATE.div(2) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":19270:19276  target */\n      dup2\n        /* \"contracts/EasyStaking.sol\":19255:19266  totalStaked */\n      sload(0xb0)\n        /* \"contracts/EasyStaking.sol\":19255:19276  totalStaked >= target */\n      lt\n        /* \"contracts/EasyStaking.sol\":19251:19336  if (totalStaked >= target) {... */\n      tag_270\n      jumpi\n        /* \"contracts/EasyStaking.sol\":19299:19325  maxSupplyBasedEmissionRate */\n      dup1\n        /* \"contracts/EasyStaking.sol\":19292:19325  return maxSupplyBasedEmissionRate */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_261)\n        /* \"contracts/EasyStaking.sol\":19251:19336  if (totalStaked >= target) {... */\n    tag_270:\n        /* \"contracts/EasyStaking.sol\":19352:19407  maxSupplyBasedEmissionRate.mul(totalStaked).div(target) */\n      tag_271\n        /* \"contracts/EasyStaking.sol\":19400:19406  target */\n      dup3\n        /* \"contracts/EasyStaking.sol\":19352:19395  maxSupplyBasedEmissionRate.mul(totalStaked) */\n      tag_272\n        /* \"contracts/EasyStaking.sol\":19383:19394  totalStaked */\n      sload(0xb0)\n        /* \"contracts/EasyStaking.sol\":19352:19378  maxSupplyBasedEmissionRate */\n      dup5\n        /* \"contracts/EasyStaking.sol\":19352:19382  maxSupplyBasedEmissionRate.mul */\n      tag_231\n      swap1\n        /* \"contracts/EasyStaking.sol\":19352:19395  maxSupplyBasedEmissionRate.mul(totalStaked) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_272:\n        /* \"contracts/EasyStaking.sol\":19352:19399  maxSupplyBasedEmissionRate.mul(totalStaked).div */\n      tag_201\n      swap1\n        /* \"contracts/EasyStaking.sol\":19352:19407  maxSupplyBasedEmissionRate.mul(totalStaked).div(target) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"contracts/EasyStaking.sol\":19345:19407  return maxSupplyBasedEmissionRate.mul(totalStaked).div(target) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":18899:19414  function getSupplyBasedEmissionRate() public view returns (uint256) {... */\n    tag_261:\n      swap1\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":14624:14897  function setWithdrawalUnlockDuration(uint256 _value) public onlyOwner {... */\n    tag_107:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      tag_274\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1170  isOwner */\n      tag_116\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1155:1209  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_275:\n        /* \"contracts/EasyStaking.sol\":14722:14729  1 hours */\n      0x0e10\n        /* \"contracts/EasyStaking.sol\":14712:14718  _value */\n      dup2\n        /* \"contracts/EasyStaking.sol\":14712:14729  _value >= 1 hours */\n      lt\n      iszero\n        /* \"contracts/EasyStaking.sol\":14704:14763  require(_value >= 1 hours, \"shouldn't be less than 1 hour\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x73686f756c646e2774206265206c657373207468616e203120686f7572000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"contracts/EasyStaking.sol\":14773:14828  _updateUintParam(withdrawalUnlockDurationParam, _value) */\n      tag_278\n        /* \"contracts/EasyStaking.sol\":14790:14819  withdrawalUnlockDurationParam */\n      0xa3\n        /* \"contracts/EasyStaking.sol\":14821:14827  _value */\n      dup3\n        /* \"contracts/EasyStaking.sol\":14773:14789  _updateUintParam */\n      tag_195\n        /* \"contracts/EasyStaking.sol\":14773:14828  _updateUintParam(withdrawalUnlockDurationParam, _value) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/EasyStaking.sol\":14843:14890  WithdrawalUnlockDurationSet(_value, msg.sender) */\n      0x3a963fa1d1d0da205f1ae9869aa14bf4ff7a4585efa819b0c94326b4a3e1e228\n        /* \"contracts/EasyStaking.sol\":14871:14877  _value */\n      dup2\n        /* \"contracts/EasyStaking.sol\":14879:14889  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":14843:14890  WithdrawalUnlockDurationSet(_value, msg.sender) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/EasyStaking.sol\":14624:14897  function setWithdrawalUnlockDuration(uint256 _value) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":5805:5874  mapping (address => mapping (uint256 => uint256)) public depositDates */\n    tag_110:\n      mstore(0x20, 0xad)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":959:1036  function owner() public view returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":997:1004  address */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1023:1029  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1016:1029  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":959:1036  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":17676:17815  function withdrawalUnlockDuration() public view returns (uint256) {... */\n    tag_114:\n        /* \"contracts/EasyStaking.sol\":17733:17740  uint256 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":17759:17808  _getUintParamValue(withdrawalUnlockDurationParam) */\n      tag_281\n        /* \"contracts/EasyStaking.sol\":17778:17807  withdrawalUnlockDurationParam */\n      0xa3\n        /* \"contracts/EasyStaking.sol\":17759:17808  _getUintParamValue(withdrawalUnlockDurationParam) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":17759:17777  _getUintParamValue */\n      tag_213\n        /* \"contracts/EasyStaking.sol\":17759:17808  _getUintParamValue(withdrawalUnlockDurationParam) */\n      jump\t// in\n    tag_281:\n        /* \"contracts/EasyStaking.sol\":17752:17808  return _getUintParamValue(withdrawalUnlockDurationParam) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":17676:17815  function withdrawalUnlockDuration() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1310:1402  function isOwner() public view returns (bool) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1350:1354  bool */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1389:1395  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1373:1395  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1373:1385  _msgSender() */\n      tag_283\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1373:1383  _msgSender */\n      tag_284\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1373:1385  _msgSender() */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1373:1395  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1366:1395  return _msgSender() == _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1310:1402  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":10644:10785  function makeForcedWithdrawal(uint256 _depositId, uint256 _amount) external {... */\n    tag_119:\n        /* \"contracts/EasyStaking.sol\":10730:10778  _withdraw(msg.sender, _depositId, _amount, true) */\n      tag_286\n        /* \"contracts/EasyStaking.sol\":10740:10750  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":10752:10762  _depositId */\n      dup4\n        /* \"contracts/EasyStaking.sol\":10764:10771  _amount */\n      dup4\n        /* \"contracts/EasyStaking.sol\":10773:10777  true */\n      0x01\n        /* \"contracts/EasyStaking.sol\":10730:10739  _withdraw */\n      tag_188\n        /* \"contracts/EasyStaking.sol\":10730:10778  _withdraw(msg.sender, _depositId, _amount, true) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/EasyStaking.sol\":10644:10785  function makeForcedWithdrawal(uint256 _depositId, uint256 _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":17895:18030  function lockAfterStakeDuration() public view returns (uint256) {... */\n    tag_121:\n        /* \"contracts/EasyStaking.sol\":17950:17957  uint256 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":17976:18023  _getUintParamValue(lockAfterStakeDurationParam) */\n      tag_288\n        /* \"contracts/EasyStaking.sol\":17995:18022  lockAfterStakeDurationParam */\n      0xa6\n        /* \"contracts/EasyStaking.sol\":17976:18023  _getUintParamValue(lockAfterStakeDurationParam) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":17976:17994  _getUintParamValue */\n      tag_213\n        /* \"contracts/EasyStaking.sol\":17976:18023  _getUintParamValue(lockAfterStakeDurationParam) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/EasyStaking.sol\":17969:18023  return _getUintParamValue(lockAfterStakeDurationParam) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":17895:18030  function lockAfterStakeDuration() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":11087:11371  function requestWithdrawal(uint256 _depositId) external {... */\n    tag_124:\n        /* \"contracts/EasyStaking.sol\":11174:11175  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":11161:11171  _depositId */\n      dup2\n        /* \"contracts/EasyStaking.sol\":11161:11175  _depositId > 0 */\n      gt\n        /* \"contracts/EasyStaking.sol\":11161:11219  _depositId > 0 && _depositId <= lastDepositIds[msg.sender] */\n      dup1\n      iszero\n      tag_290\n      jumpi\n      pop\n        /* \"contracts/EasyStaking.sol\":11193:11207  lastDepositIds */\n      0xaf\n        /* \"contracts/EasyStaking.sol\":11193:11219  lastDepositIds[msg.sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":11208:11218  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":11193:11219  lastDepositIds[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":11179:11189  _depositId */\n      dup2\n        /* \"contracts/EasyStaking.sol\":11179:11219  _depositId <= lastDepositIds[msg.sender] */\n      gt\n      iszero\n        /* \"contracts/EasyStaking.sol\":11161:11219  _depositId > 0 && _depositId <= lastDepositIds[msg.sender] */\n    tag_290:\n        /* \"contracts/EasyStaking.sol\":11153:11240  require(_depositId > 0 && _depositId <= lastDepositIds[msg.sender], \"wrong deposit id\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77726f6e67206465706f73697420696400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n        /* \"contracts/EasyStaking.sol\":11300:11306  _now() */\n      tag_292\n        /* \"contracts/EasyStaking.sol\":11300:11304  _now */\n      tag_174\n        /* \"contracts/EasyStaking.sol\":11300:11306  _now() */\n      jump\t// in\n    tag_292:\n        /* \"contracts/EasyStaking.sol\":11250:11273  withdrawalRequestsDates */\n      0xae\n        /* \"contracts/EasyStaking.sol\":11250:11285  withdrawalRequestsDates[msg.sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":11274:11284  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":11250:11285  withdrawalRequestsDates[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":11250:11297  withdrawalRequestsDates[msg.sender][_depositId] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":11286:11296  _depositId */\n      dup4\n        /* \"contracts/EasyStaking.sol\":11250:11297  withdrawalRequestsDates[msg.sender][_depositId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":11250:11306  withdrawalRequestsDates[msg.sender][_depositId] = _now() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":11353:11363  _depositId */\n      dup1\n        /* \"contracts/EasyStaking.sol\":11341:11351  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":11321:11364  WithdrawalRequested(msg.sender, _depositId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe670e4e82118d22a1f9ee18920455ebc958bae26a90a05d31d3378788b1b0e44\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/EasyStaking.sol\":11087:11371  function requestWithdrawal(uint256 _depositId) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":12798:13633  function claimTokens(address _token, address payable _to, uint256 _amount) external onlyOwner {... */\n    tag_127:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      tag_294\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1170  isOwner */\n      tag_116\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1155:1209  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"contracts/EasyStaking.sol\":12925:12926  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":12910:12927  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":12910:12913  _to */\n      dup3\n        /* \"contracts/EasyStaking.sol\":12910:12927  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/EasyStaking.sol\":12910:12951  _to != address(0) && _to != address(this) */\n      dup1\n      iszero\n      tag_297\n      jumpi\n      pop\n        /* \"contracts/EasyStaking.sol\":12946:12950  this */\n      address\n        /* \"contracts/EasyStaking.sol\":12931:12951  _to != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":12931:12934  _to */\n      dup3\n        /* \"contracts/EasyStaking.sol\":12931:12951  _to != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/EasyStaking.sol\":12910:12951  _to != address(0) && _to != address(this) */\n    tag_297:\n        /* \"contracts/EasyStaking.sol\":12902:12977  require(_to != address(0) && _to != address(this), \"not a valid recipient\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f7420612076616c696420726563697069656e740000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_298:\n        /* \"contracts/EasyStaking.sol\":13005:13006  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":12995:13002  _amount */\n      dup2\n        /* \"contracts/EasyStaking.sol\":12995:13006  _amount > 0 */\n      gt\n        /* \"contracts/EasyStaking.sol\":12987:13042  require(_amount > 0, \"amount should be greater than 0\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x616d6f756e742073686f756c642062652067726561746572207468616e203000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_299:\n        /* \"contracts/EasyStaking.sol\":13074:13075  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":13056:13076  _token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":13056:13062  _token */\n      dup4\n        /* \"contracts/EasyStaking.sol\":13056:13076  _token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/EasyStaking.sol\":13052:13627  if (_token == address(0)) {... */\n      iszero\n      tag_300\n      jumpi\n        /* \"contracts/EasyStaking.sol\":13097:13100  _to */\n      dup2\n        /* \"contracts/EasyStaking.sol\":13097:13105  _to.send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":13097:13114  _to.send(_amount) */\n      0x08fc\n        /* \"contracts/EasyStaking.sol\":13106:13113  _amount */\n      dup3\n        /* \"contracts/EasyStaking.sol\":13097:13114  _to.send(_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":13092:13224  if (!_to.send(_amount)) { // solium-disable-line security/no-send... */\n      tag_301\n      jumpi\n        /* \"contracts/EasyStaking.sol\":13196:13203  _amount */\n      dup1\n        /* \"contracts/EasyStaking.sol\":13205:13208  _to */\n      dup3\n        /* \"contracts/EasyStaking.sol\":13174:13209  (new Sacrifice).value(_amount)(_to) */\n      mload(0x40)\n      tag_302\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      dup3\n      create\n      dup1\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_304\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_304:\n        /* \"contracts/EasyStaking.sol\":13174:13209  (new Sacrifice).value(_amount)(_to) */\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":13092:13224  if (!_to.send(_amount)) { // solium-disable-line security/no-send... */\n    tag_301:\n        /* \"contracts/EasyStaking.sol\":13052:13627  if (_token == address(0)) {... */\n      jump(tag_305)\n    tag_300:\n        /* \"contracts/EasyStaking.sol\":13262:13267  token */\n      0x99\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":13244:13268  _token == address(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":13244:13250  _token */\n      dup4\n        /* \"contracts/EasyStaking.sol\":13244:13268  _token == address(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/EasyStaking.sol\":13240:13627  if (_token == address(token)) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"contracts/EasyStaking.sol\":13284:13307  uint256 availableAmount */\n      0x00\n        /* \"contracts/EasyStaking.sol\":13310:13357  token.balanceOf(address(this)).sub(totalStaked) */\n      tag_307\n        /* \"contracts/EasyStaking.sol\":13345:13356  totalStaked */\n      sload(0xb0)\n        /* \"contracts/EasyStaking.sol\":13310:13315  token */\n      0x99\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":13310:13325  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/EasyStaking.sol\":13334:13338  this */\n      address\n        /* \"contracts/EasyStaking.sol\":13310:13340  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_308\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_308:\n        /* \"contracts/EasyStaking.sol\":13310:13340  token.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_309\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_309:\n        /* \"contracts/EasyStaking.sol\":13310:13340  token.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_310\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_310:\n        /* \"contracts/EasyStaking.sol\":13310:13340  token.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":13310:13344  token.balanceOf(address(this)).sub */\n      tag_175\n      swap1\n        /* \"contracts/EasyStaking.sol\":13310:13357  token.balanceOf(address(this)).sub(totalStaked) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_307:\n        /* \"contracts/EasyStaking.sol\":13284:13357  uint256 availableAmount = token.balanceOf(address(this)).sub(totalStaked) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":13398:13405  _amount */\n      dup2\n        /* \"contracts/EasyStaking.sol\":13379:13394  availableAmount */\n      dup2\n        /* \"contracts/EasyStaking.sol\":13379:13405  availableAmount >= _amount */\n      lt\n      iszero\n        /* \"contracts/EasyStaking.sol\":13371:13428  require(availableAmount >= _amount, \"insufficient funds\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x696e73756666696369656e742066756e64730000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_311:\n        /* \"contracts/EasyStaking.sol\":13450:13455  token */\n      0x99\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":13450:13464  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/EasyStaking.sol\":13465:13468  _to */\n      dup5\n        /* \"contracts/EasyStaking.sol\":13470:13477  _amount */\n      dup5\n        /* \"contracts/EasyStaking.sol\":13450:13478  token.transfer(_to, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_312\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_312:\n        /* \"contracts/EasyStaking.sol\":13450:13478  token.transfer(_to, _amount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_313\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_313:\n        /* \"contracts/EasyStaking.sol\":13450:13478  token.transfer(_to, _amount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_314\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_314:\n        /* \"contracts/EasyStaking.sol\":13450:13478  token.transfer(_to, _amount) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":13442:13498  require(token.transfer(_to, _amount), \"transfer failed\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e73666572206661696c65640000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_315:\n        /* \"contracts/EasyStaking.sol\":13240:13627  if (_token == address(token)) {... */\n      pop\n      jump(tag_316)\n    tag_306:\n        /* \"contracts/EasyStaking.sol\":13529:13547  IERC20 customToken */\n      0x00\n        /* \"contracts/EasyStaking.sol\":13557:13563  _token */\n      dup4\n        /* \"contracts/EasyStaking.sol\":13529:13564  IERC20 customToken = IERC20(_token) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":13578:13616  customToken.safeTransfer(_to, _amount) */\n      tag_317\n        /* \"contracts/EasyStaking.sol\":13603:13606  _to */\n      dup4\n        /* \"contracts/EasyStaking.sol\":13608:13615  _amount */\n      dup4\n        /* \"contracts/EasyStaking.sol\":13578:13589  customToken */\n      dup4\n        /* \"contracts/EasyStaking.sol\":13578:13602  customToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_318\n      swap1\n        /* \"contracts/EasyStaking.sol\":13578:13616  customToken.safeTransfer(_to, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_317:\n        /* \"contracts/EasyStaking.sol\":13240:13627  if (_token == address(token)) {... */\n      pop\n    tag_316:\n        /* \"contracts/EasyStaking.sol\":13052:13627  if (_token == address(0)) {... */\n    tag_305:\n        /* \"contracts/EasyStaking.sol\":12798:13633  function claimTokens(address _token, address payable _to, uint256 _amount) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":10074:10382  function onTokenTransfer(address _sender, uint256 _amount, bytes calldata) external returns (bool) {... */\n    tag_133:\n        /* \"contracts/EasyStaking.sol\":10167:10171  bool */\n      0x00\n        /* \"contracts/EasyStaking.sol\":10213:10218  token */\n      0x99\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":10191:10219  msg.sender == address(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":10191:10201  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":10191:10219  msg.sender == address(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/EasyStaking.sol\":10183:10254  require(msg.sender == address(token), \"only token contract is allowed\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6f6e6c7920746f6b656e20636f6e747261637420697320616c6c6f7765640000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_320:\n        /* \"contracts/EasyStaking.sol\":10269:10275  locked */\n      0xb1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/EasyStaking.sol\":10264:10355  if (!locked) {... */\n      tag_321\n      jumpi\n        /* \"contracts/EasyStaking.sol\":10291:10344  _deposit(_sender, ++lastDepositIds[_sender], _amount) */\n      tag_322\n        /* \"contracts/EasyStaking.sol\":10300:10307  _sender */\n      dup6\n        /* \"contracts/EasyStaking.sol\":10311:10325  lastDepositIds */\n      0xaf\n        /* \"contracts/EasyStaking.sol\":10311:10334  lastDepositIds[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":10326:10333  _sender */\n      dup9\n        /* \"contracts/EasyStaking.sol\":10311:10334  lastDepositIds[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/EasyStaking.sol\":10309:10334  ++lastDepositIds[_sender] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n        /* \"contracts/EasyStaking.sol\":10336:10343  _amount */\n      dup7\n        /* \"contracts/EasyStaking.sol\":10291:10299  _deposit */\n      tag_323\n        /* \"contracts/EasyStaking.sol\":10291:10344  _deposit(_sender, ++lastDepositIds[_sender], _amount) */\n      jump\t// in\n    tag_322:\n        /* \"contracts/EasyStaking.sol\":10264:10355  if (!locked) {... */\n    tag_321:\n        /* \"contracts/EasyStaking.sol\":10371:10375  true */\n      0x01\n        /* \"contracts/EasyStaking.sol\":10364:10375  return true */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":10074:10382  function onTokenTransfer(address _sender, uint256 _amount, bytes calldata) external returns (bool) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":5615:5654  UintParam public totalSupplyFactorParam */\n    tag_135:\n      0xa9\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":8592:8698  function deposit(uint256 _amount) external {... */\n    tag_138:\n        /* \"contracts/EasyStaking.sol\":8645:8691  deposit(++lastDepositIds[msg.sender], _amount) */\n      tag_325\n        /* \"contracts/EasyStaking.sol\":8655:8669  lastDepositIds */\n      0xaf\n        /* \"contracts/EasyStaking.sol\":8655:8681  lastDepositIds[msg.sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":8670:8680  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":8655:8681  lastDepositIds[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/EasyStaking.sol\":8653:8681  ++lastDepositIds[msg.sender] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n        /* \"contracts/EasyStaking.sol\":8683:8690  _amount */\n      dup3\n        /* \"contracts/EasyStaking.sol\":8645:8652  deposit */\n      tag_165\n        /* \"contracts/EasyStaking.sol\":8645:8691  deposit(++lastDepositIds[msg.sender], _amount) */\n      jump\t// in\n    tag_325:\n        /* \"contracts/EasyStaking.sol\":8592:8698  function deposit(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":6040:6090  mapping (address => uint256) public lastDepositIds */\n    tag_141:\n      mstore(0x20, 0xaf)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":741:883  function initialize(address sender) public initializer {... */\n    tag_144:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1036  initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n      dup1\n      tag_327\n      jumpi\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      tag_328\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1053  isConstructor */\n      tag_255\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n    tag_327:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n      dup1\n      tag_329\n      jumpi\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1060:1071  initialized */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1059:1071  !initialized */\n      iszero\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n    tag_329:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1016:1122  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_330:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1129:1148  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1152:1164  initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1151:1164  !initializing */\n      iszero\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1129:1164  bool isTopLevelCall = !initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1174:1188  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n      iszero\n      tag_331\n      jumpi\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1213:1217  true */\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1198:1210  initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1198:1217  initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1239:1243  true */\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1225:1236  initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1225:1243  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":815:821  sender */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":806:812  _owner */\n      0x33\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":806:821  _owner = sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":869:875  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":836:876  OwnershipTransferred(address(0), _owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":865:866  0 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":836:876  OwnershipTransferred(address(0), _owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1268:1282  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n      iszero\n      tag_333\n      jumpi\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1307:1312  false */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1292:1304  initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1292:1312  initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":741:883  function initialize(address sender) public initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":18550:18796  function liquidityProvidersRewardAddress() public view returns (address) {... */\n    tag_146:\n        /* \"contracts/EasyStaking.sol\":18614:18621  address */\n      0x00\n        /* \"contracts/EasyStaking.sol\":18633:18658  AddressParam memory param */\n      tag_335\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"contracts/EasyStaking.sol\":18661:18697  liquidityProvidersRewardAddressParam */\n      0x9a\n        /* \"contracts/EasyStaking.sol\":18633:18697  AddressParam memory param = liquidityProvidersRewardAddressParam */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":18714:18755  _paramUpdateDelayElapsed(param.timestamp) */\n      tag_337\n        /* \"contracts/EasyStaking.sol\":18739:18744  param */\n      dup2\n        /* \"contracts/EasyStaking.sol\":18739:18754  param.timestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/EasyStaking.sol\":18714:18738  _paramUpdateDelayElapsed */\n      tag_338\n        /* \"contracts/EasyStaking.sol\":18714:18755  _paramUpdateDelayElapsed(param.timestamp) */\n      jump\t// in\n    tag_337:\n        /* \"contracts/EasyStaking.sol\":18714:18789  _paramUpdateDelayElapsed(param.timestamp) ? param.newValue : param.oldValue */\n      tag_339\n      jumpi\n        /* \"contracts/EasyStaking.sol\":18775:18780  param */\n      dup1\n        /* \"contracts/EasyStaking.sol\":18775:18789  param.oldValue */\n      0x00\n      add\n      mload\n        /* \"contracts/EasyStaking.sol\":18714:18789  _paramUpdateDelayElapsed(param.timestamp) ? param.newValue : param.oldValue */\n      jump(tag_340)\n    tag_339:\n        /* \"contracts/EasyStaking.sol\":18758:18763  param */\n      dup1\n        /* \"contracts/EasyStaking.sol\":18758:18772  param.newValue */\n      0x20\n      add\n      mload\n        /* \"contracts/EasyStaking.sol\":18714:18789  _paramUpdateDelayElapsed(param.timestamp) ? param.newValue : param.oldValue */\n    tag_340:\n        /* \"contracts/EasyStaking.sol\":18707:18789  return _paramUpdateDelayElapsed(param.timestamp) ? param.newValue : param.oldValue */\n      swap2\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":18550:18796  function liquidityProvidersRewardAddress() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":7213:8356  function initialize(... */\n    tag_149:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1036  initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n      dup1\n      tag_342\n      jumpi\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      tag_343\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1053  isConstructor */\n      tag_255\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1040:1055  isConstructor() */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1055  initializing || isConstructor() */\n    tag_342:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n      dup1\n      tag_344\n      jumpi\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1060:1071  initialized */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1059:1071  !initialized */\n      iszero\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1024:1071  initializing || isConstructor() || !initialized */\n    tag_344:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1016:1122  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_345:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1129:1148  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1152:1164  initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1151:1164  !initializing */\n      iszero\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1129:1164  bool isTopLevelCall = !initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1174:1188  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n      iszero\n      tag_346\n      jumpi\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1213:1217  true */\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1198:1210  initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1198:1217  initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1239:1243  true */\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1225:1236  initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1225:1243  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1170:1250  if (isTopLevelCall) {... */\n    tag_346:\n        /* \"contracts/EasyStaking.sol\":7679:7680  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":7661:7681  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":7661:7667  _owner */\n      dup13\n        /* \"contracts/EasyStaking.sol\":7661:7681  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/EasyStaking.sol\":7653:7698  require(_owner != address(0), \"zero address\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7a65726f20616464726573730000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_348:\n        /* \"contracts/EasyStaking.sol\":7716:7742  _tokenAddress.isContract() */\n      tag_349\n        /* \"contracts/EasyStaking.sol\":7716:7729  _tokenAddress */\n      dup12\n        /* \"contracts/EasyStaking.sol\":7716:7740  _tokenAddress.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_350\n        /* \"contracts/EasyStaking.sol\":7716:7742  _tokenAddress.isContract() */\n      jump\t// in\n    tag_349:\n        /* \"contracts/EasyStaking.sol\":7708:7769  require(_tokenAddress.isContract(), \"not a contract address\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x16\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f74206120636f6e7472616374206164647265737300000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_351:\n        /* \"contracts/EasyStaking.sol\":7779:7809  Ownable.initialize(msg.sender) */\n      tag_352\n        /* \"contracts/EasyStaking.sol\":7798:7808  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":7779:7797  Ownable.initialize */\n      tag_144\n        /* \"contracts/EasyStaking.sol\":7779:7809  Ownable.initialize(msg.sender) */\n      jump\t// in\n    tag_352:\n        /* \"contracts/EasyStaking.sol\":7819:7847  ReentrancyGuard.initialize() */\n      tag_353\n        /* \"contracts/EasyStaking.sol\":7819:7845  ReentrancyGuard.initialize */\n      tag_100\n        /* \"contracts/EasyStaking.sol\":7819:7847  ReentrancyGuard.initialize() */\n      jump\t// in\n    tag_353:\n        /* \"contracts/EasyStaking.sol\":7880:7893  _tokenAddress */\n      dup11\n        /* \"contracts/EasyStaking.sol\":7857:7862  token */\n      0x99\n      0x00\n        /* \"contracts/EasyStaking.sol\":7857:7894  token = IERC20Mintable(_tokenAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":7904:7916  setFee(_fee) */\n      tag_354\n        /* \"contracts/EasyStaking.sol\":7911:7915  _fee */\n      dup10\n        /* \"contracts/EasyStaking.sol\":7904:7910  setFee */\n      tag_91\n        /* \"contracts/EasyStaking.sol\":7904:7916  setFee(_fee) */\n      jump\t// in\n    tag_354:\n        /* \"contracts/EasyStaking.sol\":7926:7976  setWithdrawalLockDuration(_withdrawalLockDuration) */\n      tag_355\n        /* \"contracts/EasyStaking.sol\":7952:7975  _withdrawalLockDuration */\n      dup9\n        /* \"contracts/EasyStaking.sol\":7926:7951  setWithdrawalLockDuration */\n      tag_67\n        /* \"contracts/EasyStaking.sol\":7926:7976  setWithdrawalLockDuration(_withdrawalLockDuration) */\n      jump\t// in\n    tag_355:\n        /* \"contracts/EasyStaking.sol\":7986:8040  setWithdrawalUnlockDuration(_withdrawalUnlockDuration) */\n      tag_356\n        /* \"contracts/EasyStaking.sol\":8014:8039  _withdrawalUnlockDuration */\n      dup8\n        /* \"contracts/EasyStaking.sol\":7986:8013  setWithdrawalUnlockDuration */\n      tag_107\n        /* \"contracts/EasyStaking.sol\":7986:8040  setWithdrawalUnlockDuration(_withdrawalUnlockDuration) */\n      jump\t// in\n    tag_356:\n        /* \"contracts/EasyStaking.sol\":8050:8100  setLockAfterStakeDuration(_lockAfterStakeDuration) */\n      tag_357\n        /* \"contracts/EasyStaking.sol\":8076:8099  _lockAfterStakeDuration */\n      dup7\n        /* \"contracts/EasyStaking.sol\":8050:8075  setLockAfterStakeDuration */\n      tag_96\n        /* \"contracts/EasyStaking.sol\":8050:8100  setLockAfterStakeDuration(_lockAfterStakeDuration) */\n      jump\t// in\n    tag_357:\n        /* \"contracts/EasyStaking.sol\":8110:8150  setTotalSupplyFactor(_totalSupplyFactor) */\n      tag_358\n        /* \"contracts/EasyStaking.sol\":8131:8149  _totalSupplyFactor */\n      dup6\n        /* \"contracts/EasyStaking.sol\":8110:8130  setTotalSupplyFactor */\n      tag_75\n        /* \"contracts/EasyStaking.sol\":8110:8150  setTotalSupplyFactor(_totalSupplyFactor) */\n      jump\t// in\n    tag_358:\n        /* \"contracts/EasyStaking.sol\":8160:8228  setSigmoidParameters(_sigmoidParamA, _sigmoidParamB, _sigmoidParamC) */\n      tag_359\n        /* \"contracts/EasyStaking.sol\":8181:8195  _sigmoidParamA */\n      dup5\n        /* \"contracts/EasyStaking.sol\":8197:8211  _sigmoidParamB */\n      dup5\n        /* \"contracts/EasyStaking.sol\":8213:8227  _sigmoidParamC */\n      dup5\n        /* \"contracts/EasyStaking.sol\":8160:8180  setSigmoidParameters */\n      tag_70\n        /* \"contracts/EasyStaking.sol\":8160:8228  setSigmoidParameters(_sigmoidParamA, _sigmoidParamB, _sigmoidParamC) */\n      jump\t// in\n    tag_359:\n        /* \"contracts/EasyStaking.sol\":8238:8306  setLiquidityProvidersRewardAddress(_liquidityProvidersRewardAddress) */\n      tag_360\n        /* \"contracts/EasyStaking.sol\":8273:8305  _liquidityProvidersRewardAddress */\n      dup11\n        /* \"contracts/EasyStaking.sol\":8238:8272  setLiquidityProvidersRewardAddress */\n      tag_155\n        /* \"contracts/EasyStaking.sol\":8238:8306  setLiquidityProvidersRewardAddress(_liquidityProvidersRewardAddress) */\n      jump\t// in\n    tag_360:\n        /* \"contracts/EasyStaking.sol\":8316:8349  Ownable.transferOwnership(_owner) */\n      tag_361\n        /* \"contracts/EasyStaking.sol\":8342:8348  _owner */\n      dup13\n        /* \"contracts/EasyStaking.sol\":8316:8341  Ownable.transferOwnership */\n      tag_168\n        /* \"contracts/EasyStaking.sol\":8316:8349  Ownable.transferOwnership(_owner) */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1268:1282  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n      iszero\n      tag_362\n      jumpi\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1307:1312  false */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1292:1304  initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1292:1312  initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1264:1319  if (isTopLevelCall) {... */\n    tag_362:\n        /* \"contracts/EasyStaking.sol\":7213:8356  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":5698:5763  mapping (address => mapping (uint256 => uint256)) public balances */\n    tag_152:\n      mstore(0x20, 0xac)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":16560:17226  function setLiquidityProvidersRewardAddress(address _address) public onlyOwner {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      tag_364\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1170  isOwner */\n      tag_116\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1155:1209  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_365\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_365:\n        /* \"contracts/EasyStaking.sol\":16677:16678  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":16657:16679  _address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":16657:16665  _address */\n      dup2\n        /* \"contracts/EasyStaking.sol\":16657:16679  _address != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/EasyStaking.sol\":16649:16696  require(_address != address(0), \"zero address\") */\n      tag_367\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7a65726f20616464726573730000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_367:\n        /* \"contracts/EasyStaking.sol\":16734:16738  this */\n      address\n        /* \"contracts/EasyStaking.sol\":16714:16739  _address != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":16714:16722  _address */\n      dup2\n        /* \"contracts/EasyStaking.sol\":16714:16739  _address != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/EasyStaking.sol\":16706:16757  require(_address != address(this), \"wrong address\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77726f6e67206164647265737300000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_368:\n        /* \"contracts/EasyStaking.sol\":16767:16792  AddressParam memory param */\n      tag_369\n      tag_336\n      jump\t// in\n    tag_369:\n        /* \"contracts/EasyStaking.sol\":16795:16831  liquidityProvidersRewardAddressParam */\n      0x9a\n        /* \"contracts/EasyStaking.sol\":16767:16831  AddressParam memory param = liquidityProvidersRewardAddressParam */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":16864:16865  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":16845:16850  param */\n      dup2\n        /* \"contracts/EasyStaking.sol\":16845:16860  param.timestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/EasyStaking.sol\":16845:16865  param.timestamp == 0 */\n      eq\n        /* \"contracts/EasyStaking.sol\":16841:17026  if (param.timestamp == 0) {... */\n      iszero\n      tag_370\n      jumpi\n        /* \"contracts/EasyStaking.sol\":16898:16906  _address */\n      dup2\n        /* \"contracts/EasyStaking.sol\":16881:16886  param */\n      dup2\n        /* \"contracts/EasyStaking.sol\":16881:16895  param.oldValue */\n      0x00\n      add\n        /* \"contracts/EasyStaking.sol\":16881:16906  param.oldValue = _address */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":16841:17026  if (param.timestamp == 0) {... */\n      jump(tag_371)\n    tag_370:\n        /* \"contracts/EasyStaking.sol\":16927:16968  _paramUpdateDelayElapsed(param.timestamp) */\n      tag_372\n        /* \"contracts/EasyStaking.sol\":16952:16957  param */\n      dup2\n        /* \"contracts/EasyStaking.sol\":16952:16967  param.timestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/EasyStaking.sol\":16927:16951  _paramUpdateDelayElapsed */\n      tag_338\n        /* \"contracts/EasyStaking.sol\":16927:16968  _paramUpdateDelayElapsed(param.timestamp) */\n      jump\t// in\n    tag_372:\n        /* \"contracts/EasyStaking.sol\":16923:17026  if (_paramUpdateDelayElapsed(param.timestamp)) {... */\n      iszero\n      tag_373\n      jumpi\n        /* \"contracts/EasyStaking.sol\":17001:17006  param */\n      dup1\n        /* \"contracts/EasyStaking.sol\":17001:17015  param.newValue */\n      0x20\n      add\n      mload\n        /* \"contracts/EasyStaking.sol\":16984:16989  param */\n      dup2\n        /* \"contracts/EasyStaking.sol\":16984:16998  param.oldValue */\n      0x00\n      add\n        /* \"contracts/EasyStaking.sol\":16984:17015  param.oldValue = param.newValue */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":16923:17026  if (_paramUpdateDelayElapsed(param.timestamp)) {... */\n    tag_373:\n        /* \"contracts/EasyStaking.sol\":16841:17026  if (param.timestamp == 0) {... */\n    tag_371:\n        /* \"contracts/EasyStaking.sol\":17052:17060  _address */\n      dup2\n        /* \"contracts/EasyStaking.sol\":17035:17040  param */\n      dup2\n        /* \"contracts/EasyStaking.sol\":17035:17049  param.newValue */\n      0x20\n      add\n        /* \"contracts/EasyStaking.sol\":17035:17060  param.newValue = _address */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":17088:17094  _now() */\n      tag_374\n        /* \"contracts/EasyStaking.sol\":17088:17092  _now */\n      tag_174\n        /* \"contracts/EasyStaking.sol\":17088:17094  _now() */\n      jump\t// in\n    tag_374:\n        /* \"contracts/EasyStaking.sol\":17070:17075  param */\n      dup2\n        /* \"contracts/EasyStaking.sol\":17070:17085  param.timestamp */\n      0x40\n      add\n        /* \"contracts/EasyStaking.sol\":17070:17094  param.timestamp = _now() */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":17143:17148  param */\n      dup1\n        /* \"contracts/EasyStaking.sol\":17104:17140  liquidityProvidersRewardAddressParam */\n      0x9a\n        /* \"contracts/EasyStaking.sol\":17104:17148  liquidityProvidersRewardAddressParam = param */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":17163:17219  LiquidityProvidersRewardAddressSet(_address, msg.sender) */\n      0x26a68c9d9649fb5e7a060a37b211ffd1d9a4fe6eb068bfb33decba647d4ed539\n        /* \"contracts/EasyStaking.sol\":17198:17206  _address */\n      dup3\n        /* \"contracts/EasyStaking.sol\":17208:17218  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":17163:17219  LiquidityProvidersRewardAddressSet(_address, msg.sender) */\n      mload(0x40)\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1219:1220  _ */\n      pop\n        /* \"contracts/EasyStaking.sol\":16560:17226  function setLiquidityProvidersRewardAddress(address _address) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":4584:4635  uint256 public constant PARAM_UPDATE_DELAY = 7 days */\n    tag_157:\n        /* \"contracts/EasyStaking.sol\":4629:4635  7 days */\n      0x093a80\n        /* \"contracts/EasyStaking.sol\":4584:4635  uint256 public constant PARAM_UPDATE_DELAY = 7 days */\n      dup2\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":17284:17381  function fee() public view returns (uint256) {... */\n    tag_159:\n        /* \"contracts/EasyStaking.sol\":17320:17327  uint256 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":17346:17374  _getUintParamValue(feeParam) */\n      tag_376\n        /* \"contracts/EasyStaking.sol\":17365:17373  feeParam */\n      0x9d\n        /* \"contracts/EasyStaking.sol\":17346:17374  _getUintParamValue(feeParam) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":17346:17364  _getUintParamValue */\n      tag_213\n        /* \"contracts/EasyStaking.sol\":17346:17374  _getUintParamValue(feeParam) */\n      jump\t// in\n    tag_376:\n        /* \"contracts/EasyStaking.sol\":17339:17374  return _getUintParamValue(feeParam) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":17284:17381  function fee() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":5927:6007  mapping (address => mapping (uint256 => uint256)) public withdrawalRequestsDates */\n    tag_162:\n      mstore(0x20, 0xae)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":9308:9669  function deposit(uint256 _depositId, uint256 _amount) public {... */\n    tag_165:\n        /* \"contracts/EasyStaking.sol\":9400:9401  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":9387:9397  _depositId */\n      dup3\n        /* \"contracts/EasyStaking.sol\":9387:9401  _depositId > 0 */\n      gt\n        /* \"contracts/EasyStaking.sol\":9387:9445  _depositId > 0 && _depositId <= lastDepositIds[msg.sender] */\n      dup1\n      iszero\n      tag_378\n      jumpi\n      pop\n        /* \"contracts/EasyStaking.sol\":9419:9433  lastDepositIds */\n      0xaf\n        /* \"contracts/EasyStaking.sol\":9419:9445  lastDepositIds[msg.sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":9434:9444  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":9419:9445  lastDepositIds[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":9405:9415  _depositId */\n      dup3\n        /* \"contracts/EasyStaking.sol\":9405:9445  _depositId <= lastDepositIds[msg.sender] */\n      gt\n      iszero\n        /* \"contracts/EasyStaking.sol\":9387:9445  _depositId > 0 && _depositId <= lastDepositIds[msg.sender] */\n    tag_378:\n        /* \"contracts/EasyStaking.sol\":9379:9466  require(_depositId > 0 && _depositId <= lastDepositIds[msg.sender], \"wrong deposit id\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77726f6e67206465706f73697420696400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_379:\n        /* \"contracts/EasyStaking.sol\":9476:9517  _deposit(msg.sender, _depositId, _amount) */\n      tag_380\n        /* \"contracts/EasyStaking.sol\":9485:9495  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":9497:9507  _depositId */\n      dup4\n        /* \"contracts/EasyStaking.sol\":9509:9516  _amount */\n      dup4\n        /* \"contracts/EasyStaking.sol\":9476:9484  _deposit */\n      tag_323\n        /* \"contracts/EasyStaking.sol\":9476:9517  _deposit(msg.sender, _depositId, _amount) */\n      jump\t// in\n    tag_380:\n        /* \"contracts/EasyStaking.sol\":9527:9543  _setLocked(true) */\n      tag_381\n        /* \"contracts/EasyStaking.sol\":9538:9542  true */\n      0x01\n        /* \"contracts/EasyStaking.sol\":9527:9537  _setLocked */\n      tag_382\n        /* \"contracts/EasyStaking.sol\":9527:9543  _setLocked(true) */\n      jump\t// in\n    tag_381:\n        /* \"contracts/EasyStaking.sol\":9561:9566  token */\n      0x99\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":9561:9579  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/EasyStaking.sol\":9580:9590  msg.sender */\n      caller\n        /* \"contracts/EasyStaking.sol\":9600:9604  this */\n      address\n        /* \"contracts/EasyStaking.sol\":9607:9614  _amount */\n      dup5\n        /* \"contracts/EasyStaking.sol\":9561:9615  token.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_383\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_383:\n        /* \"contracts/EasyStaking.sol\":9561:9615  token.transferFrom(msg.sender, address(this), _amount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_384\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_384:\n        /* \"contracts/EasyStaking.sol\":9561:9615  token.transferFrom(msg.sender, address(this), _amount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_385\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_385:\n        /* \"contracts/EasyStaking.sol\":9561:9615  token.transferFrom(msg.sender, address(this), _amount) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":9553:9635  require(token.transferFrom(msg.sender, address(this), _amount), \"transfer failed\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e73666572206661696c65640000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_386:\n        /* \"contracts/EasyStaking.sol\":9645:9662  _setLocked(false) */\n      tag_387\n        /* \"contracts/EasyStaking.sol\":9656:9661  false */\n      0x00\n        /* \"contracts/EasyStaking.sol\":9645:9655  _setLocked */\n      tag_382\n        /* \"contracts/EasyStaking.sol\":9645:9662  _setLocked(false) */\n      jump\t// in\n    tag_387:\n        /* \"contracts/EasyStaking.sol\":9308:9669  function deposit(uint256 _depositId, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2032:2139  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_168:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      tag_389\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1170  isOwner */\n      tag_116\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1163:1172  isOwner() */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":1155:1209  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_390\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_390:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2104:2132  _transferOwnership(newOwner) */\n      tag_392\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2123:2131  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2104:2122  _transferOwnership */\n      tag_393\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2104:2132  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_392:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2032:2139  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":4661:4688  IERC20Mintable public token */\n    tag_170:\n      0x99\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":25357:25657  function _now() internal view returns (uint256) {... */\n    tag_174:\n        /* \"contracts/EasyStaking.sol\":25396:25403  uint256 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":25598:25601  now */\n      timestamp\n        /* \"contracts/EasyStaking.sol\":25591:25601  return now */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":25357:25657  function _now() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_396\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1362:1363  a */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1365:1366  b */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1358:1361  sub */\n      tag_397\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1351:1401  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_399\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_399:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":21936:23171  function _withdraw(address _sender, uint256 _id, uint256 _amount, bool _forced) internal nonReentrant {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1409:1410  1 */\n      0x01\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1392:1405  _guardCounter */\n      0x66\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1392:1410  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1420:1440  uint256 localCounter */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1443:1456  _guardCounter */\n      sload(0x66)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1420:1456  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":22062:22063  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22056:22059  _id */\n      dup5\n        /* \"contracts/EasyStaking.sol\":22056:22063  _id > 0 */\n      gt\n        /* \"contracts/EasyStaking.sol\":22056:22097  _id > 0 && _id <= lastDepositIds[_sender] */\n      dup1\n      iszero\n      tag_402\n      jumpi\n      pop\n        /* \"contracts/EasyStaking.sol\":22074:22088  lastDepositIds */\n      0xaf\n        /* \"contracts/EasyStaking.sol\":22074:22097  lastDepositIds[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22089:22096  _sender */\n      dup7\n        /* \"contracts/EasyStaking.sol\":22074:22097  lastDepositIds[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":22067:22070  _id */\n      dup5\n        /* \"contracts/EasyStaking.sol\":22067:22097  _id <= lastDepositIds[_sender] */\n      gt\n      iszero\n        /* \"contracts/EasyStaking.sol\":22056:22097  _id > 0 && _id <= lastDepositIds[_sender] */\n    tag_402:\n        /* \"contracts/EasyStaking.sol\":22048:22118  require(_id > 0 && _id <= lastDepositIds[_sender], \"wrong deposit id\") */\n      tag_403\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77726f6e67206465706f73697420696400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_403:\n        /* \"contracts/EasyStaking.sol\":22161:22162  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22136:22144  balances */\n      0xac\n        /* \"contracts/EasyStaking.sol\":22136:22153  balances[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22145:22152  _sender */\n      dup8\n        /* \"contracts/EasyStaking.sol\":22136:22153  balances[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":22136:22158  balances[_sender][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22154:22157  _id */\n      dup7\n        /* \"contracts/EasyStaking.sol\":22136:22158  balances[_sender][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":22136:22162  balances[_sender][_id] > 0 */\n      gt\n        /* \"contracts/EasyStaking.sol\":22136:22199  balances[_sender][_id] > 0 && balances[_sender][_id] >= _amount */\n      dup1\n      iszero\n      tag_404\n      jumpi\n      pop\n        /* \"contracts/EasyStaking.sol\":22192:22199  _amount */\n      dup3\n        /* \"contracts/EasyStaking.sol\":22166:22174  balances */\n      0xac\n        /* \"contracts/EasyStaking.sol\":22166:22183  balances[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22175:22182  _sender */\n      dup8\n        /* \"contracts/EasyStaking.sol\":22166:22183  balances[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":22166:22188  balances[_sender][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22184:22187  _id */\n      dup7\n        /* \"contracts/EasyStaking.sol\":22166:22188  balances[_sender][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":22166:22199  balances[_sender][_id] >= _amount */\n      lt\n      iszero\n        /* \"contracts/EasyStaking.sol\":22136:22199  balances[_sender][_id] > 0 && balances[_sender][_id] >= _amount */\n    tag_404:\n        /* \"contracts/EasyStaking.sol\":22128:22222  require(balances[_sender][_id] > 0 && balances[_sender][_id] >= _amount, \"insufficient funds\") */\n      tag_405\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x696e73756666696369656e742066756e64730000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_405:\n        /* \"contracts/EasyStaking.sol\":22240:22282  lockAfterStakeDurationPassed(_sender, _id) */\n      tag_406\n        /* \"contracts/EasyStaking.sol\":22269:22276  _sender */\n      dup6\n        /* \"contracts/EasyStaking.sol\":22278:22281  _id */\n      dup6\n        /* \"contracts/EasyStaking.sol\":22240:22268  lockAfterStakeDurationPassed */\n      tag_59\n        /* \"contracts/EasyStaking.sol\":22240:22282  lockAfterStakeDurationPassed(_sender, _id) */\n      jump\t// in\n    tag_406:\n        /* \"contracts/EasyStaking.sol\":22232:22330  require(lockAfterStakeDurationPassed(_sender, _id), \"can not withdraw during initial lock period\") */\n      tag_407\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a232e1f8b28a085f31f602663a0343288b51e95e524fa8082d77230266997c5c\n      0x2b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_407:\n        /* \"contracts/EasyStaking.sol\":22341:22364  uint256 accruedEmission */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22366:22384  uint256 timePassed */\n      dup1\n        /* \"contracts/EasyStaking.sol\":22388:22416  _mint(_sender, _id, _amount) */\n      tag_408\n        /* \"contracts/EasyStaking.sol\":22394:22401  _sender */\n      dup8\n        /* \"contracts/EasyStaking.sol\":22403:22406  _id */\n      dup8\n        /* \"contracts/EasyStaking.sol\":22408:22415  _amount */\n      dup8\n        /* \"contracts/EasyStaking.sol\":22388:22393  _mint */\n      tag_409\n        /* \"contracts/EasyStaking.sol\":22388:22416  _mint(_sender, _id, _amount) */\n      jump\t// in\n    tag_408:\n        /* \"contracts/EasyStaking.sol\":22340:22416  (uint256 accruedEmission, uint256 timePassed) = _mint(_sender, _id, _amount) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/EasyStaking.sol\":22426:22440  uint256 amount */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22454:22455  0 */\n      dup1\n        /* \"contracts/EasyStaking.sol\":22443:22450  _amount */\n      dup7\n        /* \"contracts/EasyStaking.sol\":22443:22455  _amount == 0 */\n      eq\n        /* \"contracts/EasyStaking.sol\":22443:22511  _amount == 0 ? balances[_sender][_id] : _amount.add(accruedEmission) */\n      tag_410\n      jumpi\n        /* \"contracts/EasyStaking.sol\":22483:22511  _amount.add(accruedEmission) */\n      tag_411\n        /* \"contracts/EasyStaking.sol\":22495:22510  accruedEmission */\n      dup4\n        /* \"contracts/EasyStaking.sol\":22483:22490  _amount */\n      dup8\n        /* \"contracts/EasyStaking.sol\":22483:22494  _amount.add */\n      tag_182\n      swap1\n        /* \"contracts/EasyStaking.sol\":22483:22511  _amount.add(accruedEmission) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_411:\n        /* \"contracts/EasyStaking.sol\":22443:22511  _amount == 0 ? balances[_sender][_id] : _amount.add(accruedEmission) */\n      jump(tag_412)\n    tag_410:\n        /* \"contracts/EasyStaking.sol\":22458:22466  balances */\n      0xac\n        /* \"contracts/EasyStaking.sol\":22458:22475  balances[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22467:22474  _sender */\n      dup10\n        /* \"contracts/EasyStaking.sol\":22458:22475  balances[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":22458:22480  balances[_sender][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22476:22479  _id */\n      dup9\n        /* \"contracts/EasyStaking.sol\":22458:22480  balances[_sender][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":22443:22511  _amount == 0 ? balances[_sender][_id] : _amount.add(accruedEmission) */\n    tag_412:\n        /* \"contracts/EasyStaking.sol\":22426:22511  uint256 amount = _amount == 0 ? balances[_sender][_id] : _amount.add(accruedEmission) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":22546:22580  balances[_sender][_id].sub(amount) */\n      tag_413\n        /* \"contracts/EasyStaking.sol\":22573:22579  amount */\n      dup2\n        /* \"contracts/EasyStaking.sol\":22546:22554  balances */\n      0xac\n        /* \"contracts/EasyStaking.sol\":22546:22563  balances[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22555:22562  _sender */\n      dup12\n        /* \"contracts/EasyStaking.sol\":22546:22563  balances[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":22546:22568  balances[_sender][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22564:22567  _id */\n      dup11\n        /* \"contracts/EasyStaking.sol\":22546:22568  balances[_sender][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":22546:22572  balances[_sender][_id].sub */\n      tag_175\n      swap1\n        /* \"contracts/EasyStaking.sol\":22546:22580  balances[_sender][_id].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_413:\n        /* \"contracts/EasyStaking.sol\":22521:22529  balances */\n      0xac\n        /* \"contracts/EasyStaking.sol\":22521:22538  balances[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22530:22537  _sender */\n      dup11\n        /* \"contracts/EasyStaking.sol\":22521:22538  balances[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":22521:22543  balances[_sender][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22539:22542  _id */\n      dup10\n        /* \"contracts/EasyStaking.sol\":22521:22543  balances[_sender][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":22521:22580  balances[_sender][_id] = balances[_sender][_id].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":22604:22627  totalStaked.sub(amount) */\n      tag_414\n        /* \"contracts/EasyStaking.sol\":22620:22626  amount */\n      dup2\n        /* \"contracts/EasyStaking.sol\":22604:22615  totalStaked */\n      sload(0xb0)\n        /* \"contracts/EasyStaking.sol\":22604:22619  totalStaked.sub */\n      tag_175\n      swap1\n        /* \"contracts/EasyStaking.sol\":22604:22627  totalStaked.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_414:\n        /* \"contracts/EasyStaking.sol\":22590:22601  totalStaked */\n      0xb0\n        /* \"contracts/EasyStaking.sol\":22590:22627  totalStaked = totalStaked.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":22667:22668  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22641:22649  balances */\n      0xac\n        /* \"contracts/EasyStaking.sol\":22641:22658  balances[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22650:22657  _sender */\n      dup11\n        /* \"contracts/EasyStaking.sol\":22641:22658  balances[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":22641:22663  balances[_sender][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22659:22662  _id */\n      dup10\n        /* \"contracts/EasyStaking.sol\":22641:22663  balances[_sender][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":22641:22668  balances[_sender][_id] == 0 */\n      eq\n        /* \"contracts/EasyStaking.sol\":22637:22725  if (balances[_sender][_id] == 0) {... */\n      iszero\n      tag_415\n      jumpi\n        /* \"contracts/EasyStaking.sol\":22713:22714  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22684:22696  depositDates */\n      0xad\n        /* \"contracts/EasyStaking.sol\":22684:22705  depositDates[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22697:22704  _sender */\n      dup11\n        /* \"contracts/EasyStaking.sol\":22684:22705  depositDates[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":22684:22710  depositDates[_sender][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22706:22709  _id */\n      dup10\n        /* \"contracts/EasyStaking.sol\":22684:22710  depositDates[_sender][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":22684:22714  depositDates[_sender][_id] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":22637:22725  if (balances[_sender][_id] == 0) {... */\n    tag_415:\n        /* \"contracts/EasyStaking.sol\":22734:22750  uint256 feeValue */\n      0x00\n        /* \"contracts/EasyStaking.sol\":22753:22754  0 */\n      dup1\n        /* \"contracts/EasyStaking.sol\":22734:22754  uint256 feeValue = 0 */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":22768:22775  _forced */\n      dup6\n        /* \"contracts/EasyStaking.sol\":22764:22987  if (_forced) {... */\n      iszero\n      tag_416\n      jumpi\n        /* \"contracts/EasyStaking.sol\":22802:22832  amount.mul(fee()).div(1 ether) */\n      tag_417\n        /* \"contracts/EasyStaking.sol\":22824:22831  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/EasyStaking.sol\":22802:22819  amount.mul(fee()) */\n      tag_418\n        /* \"contracts/EasyStaking.sol\":22813:22818  fee() */\n      tag_419\n        /* \"contracts/EasyStaking.sol\":22813:22816  fee */\n      tag_159\n        /* \"contracts/EasyStaking.sol\":22813:22818  fee() */\n      jump\t// in\n    tag_419:\n        /* \"contracts/EasyStaking.sol\":22802:22808  amount */\n      dup6\n        /* \"contracts/EasyStaking.sol\":22802:22812  amount.mul */\n      tag_231\n      swap1\n        /* \"contracts/EasyStaking.sol\":22802:22819  amount.mul(fee()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_418:\n        /* \"contracts/EasyStaking.sol\":22802:22823  amount.mul(fee()).div */\n      tag_201\n      swap1\n        /* \"contracts/EasyStaking.sol\":22802:22832  amount.mul(fee()).div(1 ether) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_417:\n        /* \"contracts/EasyStaking.sol\":22791:22832  feeValue = amount.mul(fee()).div(1 ether) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":22855:22875  amount.sub(feeValue) */\n      tag_420\n        /* \"contracts/EasyStaking.sol\":22866:22874  feeValue */\n      dup2\n        /* \"contracts/EasyStaking.sol\":22855:22861  amount */\n      dup4\n        /* \"contracts/EasyStaking.sol\":22855:22865  amount.sub */\n      tag_175\n      swap1\n        /* \"contracts/EasyStaking.sol\":22855:22875  amount.sub(feeValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_420:\n        /* \"contracts/EasyStaking.sol\":22846:22875  amount = amount.sub(feeValue) */\n      swap2\n      pop\n        /* \"contracts/EasyStaking.sol\":22897:22902  token */\n      0x99\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":22897:22911  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/EasyStaking.sol\":22912:22945  liquidityProvidersRewardAddress() */\n      tag_421\n        /* \"contracts/EasyStaking.sol\":22912:22943  liquidityProvidersRewardAddress */\n      tag_146\n        /* \"contracts/EasyStaking.sol\":22912:22945  liquidityProvidersRewardAddress() */\n      jump\t// in\n    tag_421:\n        /* \"contracts/EasyStaking.sol\":22947:22955  feeValue */\n      dup4\n        /* \"contracts/EasyStaking.sol\":22897:22956  token.transfer(liquidityProvidersRewardAddress(), feeValue) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_422\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_422:\n        /* \"contracts/EasyStaking.sol\":22897:22956  token.transfer(liquidityProvidersRewardAddress(), feeValue) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_423\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_423:\n        /* \"contracts/EasyStaking.sol\":22897:22956  token.transfer(liquidityProvidersRewardAddress(), feeValue) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_424\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_424:\n        /* \"contracts/EasyStaking.sol\":22897:22956  token.transfer(liquidityProvidersRewardAddress(), feeValue) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":22889:22976  require(token.transfer(liquidityProvidersRewardAddress(), feeValue), \"transfer failed\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e73666572206661696c65640000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_425:\n        /* \"contracts/EasyStaking.sol\":22764:22987  if (_forced) {... */\n    tag_416:\n        /* \"contracts/EasyStaking.sol\":23004:23009  token */\n      0x99\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":23004:23018  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/EasyStaking.sol\":23019:23026  _sender */\n      dup11\n        /* \"contracts/EasyStaking.sol\":23028:23034  amount */\n      dup5\n        /* \"contracts/EasyStaking.sol\":23004:23035  token.transfer(_sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_426\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_426:\n        /* \"contracts/EasyStaking.sol\":23004:23035  token.transfer(_sender, amount) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_427\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_427:\n        /* \"contracts/EasyStaking.sol\":23004:23035  token.transfer(_sender, amount) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_428\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_428:\n        /* \"contracts/EasyStaking.sol\":23004:23035  token.transfer(_sender, amount) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":22996:23055  require(token.transfer(_sender, amount), \"transfer failed\") */\n      tag_429\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e73666572206661696c65640000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_429:\n        /* \"contracts/EasyStaking.sol\":23089:23092  _id */\n      dup8\n        /* \"contracts/EasyStaking.sol\":23080:23087  _sender */\n      dup10\n        /* \"contracts/EasyStaking.sol\":23070:23164  Withdrawn(_sender, _id, amount, feeValue, balances[_sender][_id], accruedEmission, timePassed) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6b4651e8f4162f82274a25e57a29f7ed9156d17078e76dd4d05f04ba08831aa4\n        /* \"contracts/EasyStaking.sol\":23094:23100  amount */\n      dup5\n        /* \"contracts/EasyStaking.sol\":23102:23110  feeValue */\n      dup5\n        /* \"contracts/EasyStaking.sol\":23112:23120  balances */\n      0xac\n        /* \"contracts/EasyStaking.sol\":23112:23129  balances[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23121:23128  _sender */\n      dup16\n        /* \"contracts/EasyStaking.sol\":23112:23129  balances[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":23112:23134  balances[_sender][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23130:23133  _id */\n      dup15\n        /* \"contracts/EasyStaking.sol\":23112:23134  balances[_sender][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":23136:23151  accruedEmission */\n      dup10\n        /* \"contracts/EasyStaking.sol\":23153:23163  timePassed */\n      dup10\n        /* \"contracts/EasyStaking.sol\":23070:23164  Withdrawn(_sender, _id, amount, feeValue, balances[_sender][_id], accruedEmission, timePassed) */\n      mload(0x40)\n      dup1\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1466:1467  _ */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1501:1514  _guardCounter */\n      sload(0x66)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1485:1497  localCounter */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1485:1514  localCounter == _guardCounter */\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1477:1550  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_430\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_430:\n        /* \"contracts/EasyStaking.sol\":21936:23171  function _withdraw(address _sender, uint256 _id, uint256 _amount, bool _forced) internal nonReentrant {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":24282:24641  function _updateUintParam(UintParam storage _param, uint256 _newValue) internal {... */\n    tag_195:\n        /* \"contracts/EasyStaking.sol\":24396:24397  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":24376:24382  _param */\n      dup3\n        /* \"contracts/EasyStaking.sol\":24376:24392  _param.timestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/EasyStaking.sol\":24376:24397  _param.timestamp == 0 */\n      eq\n        /* \"contracts/EasyStaking.sol\":24372:24563  if (_param.timestamp == 0) {... */\n      iszero\n      tag_432\n      jumpi\n        /* \"contracts/EasyStaking.sol\":24431:24440  _newValue */\n      dup1\n        /* \"contracts/EasyStaking.sol\":24413:24419  _param */\n      dup3\n        /* \"contracts/EasyStaking.sol\":24413:24428  _param.oldValue */\n      0x00\n      add\n        /* \"contracts/EasyStaking.sol\":24413:24440  _param.oldValue = _newValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":24372:24563  if (_param.timestamp == 0) {... */\n      jump(tag_433)\n    tag_432:\n        /* \"contracts/EasyStaking.sol\":24461:24503  _paramUpdateDelayElapsed(_param.timestamp) */\n      tag_434\n        /* \"contracts/EasyStaking.sol\":24486:24492  _param */\n      dup3\n        /* \"contracts/EasyStaking.sol\":24486:24502  _param.timestamp */\n      0x02\n      add\n      sload\n        /* \"contracts/EasyStaking.sol\":24461:24485  _paramUpdateDelayElapsed */\n      tag_338\n        /* \"contracts/EasyStaking.sol\":24461:24503  _paramUpdateDelayElapsed(_param.timestamp) */\n      jump\t// in\n    tag_434:\n        /* \"contracts/EasyStaking.sol\":24457:24563  if (_paramUpdateDelayElapsed(_param.timestamp)) {... */\n      iszero\n      tag_435\n      jumpi\n        /* \"contracts/EasyStaking.sol\":24537:24543  _param */\n      dup2\n        /* \"contracts/EasyStaking.sol\":24537:24552  _param.newValue */\n      0x01\n      add\n      sload\n        /* \"contracts/EasyStaking.sol\":24519:24525  _param */\n      dup3\n        /* \"contracts/EasyStaking.sol\":24519:24534  _param.oldValue */\n      0x00\n      add\n        /* \"contracts/EasyStaking.sol\":24519:24552  _param.oldValue = _param.newValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":24457:24563  if (_paramUpdateDelayElapsed(_param.timestamp)) {... */\n    tag_435:\n        /* \"contracts/EasyStaking.sol\":24372:24563  if (_param.timestamp == 0) {... */\n    tag_433:\n        /* \"contracts/EasyStaking.sol\":24590:24599  _newValue */\n      dup1\n        /* \"contracts/EasyStaking.sol\":24572:24578  _param */\n      dup3\n        /* \"contracts/EasyStaking.sol\":24572:24587  _param.newValue */\n      0x01\n      add\n        /* \"contracts/EasyStaking.sol\":24572:24599  _param.newValue = _newValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":24628:24634  _now() */\n      tag_436\n        /* \"contracts/EasyStaking.sol\":24628:24632  _now */\n      tag_174\n        /* \"contracts/EasyStaking.sol\":24628:24634  _now() */\n      jump\t// in\n    tag_436:\n        /* \"contracts/EasyStaking.sol\":24609:24615  _param */\n      dup3\n        /* \"contracts/EasyStaking.sol\":24609:24625  _param.timestamp */\n      0x02\n      add\n        /* \"contracts/EasyStaking.sol\":24609:24634  _param.timestamp = _now() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":24282:24641  function _updateUintParam(UintParam storage _param, uint256 _newValue) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3073:3203  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3131:3138  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3157:3196  div(a, b, \"SafeMath: division by zero\") */\n      tag_438\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3161:3162  a */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3164:3165  b */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3157:3196  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3157:3160  div */\n      tag_439\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3157:3196  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_438:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3150:3196  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3073:3203  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/Sigmoid.sol\":705:1231  function setParameters(State storage self, uint256 _a, int256 _b, uint256 _c) internal {... */\n    tag_204:\n        /* \"contracts/lib/Sigmoid.sol\":816:817  0 */\n      0x00\n        /* \"contracts/lib/Sigmoid.sol\":810:812  _c */\n      dup2\n        /* \"contracts/lib/Sigmoid.sol\":810:817  _c != 0 */\n      eq\n      iszero\n        /* \"contracts/lib/Sigmoid.sol\":802:846  require(_c != 0, \"should be greater than 0\") */\n      tag_441\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x73686f756c642062652067726561746572207468616e20300000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_441:\n        /* \"contracts/lib/Sigmoid.sol\":884:908  uint256 currentTimestamp */\n      0x00\n        /* \"contracts/lib/Sigmoid.sol\":911:917  _now() */\n      tag_442\n        /* \"contracts/lib/Sigmoid.sol\":911:915  _now */\n      tag_443\n        /* \"contracts/lib/Sigmoid.sol\":911:917  _now() */\n      jump\t// in\n    tag_442:\n        /* \"contracts/lib/Sigmoid.sol\":884:917  uint256 currentTimestamp = _now() */\n      swap1\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":949:950  0 */\n      0x00\n        /* \"contracts/lib/Sigmoid.sol\":931:935  self */\n      dup6\n        /* \"contracts/lib/Sigmoid.sol\":931:945  self.timestamp */\n      0x06\n      add\n      sload\n        /* \"contracts/lib/Sigmoid.sol\":931:950  self.timestamp == 0 */\n      eq\n        /* \"contracts/lib/Sigmoid.sol\":927:1137  if (self.timestamp == 0) {... */\n      iszero\n      tag_444\n      jumpi\n        /* \"contracts/lib/Sigmoid.sol\":983:1001  Params(_a, _b, _c) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/lib/Sigmoid.sol\":990:992  _a */\n      dup6\n        /* \"contracts/lib/Sigmoid.sol\":983:1001  Params(_a, _b, _c) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/lib/Sigmoid.sol\":994:996  _b */\n      dup5\n        /* \"contracts/lib/Sigmoid.sol\":983:1001  Params(_a, _b, _c) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/lib/Sigmoid.sol\":998:1000  _c */\n      dup4\n        /* \"contracts/lib/Sigmoid.sol\":983:1001  Params(_a, _b, _c) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":966:970  self */\n      dup6\n        /* \"contracts/lib/Sigmoid.sol\":966:980  self.oldParams */\n      0x00\n      add\n        /* \"contracts/lib/Sigmoid.sol\":966:1001  self.oldParams = Params(_a, _b, _c) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":927:1137  if (self.timestamp == 0) {... */\n      jump(tag_445)\n    tag_444:\n        /* \"contracts/lib/Sigmoid.sol\":1041:1079  self.timestamp.add(PARAM_UPDATE_DELAY) */\n      tag_446\n        /* \"contracts/lib/Sigmoid.sol\":338:344  7 days */\n      0x093a80\n        /* \"contracts/lib/Sigmoid.sol\":1041:1045  self */\n      dup7\n        /* \"contracts/lib/Sigmoid.sol\":1041:1055  self.timestamp */\n      0x06\n      add\n      sload\n        /* \"contracts/lib/Sigmoid.sol\":1041:1059  self.timestamp.add */\n      tag_182\n      swap1\n        /* \"contracts/lib/Sigmoid.sol\":1041:1079  self.timestamp.add(PARAM_UPDATE_DELAY) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_446:\n        /* \"contracts/lib/Sigmoid.sol\":1022:1038  currentTimestamp */\n      dup2\n        /* \"contracts/lib/Sigmoid.sol\":1022:1079  currentTimestamp > self.timestamp.add(PARAM_UPDATE_DELAY) */\n      gt\n        /* \"contracts/lib/Sigmoid.sol\":1018:1137  if (currentTimestamp > self.timestamp.add(PARAM_UPDATE_DELAY)) {... */\n      iszero\n      tag_447\n      jumpi\n        /* \"contracts/lib/Sigmoid.sol\":1112:1116  self */\n      dup5\n        /* \"contracts/lib/Sigmoid.sol\":1112:1126  self.newParams */\n      0x03\n      add\n        /* \"contracts/lib/Sigmoid.sol\":1095:1099  self */\n      dup6\n        /* \"contracts/lib/Sigmoid.sol\":1095:1109  self.oldParams */\n      0x00\n      add\n        /* \"contracts/lib/Sigmoid.sol\":1095:1126  self.oldParams = self.newParams */\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      0x00\n      add\n      sstore\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      0x01\n      add\n      sstore\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":1018:1137  if (currentTimestamp > self.timestamp.add(PARAM_UPDATE_DELAY)) {... */\n    tag_447:\n        /* \"contracts/lib/Sigmoid.sol\":927:1137  if (self.timestamp == 0) {... */\n    tag_445:\n        /* \"contracts/lib/Sigmoid.sol\":1163:1181  Params(_a, _b, _c) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/lib/Sigmoid.sol\":1170:1172  _a */\n      dup6\n        /* \"contracts/lib/Sigmoid.sol\":1163:1181  Params(_a, _b, _c) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/lib/Sigmoid.sol\":1174:1176  _b */\n      dup5\n        /* \"contracts/lib/Sigmoid.sol\":1163:1181  Params(_a, _b, _c) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/lib/Sigmoid.sol\":1178:1180  _c */\n      dup4\n        /* \"contracts/lib/Sigmoid.sol\":1163:1181  Params(_a, _b, _c) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":1146:1150  self */\n      dup6\n        /* \"contracts/lib/Sigmoid.sol\":1146:1160  self.newParams */\n      0x03\n      add\n        /* \"contracts/lib/Sigmoid.sol\":1146:1181  self.newParams = Params(_a, _b, _c) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":1208:1224  currentTimestamp */\n      dup1\n        /* \"contracts/lib/Sigmoid.sol\":1191:1195  self */\n      dup6\n        /* \"contracts/lib/Sigmoid.sol\":1191:1205  self.timestamp */\n      0x06\n      add\n        /* \"contracts/lib/Sigmoid.sol\":1191:1224  self.timestamp = currentTimestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":705:1231  function setParameters(State storage self, uint256 _a, int256 _b, uint256 _c) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":24722:24909  function _getUintParamValue(UintParam memory _param) internal view returns (uint256) {... */\n    tag_213:\n        /* \"contracts/EasyStaking.sol\":24798:24805  uint256 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":24824:24866  _paramUpdateDelayElapsed(_param.timestamp) */\n      tag_449\n        /* \"contracts/EasyStaking.sol\":24849:24855  _param */\n      dup3\n        /* \"contracts/EasyStaking.sol\":24849:24865  _param.timestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/EasyStaking.sol\":24824:24848  _paramUpdateDelayElapsed */\n      tag_338\n        /* \"contracts/EasyStaking.sol\":24824:24866  _paramUpdateDelayElapsed(_param.timestamp) */\n      jump\t// in\n    tag_449:\n        /* \"contracts/EasyStaking.sol\":24824:24902  _paramUpdateDelayElapsed(_param.timestamp) ? _param.newValue : _param.oldValue */\n      tag_450\n      jumpi\n        /* \"contracts/EasyStaking.sol\":24887:24893  _param */\n      dup2\n        /* \"contracts/EasyStaking.sol\":24887:24902  _param.oldValue */\n      0x00\n      add\n      mload\n        /* \"contracts/EasyStaking.sol\":24824:24902  _paramUpdateDelayElapsed(_param.timestamp) ? _param.newValue : _param.oldValue */\n      jump(tag_451)\n    tag_450:\n        /* \"contracts/EasyStaking.sol\":24869:24875  _param */\n      dup2\n        /* \"contracts/EasyStaking.sol\":24869:24884  _param.newValue */\n      0x20\n      add\n      mload\n        /* \"contracts/EasyStaking.sol\":24824:24902  _paramUpdateDelayElapsed(_param.timestamp) ? _param.newValue : _param.oldValue */\n    tag_451:\n        /* \"contracts/EasyStaking.sol\":24817:24902  return _paramUpdateDelayElapsed(_param.timestamp) ? _param.newValue : _param.oldValue */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":24722:24909  function _getUintParamValue(UintParam memory _param) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/lib/Sigmoid.sol\":1707:2004  function calculate(State storage self, int256 _x) internal view returns (uint256) {... */\n    tag_223:\n        /* \"contracts/lib/Sigmoid.sol\":1780:1787  uint256 */\n      0x00\n        /* \"contracts/lib/Sigmoid.sol\":1800:1809  uint256 a */\n      dup1\n        /* \"contracts/lib/Sigmoid.sol\":1811:1819  int256 b */\n      0x00\n        /* \"contracts/lib/Sigmoid.sol\":1821:1830  uint256 c */\n      dup1\n        /* \"contracts/lib/Sigmoid.sol\":1834:1853  getParameters(self) */\n      tag_453\n        /* \"contracts/lib/Sigmoid.sol\":1848:1852  self */\n      dup7\n        /* \"contracts/lib/Sigmoid.sol\":1834:1847  getParameters */\n      tag_251\n        /* \"contracts/lib/Sigmoid.sol\":1834:1853  getParameters(self) */\n      jump\t// in\n    tag_453:\n        /* \"contracts/lib/Sigmoid.sol\":1799:1853  (uint256 a, int256 b, uint256 c) = getParameters(self) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":1863:1871  int256 k */\n      0x00\n        /* \"contracts/lib/Sigmoid.sol\":1879:1880  b */\n      dup3\n        /* \"contracts/lib/Sigmoid.sol\":1874:1876  _x */\n      dup7\n        /* \"contracts/lib/Sigmoid.sol\":1874:1880  _x - b */\n      sub\n        /* \"contracts/lib/Sigmoid.sol\":1863:1880  int256 k = _x - b */\n      swap1\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":1898:1899  0 */\n      0x00\n        /* \"contracts/lib/Sigmoid.sol\":1894:1895  k */\n      dup2\n        /* \"contracts/lib/Sigmoid.sol\":1894:1899  k < 0 */\n      slt\n        /* \"contracts/lib/Sigmoid.sol\":1890:1909  if (k < 0) return 0 */\n      iszero\n      tag_454\n      jumpi\n        /* \"contracts/lib/Sigmoid.sol\":1908:1909  0 */\n      0x00\n        /* \"contracts/lib/Sigmoid.sol\":1901:1909  return 0 */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_452)\n        /* \"contracts/lib/Sigmoid.sol\":1890:1909  if (k < 0) return 0 */\n    tag_454:\n        /* \"contracts/lib/Sigmoid.sol\":1919:1929  uint256 uk */\n      0x00\n        /* \"contracts/lib/Sigmoid.sol\":1940:1941  k */\n      dup2\n        /* \"contracts/lib/Sigmoid.sol\":1919:1942  uint256 uk = uint256(k) */\n      swap1\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":1959:1997  a.mul(uk).div(uk.pow2().add(c).sqrt()) */\n      tag_455\n        /* \"contracts/lib/Sigmoid.sol\":1973:1996  uk.pow2().add(c).sqrt() */\n      tag_456\n        /* \"contracts/lib/Sigmoid.sol\":1973:1989  uk.pow2().add(c) */\n      tag_457\n        /* \"contracts/lib/Sigmoid.sol\":1987:1988  c */\n      dup6\n        /* \"contracts/lib/Sigmoid.sol\":1973:1982  uk.pow2() */\n      tag_458\n        /* \"contracts/lib/Sigmoid.sol\":1973:1975  uk */\n      dup6\n        /* \"contracts/lib/Sigmoid.sol\":1973:1980  uk.pow2 */\n      tag_459\n        /* \"contracts/lib/Sigmoid.sol\":1973:1982  uk.pow2() */\n      jump\t// in\n    tag_458:\n        /* \"contracts/lib/Sigmoid.sol\":1973:1986  uk.pow2().add */\n      tag_182\n      swap1\n        /* \"contracts/lib/Sigmoid.sol\":1973:1989  uk.pow2().add(c) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_457:\n        /* \"contracts/lib/Sigmoid.sol\":1973:1994  uk.pow2().add(c).sqrt */\n      tag_460\n        /* \"contracts/lib/Sigmoid.sol\":1973:1996  uk.pow2().add(c).sqrt() */\n      jump\t// in\n    tag_456:\n        /* \"contracts/lib/Sigmoid.sol\":1959:1968  a.mul(uk) */\n      tag_461\n        /* \"contracts/lib/Sigmoid.sol\":1965:1967  uk */\n      dup4\n        /* \"contracts/lib/Sigmoid.sol\":1959:1960  a */\n      dup9\n        /* \"contracts/lib/Sigmoid.sol\":1959:1964  a.mul */\n      tag_231\n      swap1\n        /* \"contracts/lib/Sigmoid.sol\":1959:1968  a.mul(uk) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_461:\n        /* \"contracts/lib/Sigmoid.sol\":1959:1972  a.mul(uk).div */\n      tag_201\n      swap1\n        /* \"contracts/lib/Sigmoid.sol\":1959:1997  a.mul(uk).div(uk.pow2().add(c).sqrt()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_455:\n        /* \"contracts/lib/Sigmoid.sol\":1952:1997  return a.mul(uk).div(uk.pow2().add(c).sqrt()) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":1707:2004  function calculate(State storage self, int256 _x) internal view returns (uint256) {... */\n    tag_452:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2159:2618  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2217:2224  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2463:2464  0 */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2458:2459  a */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2458:2464  a == 0 */\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2454:2499  if (a == 0) {... */\n      iszero\n      tag_463\n      jumpi\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2487:2488  0 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2480:2488  return 0 */\n      swap1\n      pop\n      jump(tag_462)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2454:2499  if (a == 0) {... */\n    tag_463:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2509:2518  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2525:2526  b */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2521:2522  a */\n      dup5\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2521:2526  a * b */\n      mul\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2509:2526  uint256 c = a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2553:2554  b */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2548:2549  a */\n      dup5\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2544:2545  c */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2544:2549  c / a */\n      dup2\n      tag_464\n      jumpi\n      invalid\n    tag_464:\n      div\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2544:2554  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2536:2592  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_465\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_465:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2610:2611  c */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2603:2611  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":2159:2618  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_462:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/Sigmoid.sol\":1287:1624  function getParameters(State storage self) internal view returns (uint256, int256, uint256) {... */\n    tag_251:\n        /* \"contracts/lib/Sigmoid.sol\":1353:1360  uint256 */\n      0x00\n        /* \"contracts/lib/Sigmoid.sol\":1362:1368  int256 */\n      dup1\n        /* \"contracts/lib/Sigmoid.sol\":1370:1377  uint256 */\n      0x00\n        /* \"contracts/lib/Sigmoid.sol\":1389:1403  bool isUpdated */\n      dup1\n        /* \"contracts/lib/Sigmoid.sol\":1415:1453  self.timestamp.add(PARAM_UPDATE_DELAY) */\n      tag_467\n        /* \"contracts/lib/Sigmoid.sol\":338:344  7 days */\n      0x093a80\n        /* \"contracts/lib/Sigmoid.sol\":1415:1419  self */\n      dup7\n        /* \"contracts/lib/Sigmoid.sol\":1415:1429  self.timestamp */\n      0x06\n      add\n      sload\n        /* \"contracts/lib/Sigmoid.sol\":1415:1433  self.timestamp.add */\n      tag_182\n      swap1\n        /* \"contracts/lib/Sigmoid.sol\":1415:1453  self.timestamp.add(PARAM_UPDATE_DELAY) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_467:\n        /* \"contracts/lib/Sigmoid.sol\":1406:1412  _now() */\n      tag_468\n        /* \"contracts/lib/Sigmoid.sol\":1406:1410  _now */\n      tag_443\n        /* \"contracts/lib/Sigmoid.sol\":1406:1412  _now() */\n      jump\t// in\n    tag_468:\n        /* \"contracts/lib/Sigmoid.sol\":1406:1453  _now() > self.timestamp.add(PARAM_UPDATE_DELAY) */\n      gt\n        /* \"contracts/lib/Sigmoid.sol\":1389:1453  bool isUpdated = _now() > self.timestamp.add(PARAM_UPDATE_DELAY) */\n      swap1\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":1470:1479  isUpdated */\n      dup1\n        /* \"contracts/lib/Sigmoid.sol\":1470:1617  isUpdated ?... */\n      tag_469\n      jumpi\n        /* \"contracts/lib/Sigmoid.sol\":1564:1568  self */\n      dup5\n        /* \"contracts/lib/Sigmoid.sol\":1564:1578  self.oldParams */\n      0x00\n      add\n        /* \"contracts/lib/Sigmoid.sol\":1564:1580  self.oldParams.a */\n      0x00\n      add\n      sload\n        /* \"contracts/lib/Sigmoid.sol\":1582:1586  self */\n      dup6\n        /* \"contracts/lib/Sigmoid.sol\":1582:1596  self.oldParams */\n      0x00\n      add\n        /* \"contracts/lib/Sigmoid.sol\":1582:1598  self.oldParams.b */\n      0x01\n      add\n      sload\n        /* \"contracts/lib/Sigmoid.sol\":1600:1604  self */\n      dup7\n        /* \"contracts/lib/Sigmoid.sol\":1600:1614  self.oldParams */\n      0x00\n      add\n        /* \"contracts/lib/Sigmoid.sol\":1600:1616  self.oldParams.c */\n      0x02\n      add\n      sload\n        /* \"contracts/lib/Sigmoid.sol\":1470:1617  isUpdated ?... */\n      jump(tag_470)\n    tag_469:\n        /* \"contracts/lib/Sigmoid.sol\":1495:1499  self */\n      dup5\n        /* \"contracts/lib/Sigmoid.sol\":1495:1509  self.newParams */\n      0x03\n      add\n        /* \"contracts/lib/Sigmoid.sol\":1495:1511  self.newParams.a */\n      0x00\n      add\n      sload\n        /* \"contracts/lib/Sigmoid.sol\":1513:1517  self */\n      dup6\n        /* \"contracts/lib/Sigmoid.sol\":1513:1527  self.newParams */\n      0x03\n      add\n        /* \"contracts/lib/Sigmoid.sol\":1513:1529  self.newParams.b */\n      0x01\n      add\n      sload\n        /* \"contracts/lib/Sigmoid.sol\":1531:1535  self */\n      dup7\n        /* \"contracts/lib/Sigmoid.sol\":1531:1545  self.newParams */\n      0x03\n      add\n        /* \"contracts/lib/Sigmoid.sol\":1531:1547  self.newParams.c */\n      0x02\n      add\n      sload\n        /* \"contracts/lib/Sigmoid.sol\":1470:1617  isUpdated ?... */\n    tag_470:\n        /* \"contracts/lib/Sigmoid.sol\":1463:1617  return isUpdated ?... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":1287:1624  function getParameters(State storage self) internal view returns (uint256, int256, uint256) {... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1409:1907  function isConstructor() private view returns (bool) {... */\n    tag_255:\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1456:1460  bool */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1797:1809  address self */\n      dup1\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1820:1824  this */\n      address\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1797:1825  address self = address(this) */\n      swap1\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1831:1841  uint256 cs */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1876:1880  self */\n      dup2\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1864:1881  extcodesize(self) */\n      extcodesize\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1858:1881  cs := extcodesize(self) */\n      swap1\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1901:1902  0 */\n      0x00\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1895:1897  cs */\n      dup2\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1895:1902  cs == 0 */\n      eq\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1888:1902  return cs == 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/upgrades/contracts/Initializable.sol\":1409:1907  function isConstructor() private view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":867:963  function _msgSender() internal view returns (address payable) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":912:927  address payable */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":946:956  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":939:956  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":867:963  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_318:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_474\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":763:768  token */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":793:798  token */\n      dup5\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":793:807  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":793:816  token.transfer.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":818:820  to */\n      dup5\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":822:827  value */\n      dup5\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":744:762  callOptionalReturn */\n      tag_475\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_474:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":20923:21595  function _deposit(address _sender, uint256 _id, uint256 _amount) internal nonReentrant {... */\n    tag_323:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1409:1410  1 */\n      0x01\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1392:1405  _guardCounter */\n      0x66\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1392:1410  _guardCounter += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1420:1440  uint256 localCounter */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1443:1456  _guardCounter */\n      sload(0x66)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1420:1456  uint256 localCounter = _guardCounter */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":21038:21039  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":21028:21035  _amount */\n      dup3\n        /* \"contracts/EasyStaking.sol\":21028:21039  _amount > 0 */\n      gt\n        /* \"contracts/EasyStaking.sol\":21020:21080  require(_amount > 0, \"deposit amount should be more than 0\") */\n      tag_478\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_335651f95752b5b2f9e6f772a51ea21ec319e6d88b710d1d6b6aed8232257902\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_478:\n        /* \"contracts/EasyStaking.sol\":21091:21112  uint256 sigmoidParamA */\n      0x00\n        /* \"contracts/EasyStaking.sol\":21118:21140  getSigmoidParameters() */\n      tag_479\n        /* \"contracts/EasyStaking.sol\":21118:21138  getSigmoidParameters */\n      tag_98\n        /* \"contracts/EasyStaking.sol\":21118:21140  getSigmoidParameters() */\n      jump\t// in\n    tag_479:\n        /* \"contracts/EasyStaking.sol\":21090:21140  (uint256 sigmoidParamA,,) = getSigmoidParameters() */\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":21171:21172  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":21154:21167  sigmoidParamA */\n      dup2\n        /* \"contracts/EasyStaking.sol\":21154:21172  sigmoidParamA == 0 */\n      eq\n        /* \"contracts/EasyStaking.sol\":21154:21200  sigmoidParamA == 0 && totalSupplyFactor() == 0 */\n      dup1\n      iszero\n      tag_480\n      jumpi\n      pop\n        /* \"contracts/EasyStaking.sol\":21199:21200  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":21176:21195  totalSupplyFactor() */\n      tag_481\n        /* \"contracts/EasyStaking.sol\":21176:21193  totalSupplyFactor */\n      tag_81\n        /* \"contracts/EasyStaking.sol\":21176:21195  totalSupplyFactor() */\n      jump\t// in\n    tag_481:\n        /* \"contracts/EasyStaking.sol\":21176:21200  totalSupplyFactor() == 0 */\n      eq\n        /* \"contracts/EasyStaking.sol\":21154:21200  sigmoidParamA == 0 && totalSupplyFactor() == 0 */\n    tag_480:\n        /* \"contracts/EasyStaking.sol\":21150:21228  if (sigmoidParamA == 0 && totalSupplyFactor() == 0) revert(\"emission stopped\") */\n      iszero\n      tag_482\n      jumpi\n        /* \"contracts/EasyStaking.sol\":21202:21228  revert(\"emission stopped\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x656d697373696f6e2073746f7070656400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/EasyStaking.sol\":21150:21228  if (sigmoidParamA == 0 && totalSupplyFactor() == 0) revert(\"emission stopped\") */\n    tag_482:\n        /* \"contracts/EasyStaking.sol\":21239:21256  uint256 userShare */\n      0x00\n        /* \"contracts/EasyStaking.sol\":21258:21276  uint256 timePassed */\n      dup1\n        /* \"contracts/EasyStaking.sol\":21280:21302  _mint(_sender, _id, 0) */\n      tag_483\n        /* \"contracts/EasyStaking.sol\":21286:21293  _sender */\n      dup8\n        /* \"contracts/EasyStaking.sol\":21295:21298  _id */\n      dup8\n        /* \"contracts/EasyStaking.sol\":21300:21301  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":21280:21285  _mint */\n      tag_409\n        /* \"contracts/EasyStaking.sol\":21280:21302  _mint(_sender, _id, 0) */\n      jump\t// in\n    tag_483:\n        /* \"contracts/EasyStaking.sol\":21238:21302  (uint256 userShare, uint256 timePassed) = _mint(_sender, _id, 0) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/EasyStaking.sol\":21312:21330  uint256 newBalance */\n      0x00\n        /* \"contracts/EasyStaking.sol\":21333:21368  balances[_sender][_id].add(_amount) */\n      tag_484\n        /* \"contracts/EasyStaking.sol\":21360:21367  _amount */\n      dup7\n        /* \"contracts/EasyStaking.sol\":21333:21341  balances */\n      0xac\n        /* \"contracts/EasyStaking.sol\":21333:21350  balances[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":21342:21349  _sender */\n      dup12\n        /* \"contracts/EasyStaking.sol\":21333:21350  balances[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":21333:21355  balances[_sender][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":21351:21354  _id */\n      dup11\n        /* \"contracts/EasyStaking.sol\":21333:21355  balances[_sender][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":21333:21359  balances[_sender][_id].add */\n      tag_182\n      swap1\n        /* \"contracts/EasyStaking.sol\":21333:21368  balances[_sender][_id].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_484:\n        /* \"contracts/EasyStaking.sol\":21312:21368  uint256 newBalance = balances[_sender][_id].add(_amount) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":21403:21413  newBalance */\n      dup1\n        /* \"contracts/EasyStaking.sol\":21378:21386  balances */\n      0xac\n        /* \"contracts/EasyStaking.sol\":21378:21395  balances[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":21387:21394  _sender */\n      dup11\n        /* \"contracts/EasyStaking.sol\":21378:21395  balances[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":21378:21400  balances[_sender][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":21396:21399  _id */\n      dup10\n        /* \"contracts/EasyStaking.sol\":21378:21400  balances[_sender][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":21378:21413  balances[_sender][_id] = newBalance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":21437:21461  totalStaked.add(_amount) */\n      tag_485\n        /* \"contracts/EasyStaking.sol\":21453:21460  _amount */\n      dup7\n        /* \"contracts/EasyStaking.sol\":21437:21448  totalStaked */\n      sload(0xb0)\n        /* \"contracts/EasyStaking.sol\":21437:21452  totalStaked.add */\n      tag_182\n      swap1\n        /* \"contracts/EasyStaking.sol\":21437:21461  totalStaked.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_485:\n        /* \"contracts/EasyStaking.sol\":21423:21434  totalStaked */\n      0xb0\n        /* \"contracts/EasyStaking.sol\":21423:21461  totalStaked = totalStaked.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":21500:21506  _now() */\n      tag_486\n        /* \"contracts/EasyStaking.sol\":21500:21504  _now */\n      tag_174\n        /* \"contracts/EasyStaking.sol\":21500:21506  _now() */\n      jump\t// in\n    tag_486:\n        /* \"contracts/EasyStaking.sol\":21471:21483  depositDates */\n      0xad\n        /* \"contracts/EasyStaking.sol\":21471:21492  depositDates[_sender] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":21484:21491  _sender */\n      dup11\n        /* \"contracts/EasyStaking.sol\":21471:21492  depositDates[_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":21471:21497  depositDates[_sender][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":21493:21496  _id */\n      dup10\n        /* \"contracts/EasyStaking.sol\":21471:21497  depositDates[_sender][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":21471:21506  depositDates[_sender][_id] = _now() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":21540:21543  _id */\n      dup7\n        /* \"contracts/EasyStaking.sol\":21531:21538  _sender */\n      dup9\n        /* \"contracts/EasyStaking.sol\":21521:21588  Deposited(_sender, _id, _amount, newBalance, userShare, timePassed) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0a5c854539f6e93fcd4a8397bfae8bdb751b4e819840f1c8681e6ad7ff19c5b5\n        /* \"contracts/EasyStaking.sol\":21545:21552  _amount */\n      dup9\n        /* \"contracts/EasyStaking.sol\":21554:21564  newBalance */\n      dup5\n        /* \"contracts/EasyStaking.sol\":21566:21575  userShare */\n      dup8\n        /* \"contracts/EasyStaking.sol\":21577:21587  timePassed */\n      dup8\n        /* \"contracts/EasyStaking.sol\":21521:21588  Deposited(_sender, _id, _amount, newBalance, userShare, timePassed) */\n      mload(0x40)\n      dup1\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1466:1467  _ */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1501:1514  _guardCounter */\n      sload(0x66)\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1485:1497  localCounter */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1485:1514  localCounter == _guardCounter */\n      eq\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":1477:1550  require(localCounter == _guardCounter, \"ReentrancyGuard: reentrant call\") */\n      tag_487\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_487:\n        /* \"contracts/EasyStaking.sol\":20923:21595  function _deposit(address _sender, uint256 _id, uint256 _amount) internal nonReentrant {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":24990:25150  function _paramUpdateDelayElapsed(uint256 _paramTimestamp) internal view returns (bool) {... */\n    tag_338:\n        /* \"contracts/EasyStaking.sol\":25072:25076  bool */\n      0x00\n        /* \"contracts/EasyStaking.sol\":25104:25143  _paramTimestamp.add(PARAM_UPDATE_DELAY) */\n      tag_489\n        /* \"contracts/EasyStaking.sol\":4629:4635  7 days */\n      0x093a80\n        /* \"contracts/EasyStaking.sol\":25104:25119  _paramTimestamp */\n      dup4\n        /* \"contracts/EasyStaking.sol\":25104:25123  _paramTimestamp.add */\n      tag_182\n      swap1\n        /* \"contracts/EasyStaking.sol\":25104:25143  _paramTimestamp.add(PARAM_UPDATE_DELAY) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_489:\n        /* \"contracts/EasyStaking.sol\":25095:25101  _now() */\n      tag_490\n        /* \"contracts/EasyStaking.sol\":25095:25099  _now */\n      tag_174\n        /* \"contracts/EasyStaking.sol\":25095:25101  _now() */\n      jump\t// in\n    tag_490:\n        /* \"contracts/EasyStaking.sol\":25095:25143  _now() > _paramTimestamp.add(PARAM_UPDATE_DELAY) */\n      gt\n        /* \"contracts/EasyStaking.sol\":25088:25143  return _now() > _paramTimestamp.add(PARAM_UPDATE_DELAY) */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":24990:25150  function _paramUpdateDelayElapsed(uint256 _paramTimestamp) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":686:1296  function isContract(address account) internal view returns (bool) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":746:750  bool */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1004:1020  bytes32 codehash */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1030:1049  bytes32 accountHash */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1052:1118  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1030:1118  bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0x00\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1219:1226  account */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1207:1227  extcodehash(account) */\n      extcodehash\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1195:1227  codehash := extcodehash(account) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1258:1269  accountHash */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1246:1254  codehash */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1246:1269  codehash != accountHash */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1246:1288  codehash != accountHash && codehash != 0x0 */\n      dup1\n      iszero\n      tag_492\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1285:1288  0x0 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1273:1288  codehash != 0x0 */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1273:1281  codehash */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1273:1288  codehash != 0x0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1246:1288  codehash != accountHash && codehash != 0x0 */\n    tag_492:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":1238:1289  return (codehash != accountHash && codehash != 0x0) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":686:1296  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":25217:25293  function _setLocked(bool _locked) internal {... */\n    tag_382:\n        /* \"contracts/EasyStaking.sol\":25279:25286  _locked */\n      dup1\n        /* \"contracts/EasyStaking.sol\":25270:25276  locked */\n      0xb1\n      0x00\n        /* \"contracts/EasyStaking.sol\":25270:25286  locked = _locked */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":25217:25293  function _setLocked(bool _locked) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2240:2465  function _transferOwnership(address newOwner) internal {... */\n    tag_393:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2333:2334  0 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2313:2335  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2313:2321  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2313:2335  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2305:2378  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_495\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_495:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2422:2430  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2393:2431  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2414:2420  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2393:2431  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2450:2458  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2441:2447  _owner */\n      0x33\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2441:2458  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":2240:2465  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_397:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1818:1825  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1850:1851  a */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1845:1846  b */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1845:1851  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1853:1865  errorMessage */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      swap1\n      tag_497\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_498:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_500\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_498)\n    tag_500:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_501\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_501:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_497:\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1876:1885  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1892:1893  b */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1888:1889  a */\n      dup6\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1888:1893  a - b */\n      sub\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1876:1893  uint256 c = a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1911:1912  c */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1904:1912  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":23525:24176  function _mint(address _user, uint256 _id, uint256 _amount) internal returns (uint256, uint256) {... */\n    tag_409:\n        /* \"contracts/EasyStaking.sol\":23603:23610  uint256 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23612:23619  uint256 */\n      dup1\n        /* \"contracts/EasyStaking.sol\":23631:23653  uint256 currentBalance */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23656:23664  balances */\n      0xac\n        /* \"contracts/EasyStaking.sol\":23656:23671  balances[_user] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23665:23670  _user */\n      dup8\n        /* \"contracts/EasyStaking.sol\":23656:23671  balances[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":23656:23676  balances[_user][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23672:23675  _id */\n      dup7\n        /* \"contracts/EasyStaking.sol\":23656:23676  balances[_user][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":23631:23676  uint256 currentBalance = balances[_user][_id] */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":23686:23700  uint256 amount */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23714:23715  0 */\n      dup1\n        /* \"contracts/EasyStaking.sol\":23703:23710  _amount */\n      dup6\n        /* \"contracts/EasyStaking.sol\":23703:23715  _amount == 0 */\n      eq\n        /* \"contracts/EasyStaking.sol\":23703:23742  _amount == 0 ? currentBalance : _amount */\n      tag_503\n      jumpi\n        /* \"contracts/EasyStaking.sol\":23735:23742  _amount */\n      dup5\n        /* \"contracts/EasyStaking.sol\":23703:23742  _amount == 0 ? currentBalance : _amount */\n      jump(tag_504)\n    tag_503:\n        /* \"contracts/EasyStaking.sol\":23718:23732  currentBalance */\n      dup2\n        /* \"contracts/EasyStaking.sol\":23703:23742  _amount == 0 ? currentBalance : _amount */\n    tag_504:\n        /* \"contracts/EasyStaking.sol\":23686:23742  uint256 amount = _amount == 0 ? currentBalance : _amount */\n      swap1\n      pop\n        /* \"contracts/EasyStaking.sol\":23753:23766  uint256 total */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23768:23785  uint256 userShare */\n      dup1\n        /* \"contracts/EasyStaking.sol\":23787:23805  uint256 timePassed */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23809:23861  getAccruedEmission(depositDates[_user][_id], amount) */\n      tag_505\n        /* \"contracts/EasyStaking.sol\":23828:23840  depositDates */\n      0xad\n        /* \"contracts/EasyStaking.sol\":23828:23847  depositDates[_user] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23841:23846  _user */\n      dup13\n        /* \"contracts/EasyStaking.sol\":23828:23847  depositDates[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":23828:23852  depositDates[_user][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23848:23851  _id */\n      dup12\n        /* \"contracts/EasyStaking.sol\":23828:23852  depositDates[_user][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/EasyStaking.sol\":23854:23860  amount */\n      dup6\n        /* \"contracts/EasyStaking.sol\":23809:23827  getAccruedEmission */\n      tag_88\n        /* \"contracts/EasyStaking.sol\":23809:23861  getAccruedEmission(depositDates[_user][_id], amount) */\n      jump\t// in\n    tag_505:\n        /* \"contracts/EasyStaking.sol\":23752:23861  (uint256 total, uint256 userShare, uint256 timePassed) = getAccruedEmission(depositDates[_user][_id], amount) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/EasyStaking.sol\":23883:23884  0 */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23875:23880  total */\n      dup4\n        /* \"contracts/EasyStaking.sol\":23875:23884  total > 0 */\n      gt\n        /* \"contracts/EasyStaking.sol\":23871:24130  if (total > 0) {... */\n      iszero\n      tag_506\n      jumpi\n        /* \"contracts/EasyStaking.sol\":23923:23952  currentBalance.add(userShare) */\n      tag_507\n        /* \"contracts/EasyStaking.sol\":23942:23951  userShare */\n      dup3\n        /* \"contracts/EasyStaking.sol\":23923:23937  currentBalance */\n      dup7\n        /* \"contracts/EasyStaking.sol\":23923:23941  currentBalance.add */\n      tag_182\n      swap1\n        /* \"contracts/EasyStaking.sol\":23923:23952  currentBalance.add(userShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_507:\n        /* \"contracts/EasyStaking.sol\":23900:23908  balances */\n      0xac\n        /* \"contracts/EasyStaking.sol\":23900:23915  balances[_user] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23909:23914  _user */\n      dup13\n        /* \"contracts/EasyStaking.sol\":23900:23915  balances[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":23900:23920  balances[_user][_id] */\n      0x00\n        /* \"contracts/EasyStaking.sol\":23916:23919  _id */\n      dup12\n        /* \"contracts/EasyStaking.sol\":23900:23920  balances[_user][_id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/EasyStaking.sol\":23900:23952  balances[_user][_id] = currentBalance.add(userShare) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":23980:24006  totalStaked.add(userShare) */\n      tag_508\n        /* \"contracts/EasyStaking.sol\":23996:24005  userShare */\n      dup3\n        /* \"contracts/EasyStaking.sol\":23980:23991  totalStaked */\n      sload(0xb0)\n        /* \"contracts/EasyStaking.sol\":23980:23995  totalStaked.add */\n      tag_182\n      swap1\n        /* \"contracts/EasyStaking.sol\":23980:24006  totalStaked.add(userShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_508:\n        /* \"contracts/EasyStaking.sol\":23966:23977  totalStaked */\n      0xb0\n        /* \"contracts/EasyStaking.sol\":23966:24006  totalStaked = totalStaked.add(userShare) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/EasyStaking.sol\":24028:24033  token */\n      0x99\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/EasyStaking.sol\":24028:24042  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/EasyStaking.sol\":24043:24076  liquidityProvidersRewardAddress() */\n      tag_509\n        /* \"contracts/EasyStaking.sol\":24043:24074  liquidityProvidersRewardAddress */\n      tag_146\n        /* \"contracts/EasyStaking.sol\":24043:24076  liquidityProvidersRewardAddress() */\n      jump\t// in\n    tag_509:\n        /* \"contracts/EasyStaking.sol\":24078:24098  total.sub(userShare) */\n      tag_510\n        /* \"contracts/EasyStaking.sol\":24088:24097  userShare */\n      dup6\n        /* \"contracts/EasyStaking.sol\":24078:24083  total */\n      dup8\n        /* \"contracts/EasyStaking.sol\":24078:24087  total.sub */\n      tag_175\n      swap1\n        /* \"contracts/EasyStaking.sol\":24078:24098  total.sub(userShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_510:\n        /* \"contracts/EasyStaking.sol\":24028:24099  token.transfer(liquidityProvidersRewardAddress(), total.sub(userShare)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_511\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_511:\n        /* \"contracts/EasyStaking.sol\":24028:24099  token.transfer(liquidityProvidersRewardAddress(), total.sub(userShare)) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_512\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_512:\n        /* \"contracts/EasyStaking.sol\":24028:24099  token.transfer(liquidityProvidersRewardAddress(), total.sub(userShare)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_513\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_513:\n        /* \"contracts/EasyStaking.sol\":24028:24099  token.transfer(liquidityProvidersRewardAddress(), total.sub(userShare)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":24020:24119  require(token.transfer(liquidityProvidersRewardAddress(), total.sub(userShare)), \"transfer failed\") */\n      tag_514\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e73666572206661696c65640000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_514:\n        /* \"contracts/EasyStaking.sol\":23871:24130  if (total > 0) {... */\n    tag_506:\n        /* \"contracts/EasyStaking.sol\":24147:24156  userShare */\n      dup2\n        /* \"contracts/EasyStaking.sol\":24158:24168  timePassed */\n      dup2\n        /* \"contracts/EasyStaking.sol\":24139:24169  return (userShare, timePassed) */\n      swap7\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/EasyStaking.sol\":23525:24176  function _mint(address _user, uint256 _id, uint256 _amount) internal returns (uint256, uint256) {... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3718:4056  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_439:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3804:3811  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3901:3902  0 */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3897:3898  b */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3897:3902  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3904:3916  errorMessage */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3889:3917  require(b > 0, errorMessage) */\n      swap1\n      tag_516\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_517:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_519\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_517)\n    tag_519:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3889:3917  require(b > 0, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_520\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_520:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_516:\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3927:3936  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3943:3944  b */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3939:3940  a */\n      dup6\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3939:3944  a / b */\n      dup2\n      tag_521\n      jumpi\n      invalid\n    tag_521:\n      div\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3927:3944  uint256 c = a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":4048:4049  c */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":4041:4049  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":3718:4056  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lib/Sigmoid.sol\":2068:2368  function _now() internal view returns (uint256) {... */\n    tag_443:\n        /* \"contracts/lib/Sigmoid.sol\":2107:2114  uint256 */\n      0x00\n        /* \"contracts/lib/Sigmoid.sol\":2309:2312  now */\n      timestamp\n        /* \"contracts/lib/Sigmoid.sol\":2302:2312  return now */\n      swap1\n      pop\n        /* \"contracts/lib/Sigmoid.sol\":2068:2368  function _now() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/lib/ExtendedMath.sol\":125:352  function pow2(uint256 a) internal pure returns (uint256) {... */\n    tag_459:\n        /* \"contracts/lib/ExtendedMath.sol\":173:180  uint256 */\n      0x00\n        /* \"contracts/lib/ExtendedMath.sol\":201:202  0 */\n      dup1\n        /* \"contracts/lib/ExtendedMath.sol\":196:197  a */\n      dup3\n        /* \"contracts/lib/ExtendedMath.sol\":196:202  a == 0 */\n      eq\n        /* \"contracts/lib/ExtendedMath.sol\":192:237  if (a == 0) {... */\n      iszero\n      tag_524\n      jumpi\n        /* \"contracts/lib/ExtendedMath.sol\":225:226  0 */\n      0x00\n        /* \"contracts/lib/ExtendedMath.sol\":218:226  return 0 */\n      swap1\n      pop\n      jump(tag_523)\n        /* \"contracts/lib/ExtendedMath.sol\":192:237  if (a == 0) {... */\n    tag_524:\n        /* \"contracts/lib/ExtendedMath.sol\":246:255  uint256 c */\n      0x00\n        /* \"contracts/lib/ExtendedMath.sol\":262:263  a */\n      dup3\n        /* \"contracts/lib/ExtendedMath.sol\":258:259  a */\n      dup4\n        /* \"contracts/lib/ExtendedMath.sol\":258:263  a * a */\n      mul\n        /* \"contracts/lib/ExtendedMath.sol\":246:263  uint256 c = a * a */\n      swap1\n      pop\n        /* \"contracts/lib/ExtendedMath.sol\":290:291  a */\n      dup3\n        /* \"contracts/lib/ExtendedMath.sol\":285:286  a */\n      dup4\n        /* \"contracts/lib/ExtendedMath.sol\":281:282  c */\n      dup3\n        /* \"contracts/lib/ExtendedMath.sol\":281:286  c / a */\n      dup2\n      tag_525\n      jumpi\n      invalid\n    tag_525:\n      div\n        /* \"contracts/lib/ExtendedMath.sol\":281:291  c / a == a */\n      eq\n        /* \"contracts/lib/ExtendedMath.sol\":273:327  require(c / a == a, \"ExtendedMath: squaring overflow\") */\n      tag_526\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x457874656e6465644d6174683a207371756172696e67206f766572666c6f7700\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_526:\n        /* \"contracts/lib/ExtendedMath.sol\":344:345  c */\n      dup1\n        /* \"contracts/lib/ExtendedMath.sol\":337:345  return c */\n      swap2\n      pop\n      pop\n        /* \"contracts/lib/ExtendedMath.sol\":125:352  function pow2(uint256 a) internal pure returns (uint256) {... */\n    tag_523:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/lib/ExtendedMath.sol\":425:717  function sqrt(uint y) internal pure returns (uint z) {... */\n    tag_460:\n        /* \"contracts/lib/ExtendedMath.sol\":470:476  uint z */\n      0x00\n        /* \"contracts/lib/ExtendedMath.sol\":496:497  3 */\n      0x03\n        /* \"contracts/lib/ExtendedMath.sol\":492:493  y */\n      dup3\n        /* \"contracts/lib/ExtendedMath.sol\":492:497  y > 3 */\n      gt\n        /* \"contracts/lib/ExtendedMath.sol\":488:711  if (y > 3) {... */\n      iszero\n      tag_528\n      jumpi\n        /* \"contracts/lib/ExtendedMath.sol\":517:518  y */\n      dup2\n        /* \"contracts/lib/ExtendedMath.sol\":513:518  z = y */\n      swap1\n      pop\n        /* \"contracts/lib/ExtendedMath.sol\":532:538  uint x */\n      0x00\n        /* \"contracts/lib/ExtendedMath.sol\":549:550  1 */\n      0x01\n        /* \"contracts/lib/ExtendedMath.sol\":545:546  2 */\n      0x02\n        /* \"contracts/lib/ExtendedMath.sol\":541:542  y */\n      dup5\n        /* \"contracts/lib/ExtendedMath.sol\":541:546  y / 2 */\n      dup2\n      tag_529\n      jumpi\n      invalid\n    tag_529:\n      div\n        /* \"contracts/lib/ExtendedMath.sol\":541:550  y / 2 + 1 */\n      add\n        /* \"contracts/lib/ExtendedMath.sol\":532:550  uint x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"contracts/lib/ExtendedMath.sol\":564:653  while (x < z) {... */\n    tag_530:\n        /* \"contracts/lib/ExtendedMath.sol\":575:576  z */\n      dup2\n        /* \"contracts/lib/ExtendedMath.sol\":571:572  x */\n      dup2\n        /* \"contracts/lib/ExtendedMath.sol\":571:576  x < z */\n      lt\n        /* \"contracts/lib/ExtendedMath.sol\":564:653  while (x < z) {... */\n      iszero\n      tag_531\n      jumpi\n        /* \"contracts/lib/ExtendedMath.sol\":600:601  x */\n      dup1\n        /* \"contracts/lib/ExtendedMath.sol\":596:601  z = x */\n      swap2\n      pop\n        /* \"contracts/lib/ExtendedMath.sol\":637:638  2 */\n      0x02\n        /* \"contracts/lib/ExtendedMath.sol\":632:633  x */\n      dup2\n        /* \"contracts/lib/ExtendedMath.sol\":628:629  x */\n      dup3\n        /* \"contracts/lib/ExtendedMath.sol\":624:625  y */\n      dup6\n        /* \"contracts/lib/ExtendedMath.sol\":624:629  y / x */\n      dup2\n      tag_532\n      jumpi\n      invalid\n    tag_532:\n      div\n        /* \"contracts/lib/ExtendedMath.sol\":624:633  y / x + x */\n      add\n        /* \"contracts/lib/ExtendedMath.sol\":623:638  (y / x + x) / 2 */\n      dup2\n      tag_533\n      jumpi\n      invalid\n    tag_533:\n      div\n        /* \"contracts/lib/ExtendedMath.sol\":619:638  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"contracts/lib/ExtendedMath.sol\":564:653  while (x < z) {... */\n      jump(tag_530)\n    tag_531:\n        /* \"contracts/lib/ExtendedMath.sol\":488:711  if (y > 3) {... */\n      pop\n      jump(tag_534)\n    tag_528:\n        /* \"contracts/lib/ExtendedMath.sol\":678:679  0 */\n      0x00\n        /* \"contracts/lib/ExtendedMath.sol\":673:674  y */\n      dup3\n        /* \"contracts/lib/ExtendedMath.sol\":673:679  y != 0 */\n      eq\n        /* \"contracts/lib/ExtendedMath.sol\":669:711  if (y != 0) {... */\n      tag_535\n      jumpi\n        /* \"contracts/lib/ExtendedMath.sol\":699:700  1 */\n      0x01\n        /* \"contracts/lib/ExtendedMath.sol\":695:700  z = 1 */\n      swap1\n      pop\n        /* \"contracts/lib/ExtendedMath.sol\":669:711  if (y != 0) {... */\n    tag_535:\n        /* \"contracts/lib/ExtendedMath.sol\":488:711  if (y > 3) {... */\n    tag_534:\n        /* \"contracts/lib/ExtendedMath.sol\":425:717  function sqrt(uint y) internal pure returns (uint z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":2666:3761  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_475:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3261:3288  address(token).isContract() */\n      tag_537\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3269:3274  token */\n      dup3\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3261:3286  address(token).isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_350\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3261:3288  address(token).isContract() */\n      jump\t// in\n    tag_537:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3253:3324  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      tag_538\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_538:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3395:3407  bool success */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3409:3432  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3444:3449  token */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3436:3455  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3456:3460  data */\n      dup4\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3436:3461  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_539:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_541\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_539)\n    tag_541:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3436:3461  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_543\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_542)\n        /* \"--CODEGEN--\":16:47   */\n    tag_543:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_542:\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3394:3461  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3479:3486  success */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3471:3523  require(success, \"SafeERC20: low-level call failed\") */\n      tag_544\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_544:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3558:3559  0 */\n      0x00\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3538:3548  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3538:3555  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3538:3559  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3534:3755  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_545\n      jumpi\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3678:3688  returndata */\n      dup1\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3667:3697  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_546\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_546:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3667:3697  abi.decode(returndata, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3659:3744  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_547\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_547:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":3534:3755  if (returndata.length > 0) { // Return data is optional... */\n    tag_545:\n        /* \"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":2666:3761  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/EasyStaking.sol\":722:25659  contract EasyStaking is Ownable, ReentrancyGuard {... */\n    tag_303:\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n    tag_336:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_335651f95752b5b2f9e6f772a51ea21ec319e6d88b710d1d6b6aed8232257902 6465706f73697420616d6f756e742073686f756c64206265206d6f7265207468616e2030\n    data_4998dfccf9aebf799608e8abb3a4403d6d01bdd7d35c16885304d7b267aa9576 73686f756c64206265206c657373207468616e206f7220657175616c20746f20612068616c66206f6620746865206d6178696d756d20656d697373696f6e2072617465\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4 436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564\n    data_a232e1f8b28a085f31f602663a0343288b51e95e524fa8082d77230266997c5c 63616e206e6f7420776974686472617720647572696e6720696e697469616c206c6f636b20706572696f64\n    data_df908f90cdd1684dfaa27aae3563b8fc031d301853c805a295067181cd132d8d 73686f756c64206265206c657373207468616e206f7220657175616c20746f2031206574686572\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_efcc4c1bf2d1d2579b900a9df600f3c0d822d0a6e5ef236f035bfce4f914ebf5 73686f756c646e27742062652067726561746572207468616e2033302064617973\n\n    sub_0: assembly {\n            /* \"contracts/Sacrifice.sol\":25:148  contract Sacrifice {... */\n          mstore(0x40, 0x80)\n            /* \"contracts/Sacrifice.sol\":50:146  constructor(address payable _recipient) public payable {... */\n          mload(0x40)\n          sub(codesize, bytecodeSize)\n          dup1\n          bytecodeSize\n          dup4\n          codecopy\n          dup2\n          dup2\n          add\n          0x40\n          mstore\n            /* \"--CODEGEN--\":13:15   */\n          0x20\n            /* \"--CODEGEN--\":8:11   */\n          dup2\n            /* \"--CODEGEN--\":5:16   */\n          lt\n            /* \"--CODEGEN--\":2:4   */\n          iszero\n          tag_1\n          jumpi\n            /* \"--CODEGEN--\":29:30   */\n          0x00\n            /* \"--CODEGEN--\":26:27   */\n          dup1\n            /* \"--CODEGEN--\":19:31   */\n          revert\n            /* \"--CODEGEN--\":2:4   */\n        tag_1:\n            /* \"contracts/Sacrifice.sol\":50:146  constructor(address payable _recipient) public payable {... */\n          dup2\n          add\n          swap1\n          dup1\n          dup1\n          mload\n          swap1\n          0x20\n          add\n          swap1\n          swap3\n          swap2\n          swap1\n          pop\n          pop\n          pop\n            /* \"contracts/Sacrifice.sol\":128:138  _recipient */\n          dup1\n            /* \"contracts/Sacrifice.sol\":115:139  selfdestruct(_recipient) */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          selfdestruct\n        stop\n\n        sub_0: assembly {\n                /* \"contracts/Sacrifice.sol\":25:148  contract Sacrifice {... */\n              mstore(0x40, 0x80)\n              0x00\n              dup1\n              revert\n\n            auxdata: 0xa265627a7a72315820fa7381e6703ef56b704590ce5a7a747a56f52dd2b8bfc55043a9a06f8744231c64736f6c63430005100032\n        }\n    }\n\n    auxdata: 0xa265627a7a72315820f91215af907485e3a0a3bccd5f88ab05bcdf2f37f223fe0c77be10eae8e294f364736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526153b5806100136000396000f3fe608060405234801561001057600080fd5b506004361061027f5760003560e01c80638b53ccb31161015c578063c3bd8fd0116100ce578063db51ef9211610087578063db51ef9214610c02578063ddca3f4314610c20578063e0648a2814610c3e578063e2bbb15814610ca0578063f2fde38b14610cd8578063fc0c546a14610d1c5761027f565b8063c3bd8fd0146109a1578063c4d66de8146109f9578063c5401ce314610a3d578063ca75899314610a87578063cbf1304d14610b5c578063d646315114610bbe5761027f565b806397559cdc1161012057806397559cdc146107d25780639ee679e8146107f05780639fc314c81461081e578063a4c0ed361461088c578063b4a86c4814610947578063b6b55f25146109735761027f565b80638b53ccb3146106ae5780638da5cb5b146107105780638df676801461075a5780638f32d59b1461077857806394967fa11461079a5761027f565b80635e9e230d116101f557806374949b6d116101b957806374949b6d146105e057806375fa901b1461060e5780638129fc1c1461063a578063817b1cd2146106445780638235c37814610662578063868867b5146106805761027f565b80635e9e230d1461050457806360c251c11461053057806360d4ffb01461054e57806369fe0e2d146105a8578063715018a6146105d65761027f565b8063294a5b0411610247578063294a5b04146104005780632c3144da14610442578063416829901461046e578063436cc3d61461049c57806347e318de146104ba578063522ea5e2146104e65761027f565b806303d6d343146102845780630e559215146102b0578063181943591461031657806318cca7a61461039a578063224313fa146103d2575b600080fd5b61028c610d66565b60405180848152602001838152602001828152602001935050505060405180910390f35b6102fc600480360360408110156102c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d7e565b604051808215151515815260200191505060405180910390f35b61031e610e01565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b6103d0600480360360408110156103b057600080fd5b810190808035906020019092919080359060200190929190505050610e59565b005b6103fe600480360360208110156103e857600080fd5b81019080803590602001909291905050506110bc565b005b6104406004803603606081101561041657600080fd5b8101908080359060200190929190803590602001909291908035906020019092919050505061120b565b005b61044a611391565b60405180848152602001838152602001828152602001935050505060405180910390f35b61049a6004803603602081101561048457600080fd5b81019080803590602001909291905050506113a9565b005b6104a46114fd565b6040518082815260200191505060405180910390f35b6104c2611509565b60405180848152602001838152602001828152602001935050505060405180910390f35b6104ee611521565b6040518082815260200191505060405180910390f35b61050c61155b565b60405180848152602001838152602001828152602001935050505060405180910390f35b610538611573565b6040518082815260200191505060405180910390f35b6105846004803603604081101561056457600080fd5b8101908080359060200190929190803590602001909291905050506115ad565b60405180848152602001838152602001828152602001935050505060405180910390f35b6105d4600480360360208110156105be57600080fd5b8101908080359060200190929190505050611720565b005b6105de611813565b005b61060c600480360360208110156105f657600080fd5b810190808035906020019092919050505061194e565b005b610616611a41565b60405180848152602001838152602001828152602001935050505060405180910390f35b610642611a5b565b005b61064c611b62565b6040518082815260200191505060405180910390f35b61066a611b68565b6040518082815260200191505060405180910390f35b6106ac6004803603602081101561069657600080fd5b8101908080359060200190929190505050611cc7565b005b6106fa600480360360408110156106c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e32565b6040518082815260200191505060405180910390f35b610718611e57565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610762611e81565b6040518082815260200191505060405180910390f35b610780611ebb565b604051808215151515815260200191505060405180910390f35b6107d0600480360360408110156107b057600080fd5b810190808035906020019092919080359060200190929190505050611f1a565b005b6107da611f2b565b6040518082815260200191505060405180910390f35b61081c6004803603602081101561080657600080fd5b8101908080359060200190929190505050611f65565b005b61088a6004803603606081101561083457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506120c9565b005b61092d600480360360608110156108a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156108e957600080fd5b8201836020820111156108fb57600080fd5b8035906020019184600183028401116401000000008311171561091d57600080fd5b90919293919293905050506126bd565b604051808215151515815260200191505060405180910390f35b61094f6127f9565b60405180848152602001838152602001828152602001935050505060405180910390f35b61099f6004803603602081101561098957600080fd5b8101908080359060200190929190505050612811565b005b6109e3600480360360208110156109b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612869565b6040518082815260200191505060405180910390f35b610a3b60048036036020811015610a0f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612881565b005b610a45612a3f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b5a6004803603610160811015610a9e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050612b35565b005b610ba860048036036040811015610b7257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612e0f565b6040518082815260200191505060405180910390f35b610c0060048036036020811015610bd457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e34565b005b610c0a6132dc565b6040518082815260200191505060405180910390f35b610c286132e3565b6040518082815260200191505060405180910390f35b610c8a60048036036040811015610c5457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061331d565b6040518082815260200191505060405180910390f35b610cd660048036036040811015610cb657600080fd5b810190808035906020019092919080359060200190929190505050613342565b005b610d1a60048036036020811015610cee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506135b0565b005b610d24613636565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60a68060000154908060010154908060020154905083565b600080610deb60ad60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054610ddd61365c565b61366490919063ffffffff16565b9050610df5611f2b565b81101591505092915050565b609a8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b600060ae60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905060008111610f24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f7769746864726177616c207761736e277420726571756573746564000000000081525060200191505060405180910390fd5b6000610f2e61365c565b90506000610f4c610f3d611573565b846136ae90919063ffffffff16565b905080821015610fc4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f746f6f206561726c79000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b610fde610fcf611e81565b826136ae90919063ffffffff16565b8210611052576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f746f6f206c61746500000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600060ae60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020819055506110b53386866000613736565b5050505050565b6110c4611ebb565b611136576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b62278d00811115611192576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806153606021913960400191505060405180910390fd5b61119d60a082613fe4565b7fb1effbb8dc5cfa97751137110a061198891986f1567677e11ec9449743180f748133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b611213611ebb565b611285576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6112a16002670214e8348c4f000061403d90919063ffffffff16565b8311156112f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260438152602001806152526043913960600191505060405180910390fd5b61131183838360b2614087909392919063ffffffff16565b7fddf30262673035378258d8aab83a68d6d8b8e45e5510d3b295fcc7cd65c6378a83838333604051808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390a1505050565b60a08060000154908060010154908060020154905083565b6113b1611ebb565b611423576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b670de0b6b3a7640000811115611484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061530f6027913960400191505060405180910390fd5b61148f60a982613fe4565b7fb7b23f70fe41cd9debaaa54902f2492c79f94d7582d587844dc12fdc8fc42a2b8133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b670214e8348c4f000081565b609d8060000154908060010154908060020154905083565b600061155660a960405180606001604052908160008201548152602001600182015481526020016002820154815250506141f8565b905090565b60a38060000154908060010154908060020154905083565b60006115a860a060405180606001604052908160008201548152602001600182015481526020016002820154815250506141f8565b905090565b6000806000808414806115c05750600085145b156115de576000806000829250819150809050925092509250611719565b6115f8856115ea61365c565b61366490919063ffffffff16565b9050600081141561161c576000806000829250819150809050925092509250611719565b60006116328260b261422290919063ffffffff16565b905061164e61163f611b68565b826136ae90919063ffffffff16565b9050600081141561166f576000808382925081915093509350935050611719565b670214e8348c4f000081111561168157fe5b6116ce670de0b6b3a76400006301e13380026116c0846116b2670214e8348c4f00008a6142ae90919063ffffffff16565b6142ae90919063ffffffff16565b61403d90919063ffffffff16565b9350611715670de0b6b3a76400006301e1338002611707846116f9858a6142ae90919063ffffffff16565b6142ae90919063ffffffff16565b61403d90919063ffffffff16565b9250505b9250925092565b611728611ebb565b61179a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6117a5609d82613fe4565b7fc8242dc5446855370b781abbfc5d882af1d1a3cc29143216aba3558feb0ce9258133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b61181b611ebb565b61188d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611956611ebb565b6119c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6119d360a682613fe4565b7f597b9881536f6a87f60171072e2a2d56c53e5e2c1d72270259008ad4932e61ed8133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000806000611a5060b2614334565b925092509250909192565b600060019054906101000a900460ff1680611a7a5750611a796143a8565b5b80611a9157506000809054906101000a900460ff16155b611ae6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806152b6602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611b36576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60016066819055508015611b5f5760008060016101000a81548160ff0219169083151502179055505b50565b60b05481565b600080609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bd357600080fd5b505afa158015611be7573d6000803e3d6000fd5b505050506040513d6020811015611bfd57600080fd5b810190808051906020019092919050505090506000611c1a611521565b90506000811415611c3057600092505050611cc4565b6000611c5f670de0b6b3a7640000611c5184866142ae90919063ffffffff16565b61403d90919063ffffffff16565b90506000611c7f6002670214e8348c4f000061403d90919063ffffffff16565b90508160b05410611c965780945050505050611cc4565b611cbd82611caf60b054846142ae90919063ffffffff16565b61403d90919063ffffffff16565b9450505050505b90565b611ccf611ebb565b611d41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610e10811015611db9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f73686f756c646e2774206265206c657373207468616e203120686f757200000081525060200191505060405180910390fd5b611dc460a382613fe4565b7f3a963fa1d1d0da205f1ae9869aa14bf4ff7a4585efa819b0c94326b4a3e1e2288133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b60ad602052816000526040600020602052806000526040600020600091509150505481565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000611eb660a360405180606001604052908160008201548152602001600182015481526020016002820154815250506141f8565b905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611efe6143bf565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611f273383836001613736565b5050565b6000611f6060a660405180606001604052908160008201548152602001600182015481526020016002820154815250506141f8565b905090565b600081118015611fb4575060af60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111155b612026576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f77726f6e67206465706f7369742069640000000000000000000000000000000081525060200191505060405180910390fd5b61202e61365c565b60ae60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550803373ffffffffffffffffffffffffffffffffffffffff167fe670e4e82118d22a1f9ee18920455ebc958bae26a90a05d31d3378788b1b0e4460405160405180910390a350565b6120d1611ebb565b612143576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156121ac57503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b61221e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f7420612076616c696420726563697069656e74000000000000000000000081525060200191505060405180910390fd5b60008111612294576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f616d6f756e742073686f756c642062652067726561746572207468616e20300081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561236b578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505061236657808260405161231090615160565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506040518091039082f080158015612361573d6000803e3d6000fd5b509050505b6126b8565b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156126855760006124b160b054609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561246857600080fd5b505afa15801561247c573d6000803e3d6000fd5b505050506040513d602081101561249257600080fd5b810190808051906020019092919050505061366490919063ffffffff16565b905081811015612529576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f696e73756666696369656e742066756e6473000000000000000000000000000081525060200191505060405180910390fd5b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156125d257600080fd5b505af11580156125e6573d6000803e3d6000fd5b505050506040513d60208110156125fc57600080fd5b810190808051906020019092919050505061267f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b506126b7565b60008390506126b583838373ffffffffffffffffffffffffffffffffffffffff166143c79092919063ffffffff16565b505b5b505050565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612782576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f6f6e6c7920746f6b656e20636f6e747261637420697320616c6c6f776564000081525060200191505060405180910390fd5b60b160009054906101000a900460ff166127ed576127ec8560af60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905586614498565b5b60019050949350505050565b60a98060000154908060010154908060020154905083565b61286660af60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905582613342565b50565b60af6020528060005260406000206000915090505481565b600060019054906101000a900460ff16806128a0575061289f6143a8565b5b806128b757506000809054906101000a900460ff16155b61290c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806152b6602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561295c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a38015612a3b5760008060016101000a81548160ff0219169083151502179055505b5050565b6000612a4961516c565b609a6040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815250509050612b1b81604001516147cf565b612b29578060000151612b2f565b80602001515b91505090565b600060019054906101000a900460ff1680612b545750612b536143a8565b5b80612b6b57506000809054906101000a900460ff16155b612bc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806152b6602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612c10576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff161415612cb3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7a65726f2061646472657373000000000000000000000000000000000000000081525060200191505060405180910390fd5b612cd28b73ffffffffffffffffffffffffffffffffffffffff166147f7565b612d44576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6e6f74206120636f6e747261637420616464726573730000000000000000000081525060200191505060405180910390fd5b612d4d33612881565b612d55611a5b565b8a609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612d9f89611720565b612da8886110bc565b612db187611cc7565b612dba8661194e565b612dc3856113a9565b612dce84848461120b565b612dd78a612e34565b612de08c6135b0565b8015612e015760008060016101000a81548160ff0219169083151502179055505b505050505050505050505050565b60ac602052816000526040600020602052806000526040600020600091509150505481565b612e3c611ebb565b612eae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612f51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7a65726f2061646472657373000000000000000000000000000000000000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ff3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f77726f6e6720616464726573730000000000000000000000000000000000000081525060200191505060405180910390fd5b612ffb61516c565b609a6040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481525050905060008160400151141561310a5781816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061315a565b61311781604001516147cf565b15613159578060200151816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b5b81816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061319a61365c565b81604001818152505080609a60008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050507f26a68c9d9649fb5e7a060a37b211ffd1d9a4fe6eb068bfb33decba647d4ed5398233604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b62093a8081565b6000613318609d60405180606001604052908160008201548152602001600182015481526020016002820154815250506141f8565b905090565b60ae602052816000526040600020602052806000526040600020600091509150505481565b600082118015613391575060af60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211155b613403576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f77726f6e67206465706f7369742069640000000000000000000000000000000081525060200191505060405180910390fd5b61340e338383614498565b6134186001614842565b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156134f557600080fd5b505af1158015613509573d6000803e3d6000fd5b505050506040513d602081101561351f57600080fd5b81019080805190602001909291905050506135a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b6135ac6000614842565b5050565b6135b8611ebb565b61362a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6136338161485f565b50565b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600042905090565b60006136a683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506149a5565b905092915050565b60008082840190508381101561372c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60016066600082825401925050819055506000606654905060008411801561379d575060af60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548411155b61380f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f77726f6e67206465706f7369742069640000000000000000000000000000000081525060200191505060405180910390fd5b600060ac60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020541180156138bf57508260ac60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000205410155b613931576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f696e73756666696369656e742066756e6473000000000000000000000000000081525060200191505060405180910390fd5b61393b8585610d7e565b613990576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806152e4602b913960400191505060405180910390fd5b60008061399e878787614a65565b9150915060008086146139c3576139be83876136ae90919063ffffffff16565b613a15565b60ac60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020545b9050613a7a8160ac60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000205461366490919063ffffffff16565b60ac60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089815260200190815260200160002081905550613ae38160b05461366490919063ffffffff16565b60b081905550600060ac60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000898152602001908152602001600020541415613b9957600060ad60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000898152602001908152602001600020819055505b60008090508515613d4d57613bd8670de0b6b3a7640000613bca613bbb6132e3565b856142ae90919063ffffffff16565b61403d90919063ffffffff16565b9050613bed818361366490919063ffffffff16565b9150609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb613c35612a3f565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613c9f57600080fd5b505af1158015613cb3573d6000803e3d6000fd5b505050506040513d6020811015613cc957600080fd5b8101908080519060200190929190505050613d4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613df657600080fd5b505af1158015613e0a573d6000803e3d6000fd5b505050506040513d6020811015613e2057600080fd5b8101908080519060200190929190505050613ea3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b878973ffffffffffffffffffffffffffffffffffffffff167f6b4651e8f4162f82274a25e57a29f7ed9156d17078e76dd4d05f04ba08831aa4848460ac60008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e8152602001908152602001600020548989604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a3505050506066548114613fdd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050505050565b600082600201541415613fff57808260000181905550614020565b61400c82600201546147cf565b1561401f57816001015482600001819055505b5b80826001018190555061403161365c565b82600201819055505050565b600061407f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250614d43565b905092915050565b60008114156140fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f73686f756c642062652067726561746572207468616e2030000000000000000081525060200191505060405180910390fd5b6000614108614e09565b905060008560060154141561415c57604051806060016040528085815260200184815260200183815250856000016000820151816000015560208201518160010155604082015181600201559050506141a8565b61417662093a8086600601546136ae90919063ffffffff16565b8111156141a75784600301856000016000820154816000015560018201548160010155600282015481600201559050505b5b604051806060016040528085815260200184815260200183815250856003016000820151816000015560208201518160010155604082015181600201559050508085600601819055505050505050565b600061420782604001516147cf565b61421557816000015161421b565b81602001515b9050919050565b60008060008061423186614334565b9250925092506000828603905060008112156142545760009450505050506142a8565b60008190506142a061427f61427a8561426c85614e11565b6136ae90919063ffffffff16565b614eb3565b61429283886142ae90919063ffffffff16565b61403d90919063ffffffff16565b955050505050505b92915050565b6000808314156142c1576000905061432e565b60008284029050828482816142d257fe5b0414614329576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806152956021913960400191505060405180910390fd5b809150505b92915050565b60008060008061435462093a8086600601546136ae90919063ffffffff16565b61435c614e09565b119050806143815784600001600001548560000160010154866000016002015461439a565b8460030160000154856003016001015486600301600201545b935093509350509193909250565b6000803090506000813b9050600081149250505090565b600033905090565b614493838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050614f15565b505050565b60016066600082825401925050819055506000606654905060008211614509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061522e6024913960400191505060405180910390fd5b6000614513611a41565b5050905060008114801561452e5750600061452c611521565b145b156145a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f656d697373696f6e2073746f707065640000000000000000000000000000000081525060200191505060405180910390fd5b6000806145b087876000614a65565b9150915060006146198660ac60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a8152602001908152602001600020546136ae90919063ffffffff16565b90508060ac60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000898152602001908152602001600020819055506146858660b0546136ae90919063ffffffff16565b60b08190555061469361365c565b60ad60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089815260200190815260200160002081905550868873ffffffffffffffffffffffffffffffffffffffff167f0a5c854539f6e93fcd4a8397bfae8bdb751b4e819840f1c8681e6ad7ff19c5b5888487876040518085815260200184815260200183815260200182815260200194505050505060405180910390a35050505060665481146147c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b50505050565b60006147e762093a80836136ae90919063ffffffff16565b6147ef61365c565b119050919050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561483957506000801b8214155b92505050919050565b8060b160006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156148e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806152086026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000838311158290614a52576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614a175780820151818401526020810190506149fc565b50505050905090810190601f168015614a445780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080600060ac60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000205490506000808514614acc5784614ace565b815b90506000806000614b2f60ad60008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002054856115ad565b9250925092506000831115614d3057614b5182866136ae90919063ffffffff16565b60ac60008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002081905550614bba8260b0546136ae90919063ffffffff16565b60b081905550609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb614c06612a3f565b614c19858761366490919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015614c8257600080fd5b505af1158015614c96573d6000803e3d6000fd5b505050506040513d6020811015614cac57600080fd5b8101908080519060200190929190505050614d2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b8181965096505050505050935093915050565b60008083118290614def576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614db4578082015181840152602081019050614d99565b50505050905090810190601f168015614de15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581614dfb57fe5b049050809150509392505050565b600042905090565b600080821415614e245760009050614eae565b6000828302905082838281614e3557fe5b0414614ea9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f457874656e6465644d6174683a207371756172696e67206f766572666c6f770081525060200191505060405180910390fd5b809150505b919050565b60006003821115614f02578190506000600160028481614ecf57fe5b040190505b81811015614efc57809150600281828581614eeb57fe5b040181614ef457fe5b049050614ed4565b50614f10565b60008214614f0f57600190505b5b919050565b614f348273ffffffffffffffffffffffffffffffffffffffff166147f7565b614fa6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310614ff55780518252602082019150602081019050602083039250614fd2565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114615057576040519150601f19603f3d011682016040523d82523d6000602084013e61505c565b606091505b5091509150816150d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b60008151111561515a578080602001905160208110156150f357600080fd5b8101908080519060200190929190505050615159576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180615336602a913960400191505060405180910390fd5b5b50505050565b604e806151ba83390190565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152509056fe6080604052604051604e380380604e83398181016040526020811015602357600080fd5b81019080805190602001909291905050508073ffffffffffffffffffffffffffffffffffffffff16fffe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573736465706f73697420616d6f756e742073686f756c64206265206d6f7265207468616e203073686f756c64206265206c657373207468616e206f7220657175616c20746f20612068616c66206f6620746865206d6178696d756d20656d697373696f6e2072617465536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656463616e206e6f7420776974686472617720647572696e6720696e697469616c206c6f636b20706572696f6473686f756c64206265206c657373207468616e206f7220657175616c20746f20312065746865725361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656473686f756c646e27742062652067726561746572207468616e2033302064617973a265627a7a72315820f91215af907485e3a0a3bccd5f88ab05bcdf2f37f223fe0c77be10eae8e294f364736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x53B5 DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x27F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B53CCB3 GT PUSH2 0x15C JUMPI DUP1 PUSH4 0xC3BD8FD0 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xDB51EF92 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDB51EF92 EQ PUSH2 0xC02 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0xC20 JUMPI DUP1 PUSH4 0xE0648A28 EQ PUSH2 0xC3E JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0xCA0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xCD8 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xD1C JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0xC3BD8FD0 EQ PUSH2 0x9A1 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x9F9 JUMPI DUP1 PUSH4 0xC5401CE3 EQ PUSH2 0xA3D JUMPI DUP1 PUSH4 0xCA758993 EQ PUSH2 0xA87 JUMPI DUP1 PUSH4 0xCBF1304D EQ PUSH2 0xB5C JUMPI DUP1 PUSH4 0xD6463151 EQ PUSH2 0xBBE JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x97559CDC GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x97559CDC EQ PUSH2 0x7D2 JUMPI DUP1 PUSH4 0x9EE679E8 EQ PUSH2 0x7F0 JUMPI DUP1 PUSH4 0x9FC314C8 EQ PUSH2 0x81E JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x88C JUMPI DUP1 PUSH4 0xB4A86C48 EQ PUSH2 0x947 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x973 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x8B53CCB3 EQ PUSH2 0x6AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x710 JUMPI DUP1 PUSH4 0x8DF67680 EQ PUSH2 0x75A JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x778 JUMPI DUP1 PUSH4 0x94967FA1 EQ PUSH2 0x79A JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x5E9E230D GT PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x74949B6D GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x74949B6D EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x75FA901B EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x8235C378 EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0x868867B5 EQ PUSH2 0x680 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x5E9E230D EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x60C251C1 EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x60D4FFB0 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5D6 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x294A5B04 GT PUSH2 0x247 JUMPI DUP1 PUSH4 0x294A5B04 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x2C3144DA EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x41682990 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x436CC3D6 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x47E318DE EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x522EA5E2 EQ PUSH2 0x4E6 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x3D6D343 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xE559215 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x18194359 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x18CCA7A6 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x224313FA EQ PUSH2 0x3D2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28C PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE59 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x120B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44A PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A4 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C2 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EE PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50C PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x538 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x584 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1720 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DE PUSH2 0x1813 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x194E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x616 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x642 PUSH2 0x1A5B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64C PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66A PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1CC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x718 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x762 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x780 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7DA PUSH2 0x1F2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F65 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x8E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x8FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x91D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x26BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94F PUSH2 0x27F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x989 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2811 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2881 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA45 PUSH2 0x2A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x160 DUP2 LT ISZERO PUSH2 0xA9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2B35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC00 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0A PUSH2 0x32DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC28 PUSH2 0x32E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x331D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3342 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x35B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD24 PUSH2 0x3636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xA6 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDEB PUSH1 0xAD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDDD PUSH2 0x365C JUMP JUMPDEST PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xDF5 PUSH2 0x1F2B JUMP JUMPDEST DUP2 LT ISZERO SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9A DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xAE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xF24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7769746864726177616C207761736E2774207265717565737465640000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2E PUSH2 0x365C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF4C PUSH2 0xF3D PUSH2 0x1573 JUMP JUMPDEST DUP5 PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0xFC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F6F206561726C790000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDE PUSH2 0xFCF PUSH2 0x1E81 JUMP JUMPDEST DUP3 PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 LT PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F6F206C617465000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xAE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x10B5 CALLER DUP7 DUP7 PUSH1 0x0 PUSH2 0x3736 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10C4 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x1136 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x278D00 DUP2 GT ISZERO PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5360 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x119D PUSH1 0xA0 DUP3 PUSH2 0x3FE4 JUMP JUMPDEST PUSH32 0xB1EFFBB8DC5CFA97751137110A061198891986F1567677E11EC9449743180F74 DUP2 CALLER PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1213 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x1285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A1 PUSH1 0x2 PUSH8 0x214E8348C4F0000 PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0x12F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5252 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1311 DUP4 DUP4 DUP4 PUSH1 0xB2 PUSH2 0x4087 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xDDF30262673035378258D8AAB83A68D6D8B8E45E5510D3B295FCC7CD65C6378A DUP4 DUP4 DUP4 CALLER PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x13B1 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x1423 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 GT ISZERO PUSH2 0x1484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x530F PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148F PUSH1 0xA9 DUP3 PUSH2 0x3FE4 JUMP JUMPDEST PUSH32 0xB7B23F70FE41CD9DEBAAA54902F2492C79F94D7582D587844DC12FDC8FC42A2B DUP2 CALLER PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH8 0x214E8348C4F0000 DUP2 JUMP JUMPDEST PUSH1 0x9D DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1556 PUSH1 0xA9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x41F8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A8 PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x41F8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 EQ DUP1 PUSH2 0x15C0 JUMPI POP PUSH1 0x0 DUP6 EQ JUMPDEST ISZERO PUSH2 0x15DE JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP3 SWAP3 POP DUP2 SWAP2 POP DUP1 SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1719 JUMP JUMPDEST PUSH2 0x15F8 DUP6 PUSH2 0x15EA PUSH2 0x365C JUMP JUMPDEST PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x161C JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP3 SWAP3 POP DUP2 SWAP2 POP DUP1 SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1632 DUP3 PUSH1 0xB2 PUSH2 0x4222 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x164E PUSH2 0x163F PUSH2 0x1B68 JUMP JUMPDEST DUP3 PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x166F JUMPI PUSH1 0x0 DUP1 DUP4 DUP3 SWAP3 POP DUP2 SWAP2 POP SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1719 JUMP JUMPDEST PUSH8 0x214E8348C4F0000 DUP2 GT ISZERO PUSH2 0x1681 JUMPI INVALID JUMPDEST PUSH2 0x16CE PUSH8 0xDE0B6B3A7640000 PUSH4 0x1E13380 MUL PUSH2 0x16C0 DUP5 PUSH2 0x16B2 PUSH8 0x214E8348C4F0000 DUP11 PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x1715 PUSH8 0xDE0B6B3A7640000 PUSH4 0x1E13380 MUL PUSH2 0x1707 DUP5 PUSH2 0x16F9 DUP6 DUP11 PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1728 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x179A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A5 PUSH1 0x9D DUP3 PUSH2 0x3FE4 JUMP JUMPDEST PUSH32 0xC8242DC5446855370B781ABBFC5D882AF1D1A3CC29143216ABA3558FEB0CE925 DUP2 CALLER PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x181B PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x188D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1956 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x19C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D3 PUSH1 0xA6 DUP3 PUSH2 0x3FE4 JUMP JUMPDEST PUSH32 0x597B9881536F6A87F60171072E2A2D56C53E5E2C1D72270259008AD4932E61ED DUP2 CALLER PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1A50 PUSH1 0xB2 PUSH2 0x4334 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1A7A JUMPI POP PUSH2 0x1A79 PUSH2 0x43A8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1A91 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1AE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x52B6 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x1B36 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x66 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B5F JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1C1A PUSH2 0x1521 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1C30 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5F PUSH8 0xDE0B6B3A7640000 PUSH2 0x1C51 DUP5 DUP7 PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C7F PUSH1 0x2 PUSH8 0x214E8348C4F0000 PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xB0 SLOAD LT PUSH2 0x1C96 JUMPI DUP1 SWAP5 POP POP POP POP POP PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1CBD DUP3 PUSH2 0x1CAF PUSH1 0xB0 SLOAD DUP5 PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1CCF PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x1D41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 DUP2 LT ISZERO PUSH2 0x1DB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73686F756C646E2774206265206C657373207468616E203120686F7572000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DC4 PUSH1 0xA3 DUP3 PUSH2 0x3FE4 JUMP JUMPDEST PUSH32 0x3A963FA1D1D0DA205F1AE9869AA14BF4FF7A4585EFA819B0C94326B4A3E1E228 DUP2 CALLER PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xAD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB6 PUSH1 0xA3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x41F8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EFE PUSH2 0x43BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F27 CALLER DUP4 DUP4 PUSH1 0x1 PUSH2 0x3736 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F60 PUSH1 0xA6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x41F8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x1FB4 JUMPI POP PUSH1 0xAF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x2026 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E67206465706F73697420696400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x202E PUSH2 0x365C JUMP JUMPDEST PUSH1 0xAE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE670E4E82118D22A1F9EE18920455EBC958BAE26A90A05D31D3378788B1B0E44 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x20D1 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x2143 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x21AC JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x221E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420612076616C696420726563697069656E740000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2294 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x616D6F756E742073686F756C642062652067726561746572207468616E203000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x236B JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x2366 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2310 SWAP1 PUSH2 0x5160 JUMP JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 DUP3 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x2361 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP POP JUMPDEST PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2685 JUMPI PUSH1 0x0 PUSH2 0x24B1 PUSH1 0xB0 SLOAD PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x247C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2529 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x267F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E73666572206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x26B7 JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH2 0x26B5 DUP4 DUP4 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x43C7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2782 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746F6B656E20636F6E747261637420697320616C6C6F7765640000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x27ED JUMPI PUSH2 0x27EC DUP6 PUSH1 0xAF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE DUP7 PUSH2 0x4498 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xA9 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x2866 PUSH1 0xAF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE DUP3 PUSH2 0x3342 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xAF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x28A0 JUMPI POP PUSH2 0x289F PUSH2 0x43A8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x28B7 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x290C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x52B6 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x295C JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 ISZERO PUSH2 0x2A3B JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A49 PUSH2 0x516C JUMP JUMPDEST PUSH1 0x9A PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x2B1B DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x47CF JUMP JUMPDEST PUSH2 0x2B29 JUMPI DUP1 PUSH1 0x0 ADD MLOAD PUSH2 0x2B2F JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2B54 JUMPI POP PUSH2 0x2B53 PUSH2 0x43A8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2B6B JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2BC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x52B6 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x2C10 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2CB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7A65726F20616464726573730000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CD2 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x47F7 JUMP JUMPDEST PUSH2 0x2D44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F74206120636F6E7472616374206164647265737300000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D4D CALLER PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x2D55 PUSH2 0x1A5B JUMP JUMPDEST DUP11 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2D9F DUP10 PUSH2 0x1720 JUMP JUMPDEST PUSH2 0x2DA8 DUP9 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x2DB1 DUP8 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x2DBA DUP7 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x2DC3 DUP6 PUSH2 0x13A9 JUMP JUMPDEST PUSH2 0x2DCE DUP5 DUP5 DUP5 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x2DD7 DUP11 PUSH2 0x2E34 JUMP JUMPDEST PUSH2 0x2DE0 DUP13 PUSH2 0x35B0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E01 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xAC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E3C PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x2EAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2F51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7A65726F20616464726573730000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2FF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E67206164647265737300000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FFB PUSH2 0x516C JUMP JUMPDEST PUSH1 0x9A PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD EQ ISZERO PUSH2 0x310A JUMPI DUP2 DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x315A JUMP JUMPDEST PUSH2 0x3117 DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x47CF JUMP JUMPDEST ISZERO PUSH2 0x3159 JUMPI DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST JUMPDEST DUP2 DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x319A PUSH2 0x365C JUMP JUMPDEST DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x9A PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH32 0x26A68C9D9649FB5E7A060A37B211FFD1D9A4FE6EB068BFB33DECBA647D4ED539 DUP3 CALLER PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3318 PUSH1 0x9D PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x41F8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xAE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x3391 JUMPI POP PUSH1 0xAF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x3403 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E67206465706F73697420696400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x340E CALLER DUP4 DUP4 PUSH2 0x4498 JUMP JUMPDEST PUSH2 0x3418 PUSH1 0x1 PUSH2 0x4842 JUMP JUMPDEST PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3509 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x351F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x35A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E73666572206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35AC PUSH1 0x0 PUSH2 0x4842 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x35B8 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x362A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3633 DUP2 PUSH2 0x485F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A6 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x49A5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x372C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x66 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x66 SLOAD SWAP1 POP PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x379D JUMPI POP PUSH1 0xAF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 GT ISZERO JUMPDEST PUSH2 0x380F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E67206465706F73697420696400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xAC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT DUP1 ISZERO PUSH2 0x38BF JUMPI POP DUP3 PUSH1 0xAC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST PUSH2 0x3931 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x393B DUP6 DUP6 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x3990 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x52E4 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x399E DUP8 DUP8 DUP8 PUSH2 0x4A65 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 DUP7 EQ PUSH2 0x39C3 JUMPI PUSH2 0x39BE DUP4 DUP8 PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3A15 JUMP JUMPDEST PUSH1 0xAC PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD JUMPDEST SWAP1 POP PUSH2 0x3A7A DUP2 PUSH1 0xAC PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xAC PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3AE3 DUP2 PUSH1 0xB0 SLOAD PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xAC PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x3B99 JUMPI PUSH1 0x0 PUSH1 0xAD PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP DUP6 ISZERO PUSH2 0x3D4D JUMPI PUSH2 0x3BD8 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3BCA PUSH2 0x3BBB PUSH2 0x32E3 JUMP JUMPDEST DUP6 PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x3BED DUP2 DUP4 PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x3C35 PUSH2 0x2A3F JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3D4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E73666572206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP11 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E0A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3EA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E73666572206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6B4651E8F4162F82274A25E57A29F7ED9156D17078E76DD4D05F04BA08831AA4 DUP5 DUP5 PUSH1 0xAC PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH1 0x66 SLOAD DUP2 EQ PUSH2 0x3FDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x3FFF JUMPI DUP1 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x4020 JUMP JUMPDEST PUSH2 0x400C DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x47CF JUMP JUMPDEST ISZERO PUSH2 0x401F JUMPI DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x4031 PUSH2 0x365C JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x4D43 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x40FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73686F756C642062652067726561746572207468616E20300000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4108 PUSH2 0x4E09 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x6 ADD SLOAD EQ ISZERO PUSH2 0x415C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x41A8 JUMP JUMPDEST PUSH2 0x4176 PUSH3 0x93A80 DUP7 PUSH1 0x6 ADD SLOAD PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x41A7 JUMPI DUP5 PUSH1 0x3 ADD DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP DUP6 PUSH1 0x3 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP1 DUP6 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4207 DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x47CF JUMP JUMPDEST PUSH2 0x4215 JUMPI DUP2 PUSH1 0x0 ADD MLOAD PUSH2 0x421B JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x4231 DUP7 PUSH2 0x4334 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP3 DUP7 SUB SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x4254 JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x42A8 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x42A0 PUSH2 0x427F PUSH2 0x427A DUP6 PUSH2 0x426C DUP6 PUSH2 0x4E11 JUMP JUMPDEST PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4EB3 JUMP JUMPDEST PUSH2 0x4292 DUP4 DUP9 PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x42C1 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x432E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x42D2 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x4329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5295 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x4354 PUSH3 0x93A80 DUP7 PUSH1 0x6 ADD SLOAD PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x435C PUSH2 0x4E09 JUMP JUMPDEST GT SWAP1 POP DUP1 PUSH2 0x4381 JUMPI DUP5 PUSH1 0x0 ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH1 0x0 ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH1 0x0 ADD PUSH1 0x2 ADD SLOAD PUSH2 0x439A JUMP JUMPDEST DUP5 PUSH1 0x3 ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH1 0x3 ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH1 0x3 ADD PUSH1 0x2 ADD SLOAD JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4493 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x4F15 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x66 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x66 SLOAD SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x4509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x522E PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4513 PUSH2 0x1A41 JUMP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ DUP1 ISZERO PUSH2 0x452E JUMPI POP PUSH1 0x0 PUSH2 0x452C PUSH2 0x1521 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x45A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x656D697373696F6E2073746F7070656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x45B0 DUP8 DUP8 PUSH1 0x0 PUSH2 0x4A65 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x4619 DUP7 PUSH1 0xAC PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xAC PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4685 DUP7 PUSH1 0xB0 SLOAD PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB0 DUP2 SWAP1 SSTORE POP PUSH2 0x4693 PUSH2 0x365C JUMP JUMPDEST PUSH1 0xAD PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA5C854539F6E93FCD4A8397BFAE8BDB751B4E819840F1C8681E6AD7FF19C5B5 DUP9 DUP5 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH1 0x66 SLOAD DUP2 EQ PUSH2 0x47C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47E7 PUSH3 0x93A80 DUP4 PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x47EF PUSH2 0x365C JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x4839 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xB1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x48E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5208 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x4A52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A17 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x49FC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4A44 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xAC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP6 EQ PUSH2 0x4ACC JUMPI DUP5 PUSH2 0x4ACE JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4B2F PUSH1 0xAD PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP6 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x4D30 JUMPI PUSH2 0x4B51 DUP3 DUP7 PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xAC PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4BBA DUP3 PUSH1 0xB0 SLOAD PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB0 DUP2 SWAP1 SSTORE POP PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x4C06 PUSH2 0x2A3F JUMP JUMPDEST PUSH2 0x4C19 DUP6 DUP8 PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4CAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4D2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E73666572206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP2 DUP2 SWAP7 POP SWAP7 POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x4DEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4DB4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D99 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4DE1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x4DFB JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x4E24 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x4EAE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP4 MUL SWAP1 POP DUP3 DUP4 DUP3 DUP2 PUSH2 0x4E35 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x4EA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x457874656E6465644D6174683A207371756172696E67206F766572666C6F7700 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x4F02 JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 PUSH2 0x4ECF JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4EFC JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x4EEB JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x4EF4 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x4ED4 JUMP JUMPDEST POP PUSH2 0x4F10 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x4F0F JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F34 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x47F7 JUMP JUMPDEST PUSH2 0x4FA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x4FF5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x4FD2 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5057 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x505C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x50D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x515A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5159 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5336 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4E DUP1 PUSH2 0x51BA DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x4E CODESIZE SUB DUP1 PUSH1 0x4E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573736465706F73697420616D6F756E742073 PUSH9 0x6F756C64206265206D PUSH16 0x7265207468616E203073686F756C6420 PUSH3 0x65206C PUSH6 0x737320746861 PUSH15 0x206F7220657175616C20746F206120 PUSH9 0x616C66206F66207468 PUSH6 0x206D6178696D PUSH22 0x6D20656D697373696F6E2072617465536166654D6174 PUSH9 0x3A206D756C7469706C PUSH10 0x636174696F6E206F7665 PUSH19 0x666C6F77436F6E747261637420696E7374616E PUSH4 0x65206861 PUSH20 0x20616C7265616479206265656E20696E69746961 PUSH13 0x697A656463616E206E6F742077 PUSH10 0x74686472617720647572 PUSH10 0x6E6720696E697469616C KECCAK256 PUSH13 0x6F636B20706572696F6473686F PUSH22 0x6C64206265206C657373207468616E206F7220657175 PUSH2 0x6C20 PUSH21 0x6F20312065746865725361666545524332303A2045 MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656473686F756C646E27742062652067 PUSH19 0x6561746572207468616E2033302064617973A2 PUSH6 0x627A7A723158 KECCAK256 0xF9 SLT ISZERO 0xAF SWAP1 PUSH21 0x85E3A0A3BCCD5F88AB05BCDF2F37F223FE0C77BE10 0xEA 0xE8 0xE2 SWAP5 RETURN PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "722:24937:8:-;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061027f5760003560e01c80638b53ccb31161015c578063c3bd8fd0116100ce578063db51ef9211610087578063db51ef9214610c02578063ddca3f4314610c20578063e0648a2814610c3e578063e2bbb15814610ca0578063f2fde38b14610cd8578063fc0c546a14610d1c5761027f565b8063c3bd8fd0146109a1578063c4d66de8146109f9578063c5401ce314610a3d578063ca75899314610a87578063cbf1304d14610b5c578063d646315114610bbe5761027f565b806397559cdc1161012057806397559cdc146107d25780639ee679e8146107f05780639fc314c81461081e578063a4c0ed361461088c578063b4a86c4814610947578063b6b55f25146109735761027f565b80638b53ccb3146106ae5780638da5cb5b146107105780638df676801461075a5780638f32d59b1461077857806394967fa11461079a5761027f565b80635e9e230d116101f557806374949b6d116101b957806374949b6d146105e057806375fa901b1461060e5780638129fc1c1461063a578063817b1cd2146106445780638235c37814610662578063868867b5146106805761027f565b80635e9e230d1461050457806360c251c11461053057806360d4ffb01461054e57806369fe0e2d146105a8578063715018a6146105d65761027f565b8063294a5b0411610247578063294a5b04146104005780632c3144da14610442578063416829901461046e578063436cc3d61461049c57806347e318de146104ba578063522ea5e2146104e65761027f565b806303d6d343146102845780630e559215146102b0578063181943591461031657806318cca7a61461039a578063224313fa146103d2575b600080fd5b61028c610d66565b60405180848152602001838152602001828152602001935050505060405180910390f35b6102fc600480360360408110156102c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d7e565b604051808215151515815260200191505060405180910390f35b61031e610e01565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b6103d0600480360360408110156103b057600080fd5b810190808035906020019092919080359060200190929190505050610e59565b005b6103fe600480360360208110156103e857600080fd5b81019080803590602001909291905050506110bc565b005b6104406004803603606081101561041657600080fd5b8101908080359060200190929190803590602001909291908035906020019092919050505061120b565b005b61044a611391565b60405180848152602001838152602001828152602001935050505060405180910390f35b61049a6004803603602081101561048457600080fd5b81019080803590602001909291905050506113a9565b005b6104a46114fd565b6040518082815260200191505060405180910390f35b6104c2611509565b60405180848152602001838152602001828152602001935050505060405180910390f35b6104ee611521565b6040518082815260200191505060405180910390f35b61050c61155b565b60405180848152602001838152602001828152602001935050505060405180910390f35b610538611573565b6040518082815260200191505060405180910390f35b6105846004803603604081101561056457600080fd5b8101908080359060200190929190803590602001909291905050506115ad565b60405180848152602001838152602001828152602001935050505060405180910390f35b6105d4600480360360208110156105be57600080fd5b8101908080359060200190929190505050611720565b005b6105de611813565b005b61060c600480360360208110156105f657600080fd5b810190808035906020019092919050505061194e565b005b610616611a41565b60405180848152602001838152602001828152602001935050505060405180910390f35b610642611a5b565b005b61064c611b62565b6040518082815260200191505060405180910390f35b61066a611b68565b6040518082815260200191505060405180910390f35b6106ac6004803603602081101561069657600080fd5b8101908080359060200190929190505050611cc7565b005b6106fa600480360360408110156106c457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e32565b6040518082815260200191505060405180910390f35b610718611e57565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610762611e81565b6040518082815260200191505060405180910390f35b610780611ebb565b604051808215151515815260200191505060405180910390f35b6107d0600480360360408110156107b057600080fd5b810190808035906020019092919080359060200190929190505050611f1a565b005b6107da611f2b565b6040518082815260200191505060405180910390f35b61081c6004803603602081101561080657600080fd5b8101908080359060200190929190505050611f65565b005b61088a6004803603606081101561083457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506120c9565b005b61092d600480360360608110156108a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156108e957600080fd5b8201836020820111156108fb57600080fd5b8035906020019184600183028401116401000000008311171561091d57600080fd5b90919293919293905050506126bd565b604051808215151515815260200191505060405180910390f35b61094f6127f9565b60405180848152602001838152602001828152602001935050505060405180910390f35b61099f6004803603602081101561098957600080fd5b8101908080359060200190929190505050612811565b005b6109e3600480360360208110156109b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612869565b6040518082815260200191505060405180910390f35b610a3b60048036036020811015610a0f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612881565b005b610a45612a3f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b5a6004803603610160811015610a9e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050612b35565b005b610ba860048036036040811015610b7257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612e0f565b6040518082815260200191505060405180910390f35b610c0060048036036020811015610bd457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612e34565b005b610c0a6132dc565b6040518082815260200191505060405180910390f35b610c286132e3565b6040518082815260200191505060405180910390f35b610c8a60048036036040811015610c5457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061331d565b6040518082815260200191505060405180910390f35b610cd660048036036040811015610cb657600080fd5b810190808035906020019092919080359060200190929190505050613342565b005b610d1a60048036036020811015610cee57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506135b0565b005b610d24613636565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60a68060000154908060010154908060020154905083565b600080610deb60ad60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054610ddd61365c565b61366490919063ffffffff16565b9050610df5611f2b565b81101591505092915050565b609a8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b600060ae60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054905060008111610f24576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f7769746864726177616c207761736e277420726571756573746564000000000081525060200191505060405180910390fd5b6000610f2e61365c565b90506000610f4c610f3d611573565b846136ae90919063ffffffff16565b905080821015610fc4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f746f6f206561726c79000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b610fde610fcf611e81565b826136ae90919063ffffffff16565b8210611052576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f746f6f206c61746500000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600060ae60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020819055506110b53386866000613736565b5050505050565b6110c4611ebb565b611136576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b62278d00811115611192576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806153606021913960400191505060405180910390fd5b61119d60a082613fe4565b7fb1effbb8dc5cfa97751137110a061198891986f1567677e11ec9449743180f748133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b611213611ebb565b611285576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6112a16002670214e8348c4f000061403d90919063ffffffff16565b8311156112f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260438152602001806152526043913960600191505060405180910390fd5b61131183838360b2614087909392919063ffffffff16565b7fddf30262673035378258d8aab83a68d6d8b8e45e5510d3b295fcc7cd65c6378a83838333604051808581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200194505050505060405180910390a1505050565b60a08060000154908060010154908060020154905083565b6113b1611ebb565b611423576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b670de0b6b3a7640000811115611484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061530f6027913960400191505060405180910390fd5b61148f60a982613fe4565b7fb7b23f70fe41cd9debaaa54902f2492c79f94d7582d587844dc12fdc8fc42a2b8133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b670214e8348c4f000081565b609d8060000154908060010154908060020154905083565b600061155660a960405180606001604052908160008201548152602001600182015481526020016002820154815250506141f8565b905090565b60a38060000154908060010154908060020154905083565b60006115a860a060405180606001604052908160008201548152602001600182015481526020016002820154815250506141f8565b905090565b6000806000808414806115c05750600085145b156115de576000806000829250819150809050925092509250611719565b6115f8856115ea61365c565b61366490919063ffffffff16565b9050600081141561161c576000806000829250819150809050925092509250611719565b60006116328260b261422290919063ffffffff16565b905061164e61163f611b68565b826136ae90919063ffffffff16565b9050600081141561166f576000808382925081915093509350935050611719565b670214e8348c4f000081111561168157fe5b6116ce670de0b6b3a76400006301e13380026116c0846116b2670214e8348c4f00008a6142ae90919063ffffffff16565b6142ae90919063ffffffff16565b61403d90919063ffffffff16565b9350611715670de0b6b3a76400006301e1338002611707846116f9858a6142ae90919063ffffffff16565b6142ae90919063ffffffff16565b61403d90919063ffffffff16565b9250505b9250925092565b611728611ebb565b61179a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6117a5609d82613fe4565b7fc8242dc5446855370b781abbfc5d882af1d1a3cc29143216aba3558feb0ce9258133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b61181b611ebb565b61188d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611956611ebb565b6119c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6119d360a682613fe4565b7f597b9881536f6a87f60171072e2a2d56c53e5e2c1d72270259008ad4932e61ed8133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b6000806000611a5060b2614334565b925092509250909192565b600060019054906101000a900460ff1680611a7a5750611a796143a8565b5b80611a9157506000809054906101000a900460ff16155b611ae6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806152b6602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611b36576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b60016066819055508015611b5f5760008060016101000a81548160ff0219169083151502179055505b50565b60b05481565b600080609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bd357600080fd5b505afa158015611be7573d6000803e3d6000fd5b505050506040513d6020811015611bfd57600080fd5b810190808051906020019092919050505090506000611c1a611521565b90506000811415611c3057600092505050611cc4565b6000611c5f670de0b6b3a7640000611c5184866142ae90919063ffffffff16565b61403d90919063ffffffff16565b90506000611c7f6002670214e8348c4f000061403d90919063ffffffff16565b90508160b05410611c965780945050505050611cc4565b611cbd82611caf60b054846142ae90919063ffffffff16565b61403d90919063ffffffff16565b9450505050505b90565b611ccf611ebb565b611d41576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610e10811015611db9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f73686f756c646e2774206265206c657373207468616e203120686f757200000081525060200191505060405180910390fd5b611dc460a382613fe4565b7f3a963fa1d1d0da205f1ae9869aa14bf4ff7a4585efa819b0c94326b4a3e1e2288133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150565b60ad602052816000526040600020602052806000526040600020600091509150505481565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000611eb660a360405180606001604052908160008201548152602001600182015481526020016002820154815250506141f8565b905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611efe6143bf565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611f273383836001613736565b5050565b6000611f6060a660405180606001604052908160008201548152602001600182015481526020016002820154815250506141f8565b905090565b600081118015611fb4575060af60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111155b612026576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f77726f6e67206465706f7369742069640000000000000000000000000000000081525060200191505060405180910390fd5b61202e61365c565b60ae60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550803373ffffffffffffffffffffffffffffffffffffffff167fe670e4e82118d22a1f9ee18920455ebc958bae26a90a05d31d3378788b1b0e4460405160405180910390a350565b6120d1611ebb565b612143576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156121ac57503073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b61221e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f6e6f7420612076616c696420726563697069656e74000000000000000000000081525060200191505060405180910390fd5b60008111612294576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f616d6f756e742073686f756c642062652067726561746572207468616e20300081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561236b578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505061236657808260405161231090615160565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506040518091039082f080158015612361573d6000803e3d6000fd5b509050505b6126b8565b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156126855760006124b160b054609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561246857600080fd5b505afa15801561247c573d6000803e3d6000fd5b505050506040513d602081101561249257600080fd5b810190808051906020019092919050505061366490919063ffffffff16565b905081811015612529576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f696e73756666696369656e742066756e6473000000000000000000000000000081525060200191505060405180910390fd5b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156125d257600080fd5b505af11580156125e6573d6000803e3d6000fd5b505050506040513d60208110156125fc57600080fd5b810190808051906020019092919050505061267f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b506126b7565b60008390506126b583838373ffffffffffffffffffffffffffffffffffffffff166143c79092919063ffffffff16565b505b5b505050565b6000609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612782576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f6f6e6c7920746f6b656e20636f6e747261637420697320616c6c6f776564000081525060200191505060405180910390fd5b60b160009054906101000a900460ff166127ed576127ec8560af60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905586614498565b5b60019050949350505050565b60a98060000154908060010154908060020154905083565b61286660af60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815460010191905081905582613342565b50565b60af6020528060005260406000206000915090505481565b600060019054906101000a900460ff16806128a0575061289f6143a8565b5b806128b757506000809054906101000a900460ff16155b61290c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806152b6602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561295c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a38015612a3b5760008060016101000a81548160ff0219169083151502179055505b5050565b6000612a4961516c565b609a6040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815250509050612b1b81604001516147cf565b612b29578060000151612b2f565b80602001515b91505090565b600060019054906101000a900460ff1680612b545750612b536143a8565b5b80612b6b57506000809054906101000a900460ff16155b612bc0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806152b6602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612c10576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff161415612cb3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7a65726f2061646472657373000000000000000000000000000000000000000081525060200191505060405180910390fd5b612cd28b73ffffffffffffffffffffffffffffffffffffffff166147f7565b612d44576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6e6f74206120636f6e747261637420616464726573730000000000000000000081525060200191505060405180910390fd5b612d4d33612881565b612d55611a5b565b8a609960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612d9f89611720565b612da8886110bc565b612db187611cc7565b612dba8661194e565b612dc3856113a9565b612dce84848461120b565b612dd78a612e34565b612de08c6135b0565b8015612e015760008060016101000a81548160ff0219169083151502179055505b505050505050505050505050565b60ac602052816000526040600020602052806000526040600020600091509150505481565b612e3c611ebb565b612eae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612f51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7a65726f2061646472657373000000000000000000000000000000000000000081525060200191505060405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ff3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f77726f6e6720616464726573730000000000000000000000000000000000000081525060200191505060405180910390fd5b612ffb61516c565b609a6040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481525050905060008160400151141561310a5781816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061315a565b61311781604001516147cf565b15613159578060200151816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b5b81816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061319a61365c565b81604001818152505080609a60008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050507f26a68c9d9649fb5e7a060a37b211ffd1d9a4fe6eb068bfb33decba647d4ed5398233604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b62093a8081565b6000613318609d60405180606001604052908160008201548152602001600182015481526020016002820154815250506141f8565b905090565b60ae602052816000526040600020602052806000526040600020600091509150505481565b600082118015613391575060af60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211155b613403576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f77726f6e67206465706f7369742069640000000000000000000000000000000081525060200191505060405180910390fd5b61340e338383614498565b6134186001614842565b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156134f557600080fd5b505af1158015613509573d6000803e3d6000fd5b505050506040513d602081101561351f57600080fd5b81019080805190602001909291905050506135a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b6135ac6000614842565b5050565b6135b8611ebb565b61362a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6136338161485f565b50565b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600042905090565b60006136a683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506149a5565b905092915050565b60008082840190508381101561372c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60016066600082825401925050819055506000606654905060008411801561379d575060af60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548411155b61380f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f77726f6e67206465706f7369742069640000000000000000000000000000000081525060200191505060405180910390fd5b600060ac60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868152602001908152602001600020541180156138bf57508260ac60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000205410155b613931576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f696e73756666696369656e742066756e6473000000000000000000000000000081525060200191505060405180910390fd5b61393b8585610d7e565b613990576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806152e4602b913960400191505060405180910390fd5b60008061399e878787614a65565b9150915060008086146139c3576139be83876136ae90919063ffffffff16565b613a15565b60ac60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020545b9050613a7a8160ac60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000205461366490919063ffffffff16565b60ac60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089815260200190815260200160002081905550613ae38160b05461366490919063ffffffff16565b60b081905550600060ac60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000898152602001908152602001600020541415613b9957600060ad60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000898152602001908152602001600020819055505b60008090508515613d4d57613bd8670de0b6b3a7640000613bca613bbb6132e3565b856142ae90919063ffffffff16565b61403d90919063ffffffff16565b9050613bed818361366490919063ffffffff16565b9150609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb613c35612a3f565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613c9f57600080fd5b505af1158015613cb3573d6000803e3d6000fd5b505050506040513d6020811015613cc957600080fd5b8101908080519060200190929190505050613d4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015613df657600080fd5b505af1158015613e0a573d6000803e3d6000fd5b505050506040513d6020811015613e2057600080fd5b8101908080519060200190929190505050613ea3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b878973ffffffffffffffffffffffffffffffffffffffff167f6b4651e8f4162f82274a25e57a29f7ed9156d17078e76dd4d05f04ba08831aa4848460ac60008f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008e8152602001908152602001600020548989604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390a3505050506066548114613fdd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050505050565b600082600201541415613fff57808260000181905550614020565b61400c82600201546147cf565b1561401f57816001015482600001819055505b5b80826001018190555061403161365c565b82600201819055505050565b600061407f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250614d43565b905092915050565b60008114156140fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f73686f756c642062652067726561746572207468616e2030000000000000000081525060200191505060405180910390fd5b6000614108614e09565b905060008560060154141561415c57604051806060016040528085815260200184815260200183815250856000016000820151816000015560208201518160010155604082015181600201559050506141a8565b61417662093a8086600601546136ae90919063ffffffff16565b8111156141a75784600301856000016000820154816000015560018201548160010155600282015481600201559050505b5b604051806060016040528085815260200184815260200183815250856003016000820151816000015560208201518160010155604082015181600201559050508085600601819055505050505050565b600061420782604001516147cf565b61421557816000015161421b565b81602001515b9050919050565b60008060008061423186614334565b9250925092506000828603905060008112156142545760009450505050506142a8565b60008190506142a061427f61427a8561426c85614e11565b6136ae90919063ffffffff16565b614eb3565b61429283886142ae90919063ffffffff16565b61403d90919063ffffffff16565b955050505050505b92915050565b6000808314156142c1576000905061432e565b60008284029050828482816142d257fe5b0414614329576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806152956021913960400191505060405180910390fd5b809150505b92915050565b60008060008061435462093a8086600601546136ae90919063ffffffff16565b61435c614e09565b119050806143815784600001600001548560000160010154866000016002015461439a565b8460030160000154856003016001015486600301600201545b935093509350509193909250565b6000803090506000813b9050600081149250505090565b600033905090565b614493838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050614f15565b505050565b60016066600082825401925050819055506000606654905060008211614509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061522e6024913960400191505060405180910390fd5b6000614513611a41565b5050905060008114801561452e5750600061452c611521565b145b156145a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f656d697373696f6e2073746f707065640000000000000000000000000000000081525060200191505060405180910390fd5b6000806145b087876000614a65565b9150915060006146198660ac60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a8152602001908152602001600020546136ae90919063ffffffff16565b90508060ac60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000898152602001908152602001600020819055506146858660b0546136ae90919063ffffffff16565b60b08190555061469361365c565b60ad60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089815260200190815260200160002081905550868873ffffffffffffffffffffffffffffffffffffffff167f0a5c854539f6e93fcd4a8397bfae8bdb751b4e819840f1c8681e6ad7ff19c5b5888487876040518085815260200184815260200183815260200182815260200194505050505060405180910390a35050505060665481146147c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b50505050565b60006147e762093a80836136ae90919063ffffffff16565b6147ef61365c565b119050919050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561483957506000801b8214155b92505050919050565b8060b160006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156148e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806152086026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000838311158290614a52576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614a175780820151818401526020810190506149fc565b50505050905090810190601f168015614a445780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b600080600060ac60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000205490506000808514614acc5784614ace565b815b90506000806000614b2f60ad60008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002054856115ad565b9250925092506000831115614d3057614b5182866136ae90919063ffffffff16565b60ac60008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b815260200190815260200160002081905550614bba8260b0546136ae90919063ffffffff16565b60b081905550609960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb614c06612a3f565b614c19858761366490919063ffffffff16565b6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015614c8257600080fd5b505af1158015614c96573d6000803e3d6000fd5b505050506040513d6020811015614cac57600080fd5b8101908080519060200190929190505050614d2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b8181965096505050505050935093915050565b60008083118290614def576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015614db4578082015181840152602081019050614d99565b50505050905090810190601f168015614de15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581614dfb57fe5b049050809150509392505050565b600042905090565b600080821415614e245760009050614eae565b6000828302905082838281614e3557fe5b0414614ea9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f457874656e6465644d6174683a207371756172696e67206f766572666c6f770081525060200191505060405180910390fd5b809150505b919050565b60006003821115614f02578190506000600160028481614ecf57fe5b040190505b81811015614efc57809150600281828581614eeb57fe5b040181614ef457fe5b049050614ed4565b50614f10565b60008214614f0f57600190505b5b919050565b614f348273ffffffffffffffffffffffffffffffffffffffff166147f7565b614fa6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310614ff55780518252602082019150602081019050602083039250614fd2565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114615057576040519150601f19603f3d011682016040523d82523d6000602084013e61505c565b606091505b5091509150816150d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b60008151111561515a578080602001905160208110156150f357600080fd5b8101908080519060200190929190505050615159576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180615336602a913960400191505060405180910390fd5b5b50505050565b604e806151ba83390190565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152509056fe6080604052604051604e380380604e83398181016040526020811015602357600080fd5b81019080805190602001909291905050508073ffffffffffffffffffffffffffffffffffffffff16fffe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573736465706f73697420616d6f756e742073686f756c64206265206d6f7265207468616e203073686f756c64206265206c657373207468616e206f7220657175616c20746f20612068616c66206f6620746865206d6178696d756d20656d697373696f6e2072617465536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a656463616e206e6f7420776974686472617720647572696e6720696e697469616c206c6f636b20706572696f6473686f756c64206265206c657373207468616e206f7220657175616c20746f20312065746865725361666545524332303a204552433230206f7065726174696f6e20646964206e6f74207375636365656473686f756c646e27742062652067726561746572207468616e2033302064617973a265627a7a72315820f91215af907485e3a0a3bccd5f88ab05bcdf2f37f223fe0c77be10eae8e294f364736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x27F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B53CCB3 GT PUSH2 0x15C JUMPI DUP1 PUSH4 0xC3BD8FD0 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xDB51EF92 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xDB51EF92 EQ PUSH2 0xC02 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0xC20 JUMPI DUP1 PUSH4 0xE0648A28 EQ PUSH2 0xC3E JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0xCA0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xCD8 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xD1C JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0xC3BD8FD0 EQ PUSH2 0x9A1 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x9F9 JUMPI DUP1 PUSH4 0xC5401CE3 EQ PUSH2 0xA3D JUMPI DUP1 PUSH4 0xCA758993 EQ PUSH2 0xA87 JUMPI DUP1 PUSH4 0xCBF1304D EQ PUSH2 0xB5C JUMPI DUP1 PUSH4 0xD6463151 EQ PUSH2 0xBBE JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x97559CDC GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x97559CDC EQ PUSH2 0x7D2 JUMPI DUP1 PUSH4 0x9EE679E8 EQ PUSH2 0x7F0 JUMPI DUP1 PUSH4 0x9FC314C8 EQ PUSH2 0x81E JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x88C JUMPI DUP1 PUSH4 0xB4A86C48 EQ PUSH2 0x947 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x973 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x8B53CCB3 EQ PUSH2 0x6AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x710 JUMPI DUP1 PUSH4 0x8DF67680 EQ PUSH2 0x75A JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x778 JUMPI DUP1 PUSH4 0x94967FA1 EQ PUSH2 0x79A JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x5E9E230D GT PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x74949B6D GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x74949B6D EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x75FA901B EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x63A JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0x8235C378 EQ PUSH2 0x662 JUMPI DUP1 PUSH4 0x868867B5 EQ PUSH2 0x680 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x5E9E230D EQ PUSH2 0x504 JUMPI DUP1 PUSH4 0x60C251C1 EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0x60D4FFB0 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5D6 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x294A5B04 GT PUSH2 0x247 JUMPI DUP1 PUSH4 0x294A5B04 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0x2C3144DA EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0x41682990 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x436CC3D6 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x47E318DE EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x522EA5E2 EQ PUSH2 0x4E6 JUMPI PUSH2 0x27F JUMP JUMPDEST DUP1 PUSH4 0x3D6D343 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xE559215 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x18194359 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x18CCA7A6 EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x224313FA EQ PUSH2 0x3D2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28C PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE59 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x120B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44A PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x13A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A4 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C2 PUSH2 0x1509 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4EE PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50C PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x538 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x584 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1720 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DE PUSH2 0x1813 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x194E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x616 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x642 PUSH2 0x1A5B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64C PUSH2 0x1B62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66A PUSH2 0x1B68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1CC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1E32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x718 PUSH2 0x1E57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x762 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x780 PUSH2 0x1EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F1A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7DA PUSH2 0x1F2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x81C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F65 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x88A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x8E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x8FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x91D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP2 SWAP3 SWAP4 SWAP1 POP POP POP PUSH2 0x26BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94F PUSH2 0x27F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x989 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2811 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA3B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2881 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA45 PUSH2 0x2A3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB5A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x160 DUP2 LT ISZERO PUSH2 0xA9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2B35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC00 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2E34 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0A PUSH2 0x32DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC28 PUSH2 0x32E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x331D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xCB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3342 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD1A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x35B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD24 PUSH2 0x3636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xA6 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDEB PUSH1 0xAD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDDD PUSH2 0x365C JUMP JUMPDEST PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xDF5 PUSH2 0x1F2B JUMP JUMPDEST DUP2 LT ISZERO SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9A DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xAE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xF24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7769746864726177616C207761736E2774207265717565737465640000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF2E PUSH2 0x365C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF4C PUSH2 0xF3D PUSH2 0x1573 JUMP JUMPDEST DUP5 PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0xFC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F6F206561726C790000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDE PUSH2 0xFCF PUSH2 0x1E81 JUMP JUMPDEST DUP3 PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 LT PUSH2 0x1052 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F6F206C617465000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xAE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x10B5 CALLER DUP7 DUP7 PUSH1 0x0 PUSH2 0x3736 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10C4 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x1136 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x278D00 DUP2 GT ISZERO PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5360 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x119D PUSH1 0xA0 DUP3 PUSH2 0x3FE4 JUMP JUMPDEST PUSH32 0xB1EFFBB8DC5CFA97751137110A061198891986F1567677E11EC9449743180F74 DUP2 CALLER PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x1213 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x1285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12A1 PUSH1 0x2 PUSH8 0x214E8348C4F0000 PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0x12F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x43 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5252 PUSH1 0x43 SWAP2 CODECOPY PUSH1 0x60 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1311 DUP4 DUP4 DUP4 PUSH1 0xB2 PUSH2 0x4087 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xDDF30262673035378258D8AAB83A68D6D8B8E45E5510D3B295FCC7CD65C6378A DUP4 DUP4 DUP4 CALLER PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x13B1 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x1423 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 GT ISZERO PUSH2 0x1484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x530F PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148F PUSH1 0xA9 DUP3 PUSH2 0x3FE4 JUMP JUMPDEST PUSH32 0xB7B23F70FE41CD9DEBAAA54902F2492C79F94D7582D587844DC12FDC8FC42A2B DUP2 CALLER PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH8 0x214E8348C4F0000 DUP2 JUMP JUMPDEST PUSH1 0x9D DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1556 PUSH1 0xA9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x41F8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A8 PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x41F8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 EQ DUP1 PUSH2 0x15C0 JUMPI POP PUSH1 0x0 DUP6 EQ JUMPDEST ISZERO PUSH2 0x15DE JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP3 SWAP3 POP DUP2 SWAP2 POP DUP1 SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1719 JUMP JUMPDEST PUSH2 0x15F8 DUP6 PUSH2 0x15EA PUSH2 0x365C JUMP JUMPDEST PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x161C JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP3 SWAP3 POP DUP2 SWAP2 POP DUP1 SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1632 DUP3 PUSH1 0xB2 PUSH2 0x4222 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x164E PUSH2 0x163F PUSH2 0x1B68 JUMP JUMPDEST DUP3 PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x166F JUMPI PUSH1 0x0 DUP1 DUP4 DUP3 SWAP3 POP DUP2 SWAP2 POP SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1719 JUMP JUMPDEST PUSH8 0x214E8348C4F0000 DUP2 GT ISZERO PUSH2 0x1681 JUMPI INVALID JUMPDEST PUSH2 0x16CE PUSH8 0xDE0B6B3A7640000 PUSH4 0x1E13380 MUL PUSH2 0x16C0 DUP5 PUSH2 0x16B2 PUSH8 0x214E8348C4F0000 DUP11 PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP PUSH2 0x1715 PUSH8 0xDE0B6B3A7640000 PUSH4 0x1E13380 MUL PUSH2 0x1707 DUP5 PUSH2 0x16F9 DUP6 DUP11 PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1728 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x179A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A5 PUSH1 0x9D DUP3 PUSH2 0x3FE4 JUMP JUMPDEST PUSH32 0xC8242DC5446855370B781ABBFC5D882AF1D1A3CC29143216ABA3558FEB0CE925 DUP2 CALLER PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x181B PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x188D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1956 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x19C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19D3 PUSH1 0xA6 DUP3 PUSH2 0x3FE4 JUMP JUMPDEST PUSH32 0x597B9881536F6A87F60171072E2A2D56C53E5E2C1D72270259008AD4932E61ED DUP2 CALLER PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1A50 PUSH1 0xB2 PUSH2 0x4334 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1A7A JUMPI POP PUSH2 0x1A79 PUSH2 0x43A8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1A91 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1AE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x52B6 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x1B36 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x66 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1B5F JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BE7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1C1A PUSH2 0x1521 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1C30 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C5F PUSH8 0xDE0B6B3A7640000 PUSH2 0x1C51 DUP5 DUP7 PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C7F PUSH1 0x2 PUSH8 0x214E8348C4F0000 PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xB0 SLOAD LT PUSH2 0x1C96 JUMPI DUP1 SWAP5 POP POP POP POP POP PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1CBD DUP3 PUSH2 0x1CAF PUSH1 0xB0 SLOAD DUP5 PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1CCF PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x1D41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE10 DUP2 LT ISZERO PUSH2 0x1DB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73686F756C646E2774206265206C657373207468616E203120686F7572000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DC4 PUSH1 0xA3 DUP3 PUSH2 0x3FE4 JUMP JUMPDEST PUSH32 0x3A963FA1D1D0DA205F1AE9869AA14BF4FF7A4585EFA819B0C94326B4A3E1E228 DUP2 CALLER PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xAD PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB6 PUSH1 0xA3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x41F8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EFE PUSH2 0x43BF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F27 CALLER DUP4 DUP4 PUSH1 0x1 PUSH2 0x3736 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F60 PUSH1 0xA6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x41F8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x1FB4 JUMPI POP PUSH1 0xAF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x2026 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E67206465706F73697420696400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x202E PUSH2 0x365C JUMP JUMPDEST PUSH1 0xAE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE670E4E82118D22A1F9EE18920455EBC958BAE26A90A05D31D3378788B1B0E44 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x20D1 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x2143 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x21AC JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x221E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420612076616C696420726563697069656E740000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x2294 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x616D6F756E742073686F756C642062652067726561746572207468616E203000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x236B JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP PUSH2 0x2366 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2310 SWAP1 PUSH2 0x5160 JUMP JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 DUP3 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x2361 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP POP JUMPDEST PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2685 JUMPI PUSH1 0x0 PUSH2 0x24B1 PUSH1 0xB0 SLOAD PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2468 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x247C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2529 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x267F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E73666572206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x26B7 JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP PUSH2 0x26B5 DUP4 DUP4 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x43C7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2782 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F6E6C7920746F6B656E20636F6E747261637420697320616C6C6F7765640000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x27ED JUMPI PUSH2 0x27EC DUP6 PUSH1 0xAF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE DUP7 PUSH2 0x4498 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xA9 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x2866 PUSH1 0xAF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE DUP3 PUSH2 0x3342 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xAF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x28A0 JUMPI POP PUSH2 0x289F PUSH2 0x43A8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x28B7 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x290C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x52B6 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x295C JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 ISZERO PUSH2 0x2A3B JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A49 PUSH2 0x516C JUMP JUMPDEST PUSH1 0x9A PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x2B1B DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x47CF JUMP JUMPDEST PUSH2 0x2B29 JUMPI DUP1 PUSH1 0x0 ADD MLOAD PUSH2 0x2B2F JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2B54 JUMPI POP PUSH2 0x2B53 PUSH2 0x43A8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2B6B JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2BC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x52B6 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x2C10 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2CB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7A65726F20616464726573730000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2CD2 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x47F7 JUMP JUMPDEST PUSH2 0x2D44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F74206120636F6E7472616374206164647265737300000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D4D CALLER PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x2D55 PUSH2 0x1A5B JUMP JUMPDEST DUP11 PUSH1 0x99 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2D9F DUP10 PUSH2 0x1720 JUMP JUMPDEST PUSH2 0x2DA8 DUP9 PUSH2 0x10BC JUMP JUMPDEST PUSH2 0x2DB1 DUP8 PUSH2 0x1CC7 JUMP JUMPDEST PUSH2 0x2DBA DUP7 PUSH2 0x194E JUMP JUMPDEST PUSH2 0x2DC3 DUP6 PUSH2 0x13A9 JUMP JUMPDEST PUSH2 0x2DCE DUP5 DUP5 DUP5 PUSH2 0x120B JUMP JUMPDEST PUSH2 0x2DD7 DUP11 PUSH2 0x2E34 JUMP JUMPDEST PUSH2 0x2DE0 DUP13 PUSH2 0x35B0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E01 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xAC PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2E3C PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x2EAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2F51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7A65726F20616464726573730000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2FF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E67206164647265737300000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FFB PUSH2 0x516C JUMP JUMPDEST PUSH1 0x9A PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 ADD MLOAD EQ ISZERO PUSH2 0x310A JUMPI DUP2 DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x315A JUMP JUMPDEST PUSH2 0x3117 DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x47CF JUMP JUMPDEST ISZERO PUSH2 0x3159 JUMPI DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP JUMPDEST JUMPDEST DUP2 DUP2 PUSH1 0x20 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x319A PUSH2 0x365C JUMP JUMPDEST DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x9A PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH32 0x26A68C9D9649FB5E7A060A37B211FFD1D9A4FE6EB068BFB33DECBA647D4ED539 DUP3 CALLER PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3318 PUSH1 0x9D PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x41F8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xAE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x3391 JUMPI POP PUSH1 0xAF PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO JUMPDEST PUSH2 0x3403 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E67206465706F73697420696400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x340E CALLER DUP4 DUP4 PUSH2 0x4498 JUMP JUMPDEST PUSH2 0x3418 PUSH1 0x1 PUSH2 0x4842 JUMP JUMPDEST PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3509 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x351F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x35A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E73666572206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x35AC PUSH1 0x0 PUSH2 0x4842 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x35B8 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x362A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3633 DUP2 PUSH2 0x485F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36A6 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x49A5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x372C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x66 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x66 SLOAD SWAP1 POP PUSH1 0x0 DUP5 GT DUP1 ISZERO PUSH2 0x379D JUMPI POP PUSH1 0xAF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP5 GT ISZERO JUMPDEST PUSH2 0x380F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77726F6E67206465706F73697420696400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xAC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT DUP1 ISZERO PUSH2 0x38BF JUMPI POP DUP3 PUSH1 0xAC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO JUMPDEST PUSH2 0x3931 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x393B DUP6 DUP6 PUSH2 0xD7E JUMP JUMPDEST PUSH2 0x3990 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x52E4 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x399E DUP8 DUP8 DUP8 PUSH2 0x4A65 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP1 DUP7 EQ PUSH2 0x39C3 JUMPI PUSH2 0x39BE DUP4 DUP8 PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3A15 JUMP JUMPDEST PUSH1 0xAC PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD JUMPDEST SWAP1 POP PUSH2 0x3A7A DUP2 PUSH1 0xAC PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xAC PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3AE3 DUP2 PUSH1 0xB0 SLOAD PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xAC PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x3B99 JUMPI PUSH1 0x0 PUSH1 0xAD PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP DUP6 ISZERO PUSH2 0x3D4D JUMPI PUSH2 0x3BD8 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3BCA PUSH2 0x3BBB PUSH2 0x32E3 JUMP JUMPDEST DUP6 PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x3BED DUP2 DUP4 PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x3C35 PUSH2 0x2A3F JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3D4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E73666572206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP11 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E0A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3EA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E73666572206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6B4651E8F4162F82274A25E57A29F7ED9156D17078E76DD4D05F04BA08831AA4 DUP5 DUP5 PUSH1 0xAC PUSH1 0x0 DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH1 0x66 SLOAD DUP2 EQ PUSH2 0x3FDD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 ADD SLOAD EQ ISZERO PUSH2 0x3FFF JUMPI DUP1 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x4020 JUMP JUMPDEST PUSH2 0x400C DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x47CF JUMP JUMPDEST ISZERO PUSH2 0x401F JUMPI DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x4031 PUSH2 0x365C JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x4D43 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x40FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73686F756C642062652067726561746572207468616E20300000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4108 PUSH2 0x4E09 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x6 ADD SLOAD EQ ISZERO PUSH2 0x415C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x41A8 JUMP JUMPDEST PUSH2 0x4176 PUSH3 0x93A80 DUP7 PUSH1 0x6 ADD SLOAD PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x41A7 JUMPI DUP5 PUSH1 0x3 ADD DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP DUP6 PUSH1 0x3 ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP1 DUP6 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4207 DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x47CF JUMP JUMPDEST PUSH2 0x4215 JUMPI DUP2 PUSH1 0x0 ADD MLOAD PUSH2 0x421B JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x4231 DUP7 PUSH2 0x4334 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP3 DUP7 SUB SWAP1 POP PUSH1 0x0 DUP2 SLT ISZERO PUSH2 0x4254 JUMPI PUSH1 0x0 SWAP5 POP POP POP POP POP PUSH2 0x42A8 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x42A0 PUSH2 0x427F PUSH2 0x427A DUP6 PUSH2 0x426C DUP6 PUSH2 0x4E11 JUMP JUMPDEST PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x4EB3 JUMP JUMPDEST PUSH2 0x4292 DUP4 DUP9 PUSH2 0x42AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x403D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x42C1 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x432E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x42D2 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x4329 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5295 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x4354 PUSH3 0x93A80 DUP7 PUSH1 0x6 ADD SLOAD PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x435C PUSH2 0x4E09 JUMP JUMPDEST GT SWAP1 POP DUP1 PUSH2 0x4381 JUMPI DUP5 PUSH1 0x0 ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH1 0x0 ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH1 0x0 ADD PUSH1 0x2 ADD SLOAD PUSH2 0x439A JUMP JUMPDEST DUP5 PUSH1 0x3 ADD PUSH1 0x0 ADD SLOAD DUP6 PUSH1 0x3 ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH1 0x3 ADD PUSH1 0x2 ADD SLOAD JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4493 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x4F15 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x66 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x66 SLOAD SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x4509 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x522E PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4513 PUSH2 0x1A41 JUMP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ DUP1 ISZERO PUSH2 0x452E JUMPI POP PUSH1 0x0 PUSH2 0x452C PUSH2 0x1521 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x45A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x656D697373696F6E2073746F7070656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x45B0 DUP8 DUP8 PUSH1 0x0 PUSH2 0x4A65 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0x4619 DUP7 PUSH1 0xAC PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xAC PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4685 DUP7 PUSH1 0xB0 SLOAD PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB0 DUP2 SWAP1 SSTORE POP PUSH2 0x4693 PUSH2 0x365C JUMP JUMPDEST PUSH1 0xAD PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA5C854539F6E93FCD4A8397BFAE8BDB751B4E819840F1C8681E6AD7FF19C5B5 DUP9 DUP5 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH1 0x66 SLOAD DUP2 EQ PUSH2 0x47C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47E7 PUSH3 0x93A80 DUP4 PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x47EF PUSH2 0x365C JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x4839 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xB1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x48E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5208 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x4A52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4A17 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x49FC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4A44 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xAC PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP6 EQ PUSH2 0x4ACC JUMPI DUP5 PUSH2 0x4ACE JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4B2F PUSH1 0xAD PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP6 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP4 GT ISZERO PUSH2 0x4D30 JUMPI PUSH2 0x4B51 DUP3 DUP7 PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xAC PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4BBA DUP3 PUSH1 0xB0 SLOAD PUSH2 0x36AE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB0 DUP2 SWAP1 SSTORE POP PUSH1 0x99 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x4C06 PUSH2 0x2A3F JUMP JUMPDEST PUSH2 0x4C19 DUP6 DUP8 PUSH2 0x3664 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4CAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4D2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E73666572206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP2 DUP2 SWAP7 POP SWAP7 POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x4DEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4DB4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D99 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4DE1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x4DFB JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO PUSH2 0x4E24 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x4EAE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP4 MUL SWAP1 POP DUP3 DUP4 DUP3 DUP2 PUSH2 0x4E35 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x4EA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x457874656E6465644D6174683A207371756172696E67206F766572666C6F7700 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x4F02 JUMPI DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP5 DUP2 PUSH2 0x4ECF JUMPI INVALID JUMPDEST DIV ADD SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4EFC JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 DUP2 PUSH2 0x4EEB JUMPI INVALID JUMPDEST DIV ADD DUP2 PUSH2 0x4EF4 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0x4ED4 JUMP JUMPDEST POP PUSH2 0x4F10 JUMP JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x4F0F JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F34 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x47F7 JUMP JUMPDEST PUSH2 0x4FA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x4FF5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x4FD2 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x5057 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x505C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x50D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x515A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5159 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5336 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x4E DUP1 PUSH2 0x51BA DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x4E CODESIZE SUB DUP1 PUSH1 0x4E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573736465706F73697420616D6F756E742073 PUSH9 0x6F756C64206265206D PUSH16 0x7265207468616E203073686F756C6420 PUSH3 0x65206C PUSH6 0x737320746861 PUSH15 0x206F7220657175616C20746F206120 PUSH9 0x616C66206F66207468 PUSH6 0x206D6178696D PUSH22 0x6D20656D697373696F6E2072617465536166654D6174 PUSH9 0x3A206D756C7469706C PUSH10 0x636174696F6E206F7665 PUSH19 0x666C6F77436F6E747261637420696E7374616E PUSH4 0x65206861 PUSH20 0x20616C7265616479206265656E20696E69746961 PUSH13 0x697A656463616E206E6F742077 PUSH10 0x74686472617720647572 PUSH10 0x6E6720696E697469616C KECCAK256 PUSH13 0x6F636B20706572696F6473686F PUSH22 0x6C64206265206C657373207468616E206F7220657175 PUSH2 0x6C20 PUSH21 0x6F20312065746865725361666545524332303A2045 MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x75636365656473686F756C646E27742062652067 PUSH19 0x6561746572207468616E2033302064617973A2 PUSH6 0x627A7A723158 KECCAK256 0xF9 SLT ISZERO 0xAF SWAP1 PUSH21 0x85E3A0A3BCCD5F88AB05BCDF2F37F223FE0C77BE10 0xEA 0xE8 0xE2 SWAP5 RETURN PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "722:24937:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;722:24937:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5492:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18036:226;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18036:226:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4970:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11853:589;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11853:589:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14135:271;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14135:271:8;;;;;;;;;;;;;;;;;:::i;:::-;;16086:311;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16086:311:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5210:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15481:262;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15481:262:8;;;;;;;;;;;;;;;;;:::i;:::-;;4437:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5088:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18336:125;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5364:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17460:135;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19702:771;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19702:771:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13789:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13789:141:8;;;;;;;;;;;;;;;;;:::i;:::-;;1746:137:2;;;:::i;:::-;;15098:198:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15098:198:8;;;;;;;;;;;;;;;;;:::i;:::-;;20530:132;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;769:214:6;;;:::i;:::-;;6127:26:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18899:515;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14624:273;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14624:273:8;;;;;;;;;;;;;;;;;:::i;:::-;;5805:69;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5805:69:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;959:77:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;17676:139:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1310:92:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10644:141:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10644:141:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17895:135;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11087:284;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11087:284:8;;;;;;;;;;;;;;;;;:::i;:::-;;12798:835;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12798:835:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10074:308;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10074:308:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;10074:308:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10074:308:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10074:308:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5615:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8592:106;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8592:106:8;;;;;;;;;;;;;;;;;:::i;:::-;;6040:50;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6040:50:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;741:142:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;741:142:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;18550:246:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7213:1143;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7213:1143:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5698:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5698:65:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16560:666;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16560:666:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;4584:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;17284:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5927:80;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5927:80:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9308:361;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9308:361:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2032:107:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2032:107:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;4661:27:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5492:44;;;;;;;;;;;;;;;;;;;:::o;18036:226::-;18125:4;18141:18;18162:38;18173:12;:21;18186:7;18173:21;;;;;;;;;;;;;;;:26;18195:3;18173:26;;;;;;;;;;;;18162:6;:4;:6::i;:::-;:10;;:38;;;;:::i;:::-;18141:59;;18231:24;:22;:24::i;:::-;18217:10;:38;;18210:45;;;18036:226;;;;:::o;4970:56::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11853:589::-;11942:19;11964:23;:35;11988:10;11964:35;;;;;;;;;;;;;;;:47;12000:10;11964:47;;;;;;;;;;;;11942:69;;12043:1;12029:11;:15;12021:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12086:17;12106:6;:4;:6::i;:::-;12086:26;;12122:15;12140:41;12156:24;:22;:24::i;:::-;12140:11;:15;;:41;;;;:::i;:::-;12122:59;;12212:7;12199:9;:20;;12191:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12263:39;12275:26;:24;:26::i;:::-;12263:7;:11;;:39;;;;:::i;:::-;12251:9;:51;12243:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12375:1;12325:23;:35;12349:10;12325:35;;;;;;;;;;;;;;;:47;12361:10;12325:47;;;;;;;;;;;:51;;;;12386:49;12396:10;12408;12420:7;12429:5;12386:9;:49::i;:::-;11853:589;;;;;:::o;14135:271::-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14231:7:8;14221:6;:17;;14213:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14286:53;14303:27;14332:6;14286:16;:53::i;:::-;14354:45;14380:6;14388:10;14354:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;14135:271;:::o;16086:311::-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16192:24:8;16214:1;4481:10;16192:21;;:24;;;;:::i;:::-;16186:2;:30;;16178:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16298:33;16320:2;16324;16328;16298:7;:21;;:33;;;;;;:::i;:::-;16346:44;16367:2;16371;16375;16379:10;16346:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16086:311;;;:::o;5210:44::-;;;;;;;;;;;;;;;;;;;:::o;15481:262::-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15572:7:8;15562:6;:17;;15554:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15633:48;15650:22;15674:6;15633:16;:48::i;:::-;15696:40;15717:6;15725:10;15696:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;15481:262;:::o;4437:54::-;4481:10;4437:54;:::o;5088:25::-;;;;;;;;;;;;;;;;;;;:::o;18336:125::-;18386:7;18412:42;18431:22;18412:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:42::i;:::-;18405:49;;18336:125;:::o;5364:46::-;;;;;;;;;;;;;;;;;;;:::o;17460:135::-;17515:7;17541:47;17560:27;17541:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:47::i;:::-;17534:54;;17460:135;:::o;19702:771::-;19812:13;19827:17;19846:18;19891:1;19880:7;:12;:33;;;;19912:1;19896:12;:17;19880:33;19876:55;;;19923:1;19926;19929;19915:16;;;;;;;;;;;;;;;;;19876:55;19954:24;19965:12;19954:6;:4;:6::i;:::-;:10;;:24;;;;:::i;:::-;19941:37;;20006:1;19992:10;:15;19988:37;;;20017:1;20020;20023;20009:16;;;;;;;;;;;;;;;;;19988:37;20035:24;20062:37;20087:10;20062:7;:17;;:37;;;;:::i;:::-;20035:64;;20128:50;20149:28;:26;:28::i;:::-;20128:16;:20;;:50;;;;:::i;:::-;20109:69;;20212:1;20192:16;:21;20188:52;;;20223:1;20226;20229:10;20215:25;;;;;;;;;;;;;;;20188:52;4481:10;20257:16;:37;;20250:45;;;;20313:66;20371:7;4374:8;20364:14;20313:46;20348:10;20313:30;4481:10;20313:7;:11;;:30;;;;:::i;:::-;:34;;:46;;;;:::i;:::-;:50;;:66;;;;:::i;:::-;20305:74;;20401:65;20458:7;4374:8;20451:14;20401:45;20435:10;20401:29;20413:16;20401:7;:11;;:29;;;;:::i;:::-;:33;;:45;;;;:::i;:::-;:49;;:65;;;;:::i;:::-;20389:77;;19702:771;;;;;;;:::o;13789:141::-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13848:34:8;13865:8;13875:6;13848:16;:34::i;:::-;13897:26;13904:6;13912:10;13897:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;13789:141;:::o;1746:137:2:-;1163:9;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1844:1;1807:40;;1828:6;;;;;;;;;;;1807:40;;;;;;;;;;;;1874:1;1857:6;;:19;;;;;;;;;;;;;;;;;;1746:137::o;15098:198:8:-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15176:53:8;15193:27;15222:6;15176:16;:53::i;:::-;15244:45;15270:6;15278:10;15244:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;15098:198;:::o;20530:132::-;20583:9;20594:8;20604:9;20632:23;:7;:21;:23::i;:::-;20625:30;;;;;;20530:132;;;:::o;769:214:6:-;1024:12:7;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;975:1:6;959:13;:17;;;;1268:14:7;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;769:214:6;:::o;6127:26:8:-;;;;:::o;18899:515::-;18958:7;18977:19;18999:5;;;;;;;;;;;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18999:19:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18999:19:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18999:19:8;;;;;;;;;;;;;;;;18977:41;;19028:14;19045:19;:17;:19::i;:::-;19028:36;;19088:1;19078:6;:11;19074:25;;;19098:1;19091:8;;;;;;19074:25;19109:14;19126:36;19154:7;19126:23;19142:6;19126:11;:15;;:23;;;;:::i;:::-;:27;;:36;;;;:::i;:::-;19109:53;;19172:34;19209:24;19231:1;4481:10;19209:21;;:24;;;;:::i;:::-;19172:61;;19270:6;19255:11;;:21;19251:85;;19299:26;19292:33;;;;;;;;19251:85;19352:55;19400:6;19352:43;19383:11;;19352:26;:30;;:43;;;;:::i;:::-;:47;;:55;;;;:::i;:::-;19345:62;;;;;;18899:515;;:::o;14624:273::-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14722:7:8;14712:6;:17;;14704:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14773:55;14790:29;14821:6;14773:16;:55::i;:::-;14843:47;14871:6;14879:10;14843:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;14624:273;:::o;5805:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;959:77:2:-;997:7;1023:6;;;;;;;;;;;1016:13;;959:77;:::o;17676:139:8:-;17733:7;17759:49;17778:29;17759:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:49::i;:::-;17752:56;;17676:139;:::o;1310:92:2:-;1350:4;1389:6;;;;;;;;;;;1373:22;;:12;:10;:12::i;:::-;:22;;;1366:29;;1310:92;:::o;10644:141:8:-;10730:48;10740:10;10752;10764:7;10773:4;10730:9;:48::i;:::-;10644:141;;:::o;17895:135::-;17950:7;17976:47;17995:27;17976:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:47::i;:::-;17969:54;;17895:135;:::o;11087:284::-;11174:1;11161:10;:14;:58;;;;;11193:14;:26;11208:10;11193:26;;;;;;;;;;;;;;;;11179:10;:40;;11161:58;11153:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11300:6;:4;:6::i;:::-;11250:23;:35;11274:10;11250:35;;;;;;;;;;;;;;;:47;11286:10;11250:47;;;;;;;;;;;:56;;;;11353:10;11341;11321:43;;;;;;;;;;;;11087:284;:::o;12798:835::-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12925:1:8;12910:17;;:3;:17;;;;:41;;;;;12946:4;12931:20;;:3;:20;;;;12910:41;12902:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13005:1;12995:7;:11;12987:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13074:1;13056:20;;:6;:20;;;13052:575;;;13097:3;:8;;:17;13106:7;13097:17;;;;;;;;;;;;;;;;;;;;;;;13092:132;;13196:7;13205:3;13174:35;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13174:35:8;;;;13092:132;13052:575;;;13262:5;;;;;;;;;;;13244:24;;:6;:24;;;13240:387;;;13284:23;13310:47;13345:11;;13310:5;;;;;;;;;;;:15;;;13334:4;13310:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13310:30:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13310:30:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13310:30:8;;;;;;;;;;;;;;;;:34;;:47;;;;:::i;:::-;13284:73;;13398:7;13379:15;:26;;13371:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13450:5;;;;;;;;;;;:14;;;13465:3;13470:7;13450:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13450:28:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13450:28:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13450:28:8;;;;;;;;;;;;;;;;13442:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13240:387;;;;13529:18;13557:6;13529:35;;13578:38;13603:3;13608:7;13578:11;:24;;;;:38;;;;;:::i;:::-;13240:387;;13052:575;12798:835;;;:::o;10074:308::-;10167:4;10213:5;;;;;;;;;;;10191:28;;:10;:28;;;10183:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10269:6;;;;;;;;;;;10264:91;;10291:53;10300:7;10311:14;:23;10326:7;10311:23;;;;;;;;;;;;;;;;10309:25;;;;;;;;;;10336:7;10291:8;:53::i;:::-;10264:91;10371:4;10364:11;;10074:308;;;;;;:::o;5615:39::-;;;;;;;;;;;;;;;;;;;:::o;8592:106::-;8645:46;8655:14;:26;8670:10;8655:26;;;;;;;;;;;;;;;;8653:28;;;;;;;;;;8683:7;8645;:46::i;:::-;8592:106;:::o;6040:50::-;;;;;;;;;;;;;;;;;:::o;741:142:2:-;1024:12:7;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;815:6:2;806;;:15;;;;;;;;;;;;;;;;;;869:6;;;;;;;;;;;836:40;;865:1;836:40;;;;;;;;;;;;1268:14:7;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;741:142:2;;:::o;18550:246:8:-;18614:7;18633:25;;:::i;:::-;18661:36;18633:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18714:41;18739:5;:15;;;18714:24;:41::i;:::-;:75;;18775:5;:14;;;18714:75;;;18758:5;:14;;;18714:75;18707:82;;;18550:246;:::o;7213:1143::-;1024:12:7;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;7679:1:8;7661:20;;:6;:20;;;;7653:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7716:26;:13;:24;;;:26::i;:::-;7708:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7779:30;7798:10;7779:18;:30::i;:::-;7819:28;:26;:28::i;:::-;7880:13;7857:5;;:37;;;;;;;;;;;;;;;;;;7904:12;7911:4;7904:6;:12::i;:::-;7926:50;7952:23;7926:25;:50::i;:::-;7986:54;8014:25;7986:27;:54::i;:::-;8050:50;8076:23;8050:25;:50::i;:::-;8110:40;8131:18;8110:20;:40::i;:::-;8160:68;8181:14;8197;8213;8160:20;:68::i;:::-;8238;8273:32;8238:34;:68::i;:::-;8316:33;8342:6;8316:25;:33::i;:::-;1268:14:7;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;7213:1143:8;;;;;;;;;;;;:::o;5698:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;16560:666::-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16677:1:8;16657:22;;:8;:22;;;;16649:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16734:4;16714:25;;:8;:25;;;;16706:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16767:25;;:::i;:::-;16795:36;16767:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16864:1;16845:5;:15;;;:20;16841:185;;;16898:8;16881:5;:14;;:25;;;;;;;;;;;16841:185;;;16927:41;16952:5;:15;;;16927:24;:41::i;:::-;16923:103;;;17001:5;:14;;;16984:5;:14;;:31;;;;;;;;;;;16923:103;16841:185;17052:8;17035:5;:14;;:25;;;;;;;;;;;17088:6;:4;:6::i;:::-;17070:5;:15;;:24;;;;;17143:5;17104:36;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17163:56;17198:8;17208:10;17163:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1219:1:2;16560:666:8;:::o;4584:51::-;4629:6;4584:51;:::o;17284:97::-;17320:7;17346:28;17365:8;17346:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:28::i;:::-;17339:35;;17284:97;:::o;5927:80::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9308:361::-;9400:1;9387:10;:14;:58;;;;;9419:14;:26;9434:10;9419:26;;;;;;;;;;;;;;;;9405:10;:40;;9387:58;9379:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9476:41;9485:10;9497;9509:7;9476:8;:41::i;:::-;9527:16;9538:4;9527:10;:16::i;:::-;9561:5;;;;;;;;;;;:18;;;9580:10;9600:4;9607:7;9561:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9561:54:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9561:54:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9561:54:8;;;;;;;;;;;;;;;;9553:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9645:17;9656:5;9645:10;:17::i;:::-;9308:361;;:::o;2032:107:2:-;1163:9;:7;:9::i;:::-;1155:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;:::-;2032:107;:::o;4661:27:8:-;;;;;;;;;;;;;:::o;25357:300::-;25396:7;25598:3;25591:10;;25357:300;:::o;1274:134:1:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;21936:1235:8:-;1409:1:6;1392:13;;:18;;;;;;;;;;;1420:20;1443:13;;1420:36;;22062:1:8;22056:3;:7;:41;;;;;22074:14;:23;22089:7;22074:23;;;;;;;;;;;;;;;;22067:3;:30;;22056:41;22048:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22161:1;22136:8;:17;22145:7;22136:17;;;;;;;;;;;;;;;:22;22154:3;22136:22;;;;;;;;;;;;:26;:63;;;;;22192:7;22166:8;:17;22175:7;22166:17;;;;;;;;;;;;;;;:22;22184:3;22166:22;;;;;;;;;;;;:33;;22136:63;22128:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22240:42;22269:7;22278:3;22240:28;:42::i;:::-;22232:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22341:23;22366:18;22388:28;22394:7;22403:3;22408:7;22388:5;:28::i;:::-;22340:76;;;;22426:14;22454:1;22443:7;:12;:68;;22483:28;22495:15;22483:7;:11;;:28;;;;:::i;:::-;22443:68;;;22458:8;:17;22467:7;22458:17;;;;;;;;;;;;;;;:22;22476:3;22458:22;;;;;;;;;;;;22443:68;22426:85;;22546:34;22573:6;22546:8;:17;22555:7;22546:17;;;;;;;;;;;;;;;:22;22564:3;22546:22;;;;;;;;;;;;:26;;:34;;;;:::i;:::-;22521:8;:17;22530:7;22521:17;;;;;;;;;;;;;;;:22;22539:3;22521:22;;;;;;;;;;;:59;;;;22604:23;22620:6;22604:11;;:15;;:23;;;;:::i;:::-;22590:11;:37;;;;22667:1;22641:8;:17;22650:7;22641:17;;;;;;;;;;;;;;;:22;22659:3;22641:22;;;;;;;;;;;;:27;22637:88;;;22713:1;22684:12;:21;22697:7;22684:21;;;;;;;;;;;;;;;:26;22706:3;22684:26;;;;;;;;;;;:30;;;;22637:88;22734:16;22753:1;22734:20;;22768:7;22764:223;;;22802:30;22824:7;22802:17;22813:5;:3;:5::i;:::-;22802:6;:10;;:17;;;;:::i;:::-;:21;;:30;;;;:::i;:::-;22791:41;;22855:20;22866:8;22855:6;:10;;:20;;;;:::i;:::-;22846:29;;22897:5;;;;;;;;;;;:14;;;22912:33;:31;:33::i;:::-;22947:8;22897:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22897:59:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22897:59:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22897:59:8;;;;;;;;;;;;;;;;22889:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22764:223;23004:5;;;;;;;;;;;:14;;;23019:7;23028:6;23004:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23004:31:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23004:31:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23004:31:8;;;;;;;;;;;;;;;;22996:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23089:3;23080:7;23070:94;;;23094:6;23102:8;23112;:17;23121:7;23112:17;;;;;;;;;;;;;;;:22;23130:3;23112:22;;;;;;;;;;;;23136:15;23153:10;23070:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1466:1:6;;;;1501:13;;1485:12;:29;1477:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21936:1235:8;;;;;:::o;24282:359::-;24396:1;24376:6;:16;;;:21;24372:191;;;24431:9;24413:6;:15;;:27;;;;24372:191;;;24461:42;24486:6;:16;;;24461:24;:42::i;:::-;24457:106;;;24537:6;:15;;;24519:6;:15;;:33;;;;24457:106;24372:191;24590:9;24572:6;:15;;:27;;;;24628:6;:4;:6::i;:::-;24609;:16;;:25;;;;24282:359;;:::o;3073:130:1:-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3150:46;;3073:130;;;;:::o;705:526:12:-;816:1;810:2;:7;;802:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;884:24;911:6;:4;:6::i;:::-;884:33;;949:1;931:4;:14;;;:19;927:210;;;983:18;;;;;;;;990:2;983:18;;;;994:2;983:18;;;;998:2;983:18;;;966:4;:14;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;927:210;;;1041:38;338:6;1041:4;:14;;;:18;;:38;;;;:::i;:::-;1022:16;:57;1018:119;;;1112:4;:14;;1095:4;:14;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;1018:119;927:210;1163:18;;;;;;;;1170:2;1163:18;;;;1174:2;1163:18;;;;1178:2;1163:18;;;1146:4;:14;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:16;1191:4;:14;;:33;;;;705:526;;;;;:::o;24722:187:8:-;24798:7;24824:42;24849:6;:16;;;24824:24;:42::i;:::-;:78;;24887:6;:15;;;24824:78;;;24869:6;:15;;;24824:78;24817:85;;24722:187;;;:::o;1707:297:12:-;1780:7;1800:9;1811:8;1821:9;1834:19;1848:4;1834:13;:19::i;:::-;1799:54;;;;;;1863:8;1879:1;1874:2;:6;1863:17;;1898:1;1894;:5;1890:19;;;1908:1;1901:8;;;;;;;;1890:19;1919:10;1940:1;1919:23;;1959:38;1973:23;:16;1987:1;1973:9;:2;:7;:9::i;:::-;:13;;:16;;;;:::i;:::-;:21;:23::i;:::-;1959:9;1965:2;1959:1;:5;;:9;;;;:::i;:::-;:13;;:38;;;;:::i;:::-;1952:45;;;;;;;1707:297;;;;;:::o;2159:459:1:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;1287:337:12:-;1353:7;1362:6;1370:7;1389:14;1415:38;338:6;1415:4;:14;;;:18;;:38;;;;:::i;:::-;1406:6;:4;:6::i;:::-;:47;1389:64;;1470:9;:147;;1564:4;:14;;:16;;;1582:4;:14;;:16;;;1600:4;:14;;:16;;;1470:147;;;1495:4;:14;;:16;;;1513:4;:14;;:16;;;1531:4;:14;;:16;;;1470:147;1463:154;;;;;;;1287:337;;;;;:::o;1409:498:7:-;1456:4;1797:12;1820:4;1797:28;;1831:10;1876:4;1864:17;1858:23;;1901:1;1895:2;:7;1888:14;;;;1409:498;:::o;867:96:0:-;912:15;946:10;939:17;;867:96;:::o;662:174:4:-;744:85;763:5;793;:14;;;:23;;;;818:2;822:5;770:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;770:58:4;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;770:58:4;744:18;:85::i;:::-;662:174;;;:::o;20923:672:8:-;1409:1:6;1392:13;;:18;;;;;;;;;;;1420:20;1443:13;;1420:36;;21038:1:8;21028:7;:11;21020:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21091:21;21118:22;:20;:22::i;:::-;21090:50;;;;21171:1;21154:13;:18;:46;;;;;21199:1;21176:19;:17;:19::i;:::-;:24;21154:46;21150:78;;;21202:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21150:78;21239:17;21258:18;21280:22;21286:7;21295:3;21300:1;21280:5;:22::i;:::-;21238:64;;;;21312:18;21333:35;21360:7;21333:8;:17;21342:7;21333:17;;;;;;;;;;;;;;;:22;21351:3;21333:22;;;;;;;;;;;;:26;;:35;;;;:::i;:::-;21312:56;;21403:10;21378:8;:17;21387:7;21378:17;;;;;;;;;;;;;;;:22;21396:3;21378:22;;;;;;;;;;;:35;;;;21437:24;21453:7;21437:11;;:15;;:24;;;;:::i;:::-;21423:11;:38;;;;21500:6;:4;:6::i;:::-;21471:12;:21;21484:7;21471:21;;;;;;;;;;;;;;;:26;21493:3;21471:26;;;;;;;;;;;:35;;;;21540:3;21531:7;21521:67;;;21545:7;21554:10;21566:9;21577:10;21521:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1466:1:6;;;;1501:13;;1485:12;:29;1477:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20923:672:8;;;;:::o;24990:160::-;25072:4;25104:39;4629:6;25104:15;:19;;:39;;;;:::i;:::-;25095:6;:4;:6::i;:::-;:48;25088:55;;24990:160;;;:::o;686:610:5:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;25217:76:8:-;25279:7;25270:6;;:16;;;;;;;;;;;;;;;;;;25217:76;:::o;2240:225:2:-;2333:1;2313:22;;:8;:22;;;;2305:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2422:8;2393:38;;2414:6;;;;;;;;;;;2393:38;;;;;;;;;;;;2450:8;2441:6;;:17;;;;;;;;;;;;;;;;;;2240:225;:::o;1732:187:1:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;23525:651:8:-;23603:7;23612;23631:22;23656:8;:15;23665:5;23656:15;;;;;;;;;;;;;;;:20;23672:3;23656:20;;;;;;;;;;;;23631:45;;23686:14;23714:1;23703:7;:12;:39;;23735:7;23703:39;;;23718:14;23703:39;23686:56;;23753:13;23768:17;23787:18;23809:52;23828:12;:19;23841:5;23828:19;;;;;;;;;;;;;;;:24;23848:3;23828:24;;;;;;;;;;;;23854:6;23809:18;:52::i;:::-;23752:109;;;;;;23883:1;23875:5;:9;23871:259;;;23923:29;23942:9;23923:14;:18;;:29;;;;:::i;:::-;23900:8;:15;23909:5;23900:15;;;;;;;;;;;;;;;:20;23916:3;23900:20;;;;;;;;;;;:52;;;;23980:26;23996:9;23980:11;;:15;;:26;;;;:::i;:::-;23966:11;:40;;;;24028:5;;;;;;;;;;;:14;;;24043:33;:31;:33::i;:::-;24078:20;24088:9;24078:5;:9;;:20;;;;:::i;:::-;24028:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24028:71:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;24028:71:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24028:71:8;;;;;;;;;;;;;;;;24020:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23871:259;24147:9;24158:10;24139:30;;;;;;;;;23525:651;;;;;;:::o;3718:338:1:-;3804:7;3901:1;3897;:5;3904:12;3889:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3889:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;3927:17;;4048:1;4041:8;;;3718:338;;;;;:::o;2068:300:12:-;2107:7;2309:3;2302:10;;2068:300;:::o;125:227:11:-;173:7;201:1;196;:6;192:45;;;225:1;218:8;;;;192:45;246:9;262:1;258;:5;246:17;;290:1;285;281;:5;;;;;;:10;273:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;344:1;337:8;;;125:227;;;;:::o;425:292::-;470:6;496:1;492;:5;488:223;;;517:1;513:5;;532:6;549:1;545;541;:5;;;;;;:9;532:18;;564:89;575:1;571;:5;564:89;;;600:1;596:5;;637:1;632;628;624;:5;;;;;;:9;623:15;;;;;;619:19;;564:89;;;488:223;;;;678:1;673;:6;669:42;;699:1;695:5;;669:42;488:223;425:292;;;:::o;2666:1095:4:-;3261:27;3269:5;3261:25;;;:27::i;:::-;3253:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;3436:19;;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:4;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:4;;;;3479:7;3471:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:1;3538:10;:17;:21;3534:221;;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3667:30:4;;;;;;;;;;;;;;;;3659:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3534:221;2666:1095;;;;:::o;722:24937:8:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "4285800",
								"executionCost": "4923",
								"totalCost": "4290723"
							},
							"external": {
								"MAX_EMISSION_RATE()": "317",
								"PARAM_UPDATE_DELAY()": "249",
								"balances(address,uint256)": "1394",
								"claimTokens(address,address,uint256)": "infinite",
								"deposit(uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"depositDates(address,uint256)": "1307",
								"fee()": "infinite",
								"feeParam()": "2817",
								"getAccruedEmission(uint256,uint256)": "infinite",
								"getSigmoidParameters()": "infinite",
								"getSupplyBasedEmissionRate()": "infinite",
								"initialize()": "infinite",
								"initialize(address)": "infinite",
								"initialize(address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,int256,uint256)": "infinite",
								"isOwner()": "1225",
								"lastDepositIds(address)": "1214",
								"liquidityProvidersRewardAddress()": "infinite",
								"liquidityProvidersRewardAddressParam()": "2870",
								"lockAfterStakeDuration()": "infinite",
								"lockAfterStakeDurationParam()": "2730",
								"lockAfterStakeDurationPassed(address,uint256)": "infinite",
								"makeForcedWithdrawal(uint256,uint256)": "infinite",
								"makeRequestedWithdrawal(uint256,uint256)": "infinite",
								"onTokenTransfer(address,uint256,bytes)": "infinite",
								"owner()": "1129",
								"renounceOwnership()": "24466",
								"requestWithdrawal(uint256)": "22994",
								"setFee(uint256)": "infinite",
								"setLiquidityProvidersRewardAddress(address)": "infinite",
								"setLockAfterStakeDuration(uint256)": "infinite",
								"setSigmoidParameters(uint256,int256,uint256)": "infinite",
								"setTotalSupplyFactor(uint256)": "infinite",
								"setWithdrawalLockDuration(uint256)": "infinite",
								"setWithdrawalUnlockDuration(uint256)": "infinite",
								"token()": "1207",
								"totalStaked()": "1116",
								"totalSupplyFactor()": "infinite",
								"totalSupplyFactorParam()": "2816",
								"transferOwnership(address)": "infinite",
								"withdrawalLockDuration()": "infinite",
								"withdrawalLockDurationParam()": "2751",
								"withdrawalRequestsDates(address,uint256)": "1349",
								"withdrawalUnlockDuration()": "infinite",
								"withdrawalUnlockDurationParam()": "2729"
							},
							"internal": {
								"_deposit(address,uint256,uint256)": "infinite",
								"_getUintParamValue(struct EasyStaking.UintParam memory)": "infinite",
								"_mint(address,uint256,uint256)": "infinite",
								"_now()": "22",
								"_paramUpdateDelayElapsed(uint256)": "infinite",
								"_setLocked(bool)": "20878",
								"_updateUintParam(struct EasyStaking.UintParam storage pointer,uint256)": "infinite",
								"_withdraw(address,uint256,uint256,bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 722,
									"end": 25659,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 722,
									"end": 25659,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 722,
									"end": 25659,
									"name": "MSTORE"
								},
								{
									"begin": 722,
									"end": 25659,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 722,
									"end": 25659,
									"name": "DUP1"
								},
								{
									"begin": 722,
									"end": 25659,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 722,
									"end": 25659,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 722,
									"end": 25659,
									"name": "CODECOPY"
								},
								{
									"begin": 722,
									"end": 25659,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 722,
									"end": 25659,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f91215af907485e3a0a3bccd5f88ab05bcdf2f37f223fe0c77be10eae8e294f364736f6c63430005100032",
									".code": [
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "MSTORE"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "POP"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "LT"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "SHR"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "8B53CCB3"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "GT"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "C3BD8FD0"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "GT"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "DB51EF92"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "GT"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "DB51EF92"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "DDCA3F43"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "E0648A28"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "E2BBB158"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "FC0C546A"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMP"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "C3BD8FD0"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "C4D66DE8"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "C5401CE3"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "CA758993"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "CBF1304D"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "D6463151"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMP"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "97559CDC"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "GT"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "97559CDC"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "9EE679E8"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "9FC314C8"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "A4C0ED36"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "B4A86C48"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "B6B55F25"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMP"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "8B53CCB3"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "8DF67680"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "94967FA1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMP"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "5E9E230D"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "GT"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "74949B6D"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "GT"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "74949B6D"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "75FA901B"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "8129FC1C"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "817B1CD2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "8235C378"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "868867B5"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMP"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "5E9E230D"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "60C251C1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "60D4FFB0"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "69FE0E2D"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMP"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "294A5B04"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "GT"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "294A5B04"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "2C3144DA"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "41682990"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "436CC3D6"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "47E318DE"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "522EA5E2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMP"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "3D6D343"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "E559215"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "18194359"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "18CCA7A6"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "224313FA"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "EQ"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPI"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "REVERT"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "JUMPDEST"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "JUMPDEST"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "MLOAD"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "DUP1"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "DUP5"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "DUP2"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "MSTORE"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "ADD"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "DUP4"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "DUP2"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "MSTORE"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "ADD"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "DUP3"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "DUP2"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "MSTORE"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "ADD"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "SWAP4"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "POP"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "POP"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "POP"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "POP"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "MLOAD"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "DUP1"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "SWAP2"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "SUB"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "SWAP1"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "RETURN"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "JUMPDEST"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "DUP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "DUP2"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "ADD"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "DUP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "DUP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "AND"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "ADD"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP3"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP2"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "DUP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "ADD"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP3"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP2"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "POP"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "POP"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "POP"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "JUMPDEST"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "MLOAD"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "DUP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "DUP3"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "ISZERO"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "ISZERO"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "ISZERO"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "ISZERO"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "DUP2"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "MSTORE"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "ADD"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP2"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "POP"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "POP"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "MLOAD"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "DUP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP2"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SUB"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP1"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "RETURN"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "JUMPDEST"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "JUMPDEST"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "MLOAD"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DUP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DUP5"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "AND"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "AND"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DUP2"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "MSTORE"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "ADD"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DUP4"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "AND"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "AND"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DUP2"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "MSTORE"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "ADD"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DUP3"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DUP2"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "MSTORE"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "ADD"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SWAP4"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "POP"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "POP"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "POP"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "POP"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "MLOAD"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DUP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SWAP2"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SUB"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SWAP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "RETURN"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "JUMPDEST"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "DUP1"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "DUP2"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "ADD"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "SWAP1"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "DUP1"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "DUP1"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "SWAP1"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "ADD"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "SWAP1"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "SWAP3"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "SWAP2"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "SWAP1"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "DUP1"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "SWAP1"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "ADD"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "SWAP1"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "SWAP3"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "SWAP2"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "SWAP1"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "POP"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "POP"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "POP"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "JUMPDEST"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "STOP"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "JUMPDEST"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "DUP1"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "DUP2"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "ADD"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "SWAP1"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "DUP1"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "DUP1"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "SWAP1"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "ADD"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "SWAP1"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "SWAP3"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "SWAP2"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "SWAP1"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "POP"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "POP"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "POP"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "JUMPDEST"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "STOP"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "JUMPDEST"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "DUP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "DUP2"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "ADD"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "DUP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "DUP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "ADD"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP3"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP2"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "DUP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "ADD"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP3"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP2"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "DUP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "ADD"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP3"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP2"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "SWAP1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "POP"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "POP"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "POP"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "JUMPDEST"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "STOP"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "JUMPDEST"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "JUMPDEST"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "MLOAD"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "DUP1"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "DUP5"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "DUP2"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "MSTORE"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "ADD"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "DUP4"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "DUP2"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "MSTORE"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "ADD"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "DUP3"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "DUP2"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "MSTORE"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "ADD"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "SWAP4"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "POP"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "POP"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "POP"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "POP"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "MLOAD"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "DUP1"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "SWAP2"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "SUB"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "SWAP1"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "RETURN"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "JUMPDEST"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "DUP1"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "DUP2"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "ADD"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "SWAP1"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "DUP1"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "DUP1"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "SWAP1"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "ADD"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "SWAP1"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "SWAP3"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "SWAP2"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "SWAP1"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "POP"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "POP"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "POP"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "JUMPDEST"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "STOP"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "JUMPDEST"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "JUMPDEST"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "MLOAD"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "DUP1"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "DUP3"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "DUP2"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "MSTORE"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "ADD"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "SWAP2"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "POP"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "POP"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "MLOAD"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "DUP1"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "SWAP2"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "SUB"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "SWAP1"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "RETURN"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "JUMPDEST"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "JUMPDEST"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "MLOAD"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "DUP1"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "DUP5"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "DUP2"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "MSTORE"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "ADD"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "DUP4"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "DUP2"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "MSTORE"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "ADD"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "DUP3"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "DUP2"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "MSTORE"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "ADD"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "SWAP4"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "MLOAD"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "DUP1"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "SWAP2"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "SUB"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "SWAP1"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "RETURN"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "JUMPDEST"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "JUMPDEST"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "MLOAD"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "DUP1"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "DUP3"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "DUP2"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "MSTORE"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "ADD"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "SWAP2"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "POP"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "POP"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "MLOAD"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "DUP1"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "SWAP2"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "SUB"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "SWAP1"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "RETURN"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "JUMPDEST"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "JUMPDEST"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "MLOAD"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP1"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP5"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP2"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "MSTORE"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "ADD"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP4"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP2"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "MSTORE"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "ADD"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP3"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP2"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "MSTORE"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "ADD"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SWAP4"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "POP"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "POP"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "POP"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "POP"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "MLOAD"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP1"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SWAP2"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SUB"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SWAP1"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "RETURN"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "JUMPDEST"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "JUMPDEST"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "MLOAD"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "DUP1"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "DUP3"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "DUP2"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "MSTORE"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "ADD"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "SWAP2"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "POP"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "POP"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "MLOAD"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "DUP1"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "SWAP2"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "SUB"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "SWAP1"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "RETURN"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "JUMPDEST"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "DUP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "DUP2"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "ADD"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "DUP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "DUP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "ADD"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP3"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP2"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "DUP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "ADD"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP3"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP2"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "POP"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "POP"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "POP"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "JUMPDEST"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "MLOAD"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "DUP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "DUP5"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "DUP2"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "MSTORE"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "ADD"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "DUP4"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "DUP2"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "MSTORE"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "ADD"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "DUP3"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "DUP2"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "MSTORE"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "ADD"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP4"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "POP"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "POP"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "POP"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "POP"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "MLOAD"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "DUP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP2"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SUB"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP1"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "RETURN"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "JUMPDEST"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "DUP1"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "DUP2"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "ADD"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "SWAP1"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "DUP1"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "DUP1"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "SWAP1"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "ADD"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "SWAP1"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "SWAP3"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "SWAP2"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "SWAP1"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "POP"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "POP"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "POP"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "JUMPDEST"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "STOP"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "JUMPDEST"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "JUMPDEST"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "STOP"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "JUMPDEST"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "DUP1"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "DUP2"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "ADD"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "SWAP1"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "DUP1"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "DUP1"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "SWAP1"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "ADD"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "SWAP1"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "SWAP3"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "SWAP2"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "SWAP1"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "POP"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "POP"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "POP"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "JUMPDEST"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "STOP"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "JUMPDEST"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "JUMPDEST"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "MLOAD"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "DUP1"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "DUP5"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "DUP2"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "MSTORE"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "ADD"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "DUP4"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "DUP2"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "MSTORE"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "ADD"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "DUP3"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "DUP2"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "MSTORE"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "ADD"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "SWAP4"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "POP"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "POP"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "POP"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "POP"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "MLOAD"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "DUP1"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "SWAP2"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "SUB"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "SWAP1"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "RETURN"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "STOP"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "JUMPDEST"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "JUMPDEST"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "MLOAD"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "DUP1"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "DUP3"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "DUP2"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "MSTORE"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "ADD"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "SWAP2"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "POP"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "POP"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "MLOAD"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "DUP1"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "SWAP2"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "SUB"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "SWAP1"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "RETURN"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "JUMPDEST"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "JUMPDEST"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "MLOAD"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "DUP1"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "DUP3"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "DUP2"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "MSTORE"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "ADD"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "SWAP2"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "POP"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "POP"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "MLOAD"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "DUP1"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "SWAP2"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "SUB"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "SWAP1"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "RETURN"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "JUMPDEST"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "DUP1"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "DUP2"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "ADD"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "SWAP1"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "DUP1"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "DUP1"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "SWAP1"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "ADD"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "SWAP1"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "SWAP3"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "SWAP2"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "SWAP1"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "POP"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "POP"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "POP"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "JUMPDEST"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "STOP"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "JUMPDEST"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "DUP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "DUP2"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "ADD"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "DUP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "DUP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "AND"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "ADD"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP3"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP2"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "DUP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "ADD"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP3"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP2"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "JUMPDEST"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "MLOAD"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "DUP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "DUP3"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "DUP2"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "MSTORE"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "ADD"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP2"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "MLOAD"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "DUP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP2"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SUB"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "RETURN"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "JUMPDEST"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "JUMPDEST"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "MLOAD"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "DUP1"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "DUP3"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "DUP2"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "SWAP2"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "MLOAD"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "DUP1"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "SWAP2"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "SUB"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "RETURN"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "JUMPDEST"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "JUMPDEST"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "MLOAD"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "DUP1"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "DUP3"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "DUP2"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "MSTORE"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "ADD"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "SWAP2"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "POP"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "POP"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "MLOAD"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "DUP1"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "SWAP2"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "SUB"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "SWAP1"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "RETURN"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "JUMPDEST"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "JUMPDEST"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "MLOAD"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "DUP1"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "DUP3"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "ISZERO"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "ISZERO"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "ISZERO"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "ISZERO"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "DUP2"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "MSTORE"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "ADD"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "SWAP2"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "POP"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "POP"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "MLOAD"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "DUP1"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "SWAP2"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "SUB"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "SWAP1"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "RETURN"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "JUMPDEST"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "DUP1"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "DUP2"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "ADD"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "SWAP1"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "DUP1"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "DUP1"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "SWAP1"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "ADD"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "SWAP1"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "SWAP3"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "SWAP2"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "SWAP1"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "DUP1"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "SWAP1"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "ADD"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "SWAP1"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "SWAP3"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "SWAP2"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "SWAP1"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "POP"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "POP"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "POP"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "JUMPDEST"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "STOP"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "JUMPDEST"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "JUMPDEST"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "MLOAD"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "DUP1"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "DUP3"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "DUP2"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "MSTORE"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "ADD"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "SWAP2"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "POP"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "POP"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "MLOAD"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "DUP1"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "SWAP2"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "SUB"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "SWAP1"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "RETURN"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "JUMPDEST"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "DUP2"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "ADD"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "DUP1"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "ADD"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "SWAP3"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "SWAP2"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "SWAP1"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "JUMPDEST"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "STOP"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "JUMPDEST"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "DUP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "DUP2"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "ADD"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "DUP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "DUP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "AND"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "ADD"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP3"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP2"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "DUP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "AND"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "ADD"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP3"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP2"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "DUP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "ADD"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP3"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP2"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "SWAP1"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "POP"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "POP"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "POP"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "JUMPDEST"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "STOP"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "JUMPDEST"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "DUP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "DUP2"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "ADD"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "DUP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "DUP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "AND"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "ADD"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP3"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP2"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "DUP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "ADD"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP3"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP2"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "DUP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "ADD"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "DUP3"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "DUP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "ADD"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP2"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP3"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP4"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP2"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP3"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP4"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "POP"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "POP"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "POP"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "JUMPDEST"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "MLOAD"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "DUP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "DUP3"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "ISZERO"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "ISZERO"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "ISZERO"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "ISZERO"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "DUP2"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "MSTORE"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "ADD"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP2"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "POP"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "POP"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "MLOAD"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "DUP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP2"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SUB"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP1"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "RETURN"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "JUMPDEST"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "JUMPDEST"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "MLOAD"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "DUP1"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "DUP5"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "DUP2"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "MSTORE"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "ADD"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "DUP4"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "DUP2"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "MSTORE"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "ADD"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "DUP3"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "DUP2"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "MSTORE"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "ADD"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "SWAP4"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "POP"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "POP"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "POP"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "POP"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "MLOAD"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "DUP1"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "SWAP2"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "SUB"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "SWAP1"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "RETURN"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "JUMPDEST"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "DUP1"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "DUP2"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "ADD"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "SWAP1"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "DUP1"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "DUP1"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "SWAP1"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "ADD"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "SWAP1"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "SWAP3"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "SWAP2"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "SWAP1"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "POP"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "POP"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "POP"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "JUMPDEST"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "STOP"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "JUMPDEST"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "DUP1"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "DUP2"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "ADD"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SWAP1"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "DUP1"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "DUP1"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "AND"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SWAP1"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "ADD"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SWAP1"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SWAP3"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SWAP2"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SWAP1"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "POP"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "POP"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "POP"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "JUMPDEST"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "MLOAD"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "DUP1"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "DUP3"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "DUP2"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "MSTORE"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "ADD"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SWAP2"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "POP"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "POP"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "MLOAD"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "DUP1"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SWAP2"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SUB"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SWAP1"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "RETURN"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "JUMPDEST"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "DUP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "DUP2"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "ADD"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SWAP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "DUP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "DUP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "AND"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SWAP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "ADD"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SWAP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SWAP3"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SWAP2"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "SWAP1"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "JUMPDEST"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "STOP"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "JUMPDEST"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "JUMPDEST"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "MLOAD"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "DUP1"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "DUP3"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "AND"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "AND"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "DUP2"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "MSTORE"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "ADD"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "SWAP2"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "POP"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "POP"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "MLOAD"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "DUP1"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "SWAP2"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "SUB"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "SWAP1"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "RETURN"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "JUMPDEST"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "160"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP2"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "AND"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP2"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "AND"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP2"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "AND"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP2"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP2"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP2"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP2"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP2"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP2"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP2"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP2"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "DUP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "ADD"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP3"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP2"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "SWAP1"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "JUMPDEST"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "STOP"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "JUMPDEST"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "DUP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "DUP2"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "ADD"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "DUP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "DUP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "AND"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "ADD"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP3"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP2"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "DUP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "ADD"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP3"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP2"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "POP"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "POP"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "POP"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "JUMPDEST"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "MLOAD"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "DUP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "DUP3"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "DUP2"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "MSTORE"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "ADD"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP2"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "POP"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "POP"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "MLOAD"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "DUP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP2"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SUB"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "RETURN"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "JUMPDEST"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "DUP1"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "DUP2"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "ADD"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "SWAP1"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "DUP1"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "DUP1"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "AND"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "SWAP1"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "ADD"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "SWAP1"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "SWAP3"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "SWAP2"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "SWAP1"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "POP"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "POP"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "POP"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "JUMPDEST"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "STOP"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "JUMPDEST"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "JUMPDEST"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "MLOAD"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "DUP1"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "DUP3"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "DUP2"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "MSTORE"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "ADD"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "SWAP2"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "POP"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "POP"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "MLOAD"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "DUP1"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "SWAP2"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "SUB"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "SWAP1"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "RETURN"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "JUMPDEST"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "JUMPDEST"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "MLOAD"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "DUP1"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "DUP3"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "DUP2"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "MSTORE"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "ADD"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "SWAP2"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "POP"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "POP"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "MLOAD"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "DUP1"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "SWAP2"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "SUB"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "SWAP1"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "RETURN"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "JUMPDEST"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "DUP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "DUP2"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "ADD"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "DUP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "DUP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "AND"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "ADD"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP3"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP2"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "DUP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "ADD"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP3"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP2"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "POP"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "POP"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "POP"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "JUMPDEST"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "MLOAD"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "DUP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "DUP3"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "DUP2"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "MSTORE"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "ADD"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP2"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "POP"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "POP"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "MLOAD"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "DUP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP2"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SUB"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "RETURN"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "JUMPDEST"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "DUP1"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "DUP2"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "ADD"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "SWAP1"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "DUP1"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "DUP1"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "SWAP1"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "ADD"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "SWAP1"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "SWAP3"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "SWAP2"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "SWAP1"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "DUP1"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "SWAP1"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "ADD"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "SWAP1"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "SWAP3"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "SWAP2"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "SWAP1"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "JUMPDEST"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "STOP"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "JUMPDEST"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "DUP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "167"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "167"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "DUP2"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "ADD"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "DUP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "DUP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "AND"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "ADD"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SWAP3"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SWAP2"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "SWAP1"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "POP"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "POP"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "POP"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "JUMPDEST"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "STOP"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "JUMPDEST"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "JUMPDEST"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "MLOAD"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "DUP1"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "DUP3"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "AND"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "AND"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "DUP2"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "MSTORE"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "ADD"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "SWAP2"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "POP"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "POP"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "MLOAD"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "DUP1"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "SWAP2"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "SUB"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "SWAP1"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "RETURN"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "JUMPDEST"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "PUSH",
											"value": "A6"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "DUP1"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "ADD"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "SLOAD"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "SWAP1"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "DUP1"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "ADD"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "SLOAD"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "SWAP1"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "DUP1"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "ADD"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "SLOAD"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "SWAP1"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "POP"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "DUP4"
										},
										{
											"begin": 5492,
											"end": 5536,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "JUMPDEST"
										},
										{
											"begin": 18125,
											"end": 18129,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18141,
											"end": 18159,
											"name": "DUP1"
										},
										{
											"begin": 18162,
											"end": 18200,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 18173,
											"end": 18185,
											"name": "PUSH",
											"value": "AD"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18186,
											"end": 18193,
											"name": "DUP7"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "AND"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "AND"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "DUP2"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "MSTORE"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "ADD"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "SWAP1"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "DUP2"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "MSTORE"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "ADD"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18173,
											"end": 18194,
											"name": "KECCAK256"
										},
										{
											"begin": 18173,
											"end": 18199,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18195,
											"end": 18198,
											"name": "DUP6"
										},
										{
											"begin": 18173,
											"end": 18199,
											"name": "DUP2"
										},
										{
											"begin": 18173,
											"end": 18199,
											"name": "MSTORE"
										},
										{
											"begin": 18173,
											"end": 18199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18173,
											"end": 18199,
											"name": "ADD"
										},
										{
											"begin": 18173,
											"end": 18199,
											"name": "SWAP1"
										},
										{
											"begin": 18173,
											"end": 18199,
											"name": "DUP2"
										},
										{
											"begin": 18173,
											"end": 18199,
											"name": "MSTORE"
										},
										{
											"begin": 18173,
											"end": 18199,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18173,
											"end": 18199,
											"name": "ADD"
										},
										{
											"begin": 18173,
											"end": 18199,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18173,
											"end": 18199,
											"name": "KECCAK256"
										},
										{
											"begin": 18173,
											"end": 18199,
											"name": "SLOAD"
										},
										{
											"begin": 18162,
											"end": 18168,
											"name": "PUSH [tag]",
											"value": "173"
										},
										{
											"begin": 18162,
											"end": 18166,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 18162,
											"end": 18168,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18162,
											"end": 18168,
											"name": "tag",
											"value": "173"
										},
										{
											"begin": 18162,
											"end": 18168,
											"name": "JUMPDEST"
										},
										{
											"begin": 18162,
											"end": 18172,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 18162,
											"end": 18172,
											"name": "SWAP1"
										},
										{
											"begin": 18162,
											"end": 18200,
											"name": "SWAP2"
										},
										{
											"begin": 18162,
											"end": 18200,
											"name": "SWAP1"
										},
										{
											"begin": 18162,
											"end": 18200,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18162,
											"end": 18200,
											"name": "AND"
										},
										{
											"begin": 18162,
											"end": 18200,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18162,
											"end": 18200,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 18162,
											"end": 18200,
											"name": "JUMPDEST"
										},
										{
											"begin": 18141,
											"end": 18200,
											"name": "SWAP1"
										},
										{
											"begin": 18141,
											"end": 18200,
											"name": "POP"
										},
										{
											"begin": 18231,
											"end": 18255,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 18231,
											"end": 18253,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 18231,
											"end": 18255,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18231,
											"end": 18255,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 18231,
											"end": 18255,
											"name": "JUMPDEST"
										},
										{
											"begin": 18217,
											"end": 18227,
											"name": "DUP2"
										},
										{
											"begin": 18217,
											"end": 18255,
											"name": "LT"
										},
										{
											"begin": 18217,
											"end": 18255,
											"name": "ISZERO"
										},
										{
											"begin": 18210,
											"end": 18255,
											"name": "SWAP2"
										},
										{
											"begin": 18210,
											"end": 18255,
											"name": "POP"
										},
										{
											"begin": 18210,
											"end": 18255,
											"name": "POP"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP3"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "SWAP2"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "POP"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "POP"
										},
										{
											"begin": 18036,
											"end": 18262,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "JUMPDEST"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "9A"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DUP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "ADD"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SWAP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SLOAD"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SWAP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "EXP"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SWAP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DIV"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "AND"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SWAP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DUP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "ADD"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SWAP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SLOAD"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SWAP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "EXP"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SWAP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DIV"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "AND"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SWAP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DUP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "ADD"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SLOAD"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "SWAP1"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "POP"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "DUP4"
										},
										{
											"begin": 4970,
											"end": 5026,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "JUMPDEST"
										},
										{
											"begin": 11942,
											"end": 11961,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11964,
											"end": 11987,
											"name": "PUSH",
											"value": "AE"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11988,
											"end": 11998,
											"name": "CALLER"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "AND"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "AND"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "MSTORE"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "MSTORE"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11964,
											"end": 11999,
											"name": "KECCAK256"
										},
										{
											"begin": 11964,
											"end": 12011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12000,
											"end": 12010,
											"name": "DUP5"
										},
										{
											"begin": 11964,
											"end": 12011,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 12011,
											"name": "MSTORE"
										},
										{
											"begin": 11964,
											"end": 12011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 12011,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 12011,
											"name": "SWAP1"
										},
										{
											"begin": 11964,
											"end": 12011,
											"name": "DUP2"
										},
										{
											"begin": 11964,
											"end": 12011,
											"name": "MSTORE"
										},
										{
											"begin": 11964,
											"end": 12011,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11964,
											"end": 12011,
											"name": "ADD"
										},
										{
											"begin": 11964,
											"end": 12011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11964,
											"end": 12011,
											"name": "KECCAK256"
										},
										{
											"begin": 11964,
											"end": 12011,
											"name": "SLOAD"
										},
										{
											"begin": 11942,
											"end": 12011,
											"name": "SWAP1"
										},
										{
											"begin": 11942,
											"end": 12011,
											"name": "POP"
										},
										{
											"begin": 12043,
											"end": 12044,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12029,
											"end": 12040,
											"name": "DUP2"
										},
										{
											"begin": 12029,
											"end": 12044,
											"name": "GT"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "JUMPI"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "MLOAD"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "DUP2"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "MSTORE"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "ADD"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "DUP1"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "DUP1"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "ADD"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "DUP3"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "DUP2"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "SUB"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "DUP3"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "MSTORE"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "DUP2"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "MSTORE"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "ADD"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "DUP1"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "PUSH",
											"value": "7769746864726177616C207761736E2774207265717565737465640000000000"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "DUP2"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "MSTORE"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "POP"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "ADD"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "SWAP2"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "POP"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "POP"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "MLOAD"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "DUP1"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "SWAP2"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "SUB"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "SWAP1"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "REVERT"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 12021,
											"end": 12076,
											"name": "JUMPDEST"
										},
										{
											"begin": 12086,
											"end": 12103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12106,
											"end": 12112,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 12106,
											"end": 12110,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 12106,
											"end": 12112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12106,
											"end": 12112,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 12106,
											"end": 12112,
											"name": "JUMPDEST"
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "SWAP1"
										},
										{
											"begin": 12086,
											"end": 12112,
											"name": "POP"
										},
										{
											"begin": 12122,
											"end": 12137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12140,
											"end": 12181,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 12156,
											"end": 12180,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 12156,
											"end": 12178,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 12156,
											"end": 12180,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12156,
											"end": 12180,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 12156,
											"end": 12180,
											"name": "JUMPDEST"
										},
										{
											"begin": 12140,
											"end": 12151,
											"name": "DUP5"
										},
										{
											"begin": 12140,
											"end": 12155,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 12140,
											"end": 12155,
											"name": "SWAP1"
										},
										{
											"begin": 12140,
											"end": 12181,
											"name": "SWAP2"
										},
										{
											"begin": 12140,
											"end": 12181,
											"name": "SWAP1"
										},
										{
											"begin": 12140,
											"end": 12181,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12140,
											"end": 12181,
											"name": "AND"
										},
										{
											"begin": 12140,
											"end": 12181,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12140,
											"end": 12181,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 12140,
											"end": 12181,
											"name": "JUMPDEST"
										},
										{
											"begin": 12122,
											"end": 12181,
											"name": "SWAP1"
										},
										{
											"begin": 12122,
											"end": 12181,
											"name": "POP"
										},
										{
											"begin": 12212,
											"end": 12219,
											"name": "DUP1"
										},
										{
											"begin": 12199,
											"end": 12208,
											"name": "DUP3"
										},
										{
											"begin": 12199,
											"end": 12219,
											"name": "LT"
										},
										{
											"begin": 12199,
											"end": 12219,
											"name": "ISZERO"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "JUMPI"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "MLOAD"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "DUP2"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "MSTORE"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "ADD"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "DUP1"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "DUP1"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "ADD"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "DUP3"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "DUP2"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "SUB"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "DUP3"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "MSTORE"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "DUP2"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "MSTORE"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "ADD"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "DUP1"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "PUSH",
											"value": "746F6F206561726C790000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "DUP2"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "MSTORE"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "POP"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "ADD"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "SWAP2"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "POP"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "POP"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "MLOAD"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "DUP1"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "SWAP2"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "SUB"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "SWAP1"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "REVERT"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 12191,
											"end": 12233,
											"name": "JUMPDEST"
										},
										{
											"begin": 12263,
											"end": 12302,
											"name": "PUSH [tag]",
											"value": "184"
										},
										{
											"begin": 12275,
											"end": 12301,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 12275,
											"end": 12299,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 12275,
											"end": 12301,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12275,
											"end": 12301,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 12275,
											"end": 12301,
											"name": "JUMPDEST"
										},
										{
											"begin": 12263,
											"end": 12270,
											"name": "DUP3"
										},
										{
											"begin": 12263,
											"end": 12274,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 12263,
											"end": 12274,
											"name": "SWAP1"
										},
										{
											"begin": 12263,
											"end": 12302,
											"name": "SWAP2"
										},
										{
											"begin": 12263,
											"end": 12302,
											"name": "SWAP1"
										},
										{
											"begin": 12263,
											"end": 12302,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 12263,
											"end": 12302,
											"name": "AND"
										},
										{
											"begin": 12263,
											"end": 12302,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12263,
											"end": 12302,
											"name": "tag",
											"value": "184"
										},
										{
											"begin": 12263,
											"end": 12302,
											"name": "JUMPDEST"
										},
										{
											"begin": 12251,
											"end": 12260,
											"name": "DUP3"
										},
										{
											"begin": 12251,
											"end": 12302,
											"name": "LT"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "JUMPI"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "MLOAD"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "DUP2"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "MSTORE"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "ADD"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "DUP1"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "DUP1"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "ADD"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "DUP3"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "DUP2"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "SUB"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "DUP3"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "MSTORE"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "DUP2"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "MSTORE"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "ADD"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "DUP1"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "PUSH",
											"value": "746F6F206C617465000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "DUP2"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "MSTORE"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "POP"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "ADD"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "SWAP2"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "POP"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "POP"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "MLOAD"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "DUP1"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "SWAP2"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "SUB"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "SWAP1"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "REVERT"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 12243,
											"end": 12315,
											"name": "JUMPDEST"
										},
										{
											"begin": 12375,
											"end": 12376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12325,
											"end": 12348,
											"name": "PUSH",
											"value": "AE"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12349,
											"end": 12359,
											"name": "CALLER"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "AND"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "AND"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "DUP2"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "MSTORE"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "ADD"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "SWAP1"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "DUP2"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "MSTORE"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "ADD"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12325,
											"end": 12360,
											"name": "KECCAK256"
										},
										{
											"begin": 12325,
											"end": 12372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12361,
											"end": 12371,
											"name": "DUP8"
										},
										{
											"begin": 12325,
											"end": 12372,
											"name": "DUP2"
										},
										{
											"begin": 12325,
											"end": 12372,
											"name": "MSTORE"
										},
										{
											"begin": 12325,
											"end": 12372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12325,
											"end": 12372,
											"name": "ADD"
										},
										{
											"begin": 12325,
											"end": 12372,
											"name": "SWAP1"
										},
										{
											"begin": 12325,
											"end": 12372,
											"name": "DUP2"
										},
										{
											"begin": 12325,
											"end": 12372,
											"name": "MSTORE"
										},
										{
											"begin": 12325,
											"end": 12372,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12325,
											"end": 12372,
											"name": "ADD"
										},
										{
											"begin": 12325,
											"end": 12372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12325,
											"end": 12372,
											"name": "KECCAK256"
										},
										{
											"begin": 12325,
											"end": 12376,
											"name": "DUP2"
										},
										{
											"begin": 12325,
											"end": 12376,
											"name": "SWAP1"
										},
										{
											"begin": 12325,
											"end": 12376,
											"name": "SSTORE"
										},
										{
											"begin": 12325,
											"end": 12376,
											"name": "POP"
										},
										{
											"begin": 12386,
											"end": 12435,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 12396,
											"end": 12406,
											"name": "CALLER"
										},
										{
											"begin": 12408,
											"end": 12418,
											"name": "DUP7"
										},
										{
											"begin": 12420,
											"end": 12427,
											"name": "DUP7"
										},
										{
											"begin": 12429,
											"end": 12434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12386,
											"end": 12395,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 12386,
											"end": 12435,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12386,
											"end": 12435,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 12386,
											"end": 12435,
											"name": "JUMPDEST"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "POP"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "POP"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "POP"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "POP"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "POP"
										},
										{
											"begin": 11853,
											"end": 12442,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPI"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "REVERT"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 14231,
											"end": 14238,
											"name": "PUSH",
											"value": "278D00"
										},
										{
											"begin": 14221,
											"end": 14227,
											"name": "DUP2"
										},
										{
											"begin": 14221,
											"end": 14238,
											"name": "GT"
										},
										{
											"begin": 14221,
											"end": 14238,
											"name": "ISZERO"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "JUMPI"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "MLOAD"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "DUP2"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "MSTORE"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "ADD"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "DUP1"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "DUP1"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "ADD"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "DUP3"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "DUP2"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "SUB"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "DUP3"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "MSTORE"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "DUP2"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "MSTORE"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "ADD"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "DUP1"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "PUSH data",
											"value": "EFCC4C1BF2D1D2579B900A9DF600F3C0D822D0A6E5EF236F035BFCE4F914EBF5"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "SWAP2"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "CODECOPY"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "ADD"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "SWAP2"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "POP"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "POP"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "MLOAD"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "DUP1"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "SWAP2"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "SUB"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "SWAP1"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "REVERT"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 14213,
											"end": 14276,
											"name": "JUMPDEST"
										},
										{
											"begin": 14286,
											"end": 14339,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 14303,
											"end": 14330,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 14332,
											"end": 14338,
											"name": "DUP3"
										},
										{
											"begin": 14286,
											"end": 14302,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 14286,
											"end": 14339,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14286,
											"end": 14339,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 14286,
											"end": 14339,
											"name": "JUMPDEST"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "PUSH",
											"value": "B1EFFBB8DC5CFA97751137110A061198891986F1567677E11EC9449743180F74"
										},
										{
											"begin": 14380,
											"end": 14386,
											"name": "DUP2"
										},
										{
											"begin": 14388,
											"end": 14398,
											"name": "CALLER"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "MLOAD"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "DUP1"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "DUP4"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "DUP2"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "MSTORE"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "ADD"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "DUP3"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "AND"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "AND"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "DUP2"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "MSTORE"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "ADD"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "SWAP3"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "POP"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "POP"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "POP"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "MLOAD"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "DUP1"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "SWAP2"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "SUB"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "SWAP1"
										},
										{
											"begin": 14354,
											"end": 14399,
											"name": "LOG1"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "POP"
										},
										{
											"begin": 14135,
											"end": 14406,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "197"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "tag",
											"value": "197"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPI"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "REVERT"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 16192,
											"end": 16216,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 16214,
											"end": 16215,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4481,
											"end": 4491,
											"name": "PUSH",
											"value": "214E8348C4F0000"
										},
										{
											"begin": 16192,
											"end": 16213,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 16192,
											"end": 16213,
											"name": "SWAP1"
										},
										{
											"begin": 16192,
											"end": 16216,
											"name": "SWAP2"
										},
										{
											"begin": 16192,
											"end": 16216,
											"name": "SWAP1"
										},
										{
											"begin": 16192,
											"end": 16216,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16192,
											"end": 16216,
											"name": "AND"
										},
										{
											"begin": 16192,
											"end": 16216,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16192,
											"end": 16216,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 16192,
											"end": 16216,
											"name": "JUMPDEST"
										},
										{
											"begin": 16186,
											"end": 16188,
											"name": "DUP4"
										},
										{
											"begin": 16186,
											"end": 16216,
											"name": "GT"
										},
										{
											"begin": 16186,
											"end": 16216,
											"name": "ISZERO"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "PUSH [tag]",
											"value": "202"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "JUMPI"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "MLOAD"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "DUP2"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "MSTORE"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "ADD"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "DUP1"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "DUP1"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "ADD"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "DUP3"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "DUP2"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "SUB"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "DUP3"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "MSTORE"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "DUP2"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "MSTORE"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "ADD"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "DUP1"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "PUSH data",
											"value": "4998DFCCF9AEBF799608E8ABB3A4403D6D01BDD7D35C16885304D7B267AA9576"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "PUSH",
											"value": "43"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "SWAP2"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "CODECOPY"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "ADD"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "SWAP2"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "POP"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "POP"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "MLOAD"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "DUP1"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "SWAP2"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "SUB"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "SWAP1"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "REVERT"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "tag",
											"value": "202"
										},
										{
											"begin": 16178,
											"end": 16288,
											"name": "JUMPDEST"
										},
										{
											"begin": 16298,
											"end": 16331,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 16320,
											"end": 16322,
											"name": "DUP4"
										},
										{
											"begin": 16324,
											"end": 16326,
											"name": "DUP4"
										},
										{
											"begin": 16328,
											"end": 16330,
											"name": "DUP4"
										},
										{
											"begin": 16298,
											"end": 16305,
											"name": "PUSH",
											"value": "B2"
										},
										{
											"begin": 16298,
											"end": 16319,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 16298,
											"end": 16319,
											"name": "SWAP1"
										},
										{
											"begin": 16298,
											"end": 16331,
											"name": "SWAP4"
										},
										{
											"begin": 16298,
											"end": 16331,
											"name": "SWAP3"
										},
										{
											"begin": 16298,
											"end": 16331,
											"name": "SWAP2"
										},
										{
											"begin": 16298,
											"end": 16331,
											"name": "SWAP1"
										},
										{
											"begin": 16298,
											"end": 16331,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16298,
											"end": 16331,
											"name": "AND"
										},
										{
											"begin": 16298,
											"end": 16331,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16298,
											"end": 16331,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 16298,
											"end": 16331,
											"name": "JUMPDEST"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "PUSH",
											"value": "DDF30262673035378258D8AAB83A68D6D8B8E45E5510D3B295FCC7CD65C6378A"
										},
										{
											"begin": 16367,
											"end": 16369,
											"name": "DUP4"
										},
										{
											"begin": 16371,
											"end": 16373,
											"name": "DUP4"
										},
										{
											"begin": 16375,
											"end": 16377,
											"name": "DUP4"
										},
										{
											"begin": 16379,
											"end": 16389,
											"name": "CALLER"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "MLOAD"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "DUP1"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "DUP6"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "DUP2"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "MSTORE"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "ADD"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "DUP5"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "DUP2"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "MSTORE"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "ADD"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "DUP4"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "DUP2"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "MSTORE"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "ADD"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "DUP3"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "AND"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "AND"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "DUP2"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "MSTORE"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "ADD"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "SWAP5"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "POP"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "POP"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "POP"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "POP"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "POP"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "MLOAD"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "DUP1"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "SWAP2"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "SUB"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "SWAP1"
										},
										{
											"begin": 16346,
											"end": 16390,
											"name": "LOG1"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "POP"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "POP"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "POP"
										},
										{
											"begin": 16086,
											"end": 16397,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "JUMPDEST"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "DUP1"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "ADD"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "SLOAD"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "SWAP1"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "DUP1"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "ADD"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "SLOAD"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "SWAP1"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "DUP1"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "ADD"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "SLOAD"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "SWAP1"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "POP"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "DUP4"
										},
										{
											"begin": 5210,
											"end": 5254,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "206"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "tag",
											"value": "206"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPI"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "REVERT"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 15572,
											"end": 15579,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 15562,
											"end": 15568,
											"name": "DUP2"
										},
										{
											"begin": 15562,
											"end": 15579,
											"name": "GT"
										},
										{
											"begin": 15562,
											"end": 15579,
											"name": "ISZERO"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "PUSH [tag]",
											"value": "209"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "JUMPI"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "MLOAD"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "DUP2"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "MSTORE"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "ADD"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "DUP1"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "DUP1"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "ADD"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "DUP3"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "DUP2"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "SUB"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "DUP3"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "MSTORE"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "DUP2"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "MSTORE"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "ADD"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "DUP1"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "PUSH data",
											"value": "DF908F90CDD1684DFAA27AAE3563B8FC031D301853C805A295067181CD132D8D"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "PUSH",
											"value": "27"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "SWAP2"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "CODECOPY"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "ADD"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "SWAP2"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "POP"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "POP"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "MLOAD"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "DUP1"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "SWAP2"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "SUB"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "SWAP1"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "REVERT"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "tag",
											"value": "209"
										},
										{
											"begin": 15554,
											"end": 15623,
											"name": "JUMPDEST"
										},
										{
											"begin": 15633,
											"end": 15681,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 15650,
											"end": 15672,
											"name": "PUSH",
											"value": "A9"
										},
										{
											"begin": 15674,
											"end": 15680,
											"name": "DUP3"
										},
										{
											"begin": 15633,
											"end": 15649,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 15633,
											"end": 15681,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15633,
											"end": 15681,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 15633,
											"end": 15681,
											"name": "JUMPDEST"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "PUSH",
											"value": "B7B23F70FE41CD9DEBAAA54902F2492C79F94D7582D587844DC12FDC8FC42A2B"
										},
										{
											"begin": 15717,
											"end": 15723,
											"name": "DUP2"
										},
										{
											"begin": 15725,
											"end": 15735,
											"name": "CALLER"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "MLOAD"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "DUP1"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "DUP4"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "DUP2"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "MSTORE"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "ADD"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "DUP3"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "AND"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "AND"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "DUP2"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "MSTORE"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "ADD"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "SWAP3"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "POP"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "POP"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "POP"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "MLOAD"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "DUP1"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "SWAP2"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "SUB"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "SWAP1"
										},
										{
											"begin": 15696,
											"end": 15736,
											"name": "LOG1"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "POP"
										},
										{
											"begin": 15481,
											"end": 15743,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "JUMPDEST"
										},
										{
											"begin": 4481,
											"end": 4491,
											"name": "PUSH",
											"value": "214E8348C4F0000"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "DUP2"
										},
										{
											"begin": 4437,
											"end": 4491,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "JUMPDEST"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "PUSH",
											"value": "9D"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "DUP1"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "ADD"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "SLOAD"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "SWAP1"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "DUP1"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "ADD"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "SLOAD"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "SWAP1"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "DUP1"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "ADD"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "SLOAD"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "SWAP1"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "POP"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "DUP4"
										},
										{
											"begin": 5088,
											"end": 5113,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "JUMPDEST"
										},
										{
											"begin": 18386,
											"end": 18393,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 18431,
											"end": 18453,
											"name": "PUSH",
											"value": "A9"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "MLOAD"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "DUP1"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "ADD"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "MSTORE"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "SWAP1"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "DUP2"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "DUP3"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "ADD"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "SLOAD"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "DUP2"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "MSTORE"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "ADD"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "DUP3"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "ADD"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "SLOAD"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "DUP2"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "MSTORE"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "ADD"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "DUP3"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "ADD"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "SLOAD"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "DUP2"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "MSTORE"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "POP"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "POP"
										},
										{
											"begin": 18412,
											"end": 18430,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 18412,
											"end": 18454,
											"name": "JUMPDEST"
										},
										{
											"begin": 18405,
											"end": 18454,
											"name": "SWAP1"
										},
										{
											"begin": 18405,
											"end": 18454,
											"name": "POP"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "SWAP1"
										},
										{
											"begin": 18336,
											"end": 18461,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "JUMPDEST"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH",
											"value": "A3"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP1"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "ADD"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SLOAD"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SWAP1"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP1"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "ADD"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SLOAD"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SWAP1"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP1"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "ADD"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SLOAD"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "SWAP1"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "POP"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "DUP4"
										},
										{
											"begin": 5364,
											"end": 5410,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "JUMPDEST"
										},
										{
											"begin": 17515,
											"end": 17522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 17560,
											"end": 17587,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "MLOAD"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "DUP1"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "ADD"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "MSTORE"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "SWAP1"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "DUP2"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "DUP3"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "ADD"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "SLOAD"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "DUP2"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "MSTORE"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "ADD"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "DUP3"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "ADD"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "SLOAD"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "DUP2"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "MSTORE"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "ADD"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "DUP3"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "ADD"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "SLOAD"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "DUP2"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "MSTORE"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "POP"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "POP"
										},
										{
											"begin": 17541,
											"end": 17559,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 17541,
											"end": 17588,
											"name": "JUMPDEST"
										},
										{
											"begin": 17534,
											"end": 17588,
											"name": "SWAP1"
										},
										{
											"begin": 17534,
											"end": 17588,
											"name": "POP"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "SWAP1"
										},
										{
											"begin": 17460,
											"end": 17595,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "JUMPDEST"
										},
										{
											"begin": 19812,
											"end": 19825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19827,
											"end": 19844,
											"name": "DUP1"
										},
										{
											"begin": 19846,
											"end": 19864,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19891,
											"end": 19892,
											"name": "DUP1"
										},
										{
											"begin": 19880,
											"end": 19887,
											"name": "DUP5"
										},
										{
											"begin": 19880,
											"end": 19892,
											"name": "EQ"
										},
										{
											"begin": 19880,
											"end": 19913,
											"name": "DUP1"
										},
										{
											"begin": 19880,
											"end": 19913,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 19880,
											"end": 19913,
											"name": "JUMPI"
										},
										{
											"begin": 19880,
											"end": 19913,
											"name": "POP"
										},
										{
											"begin": 19912,
											"end": 19913,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19896,
											"end": 19908,
											"name": "DUP6"
										},
										{
											"begin": 19896,
											"end": 19913,
											"name": "EQ"
										},
										{
											"begin": 19880,
											"end": 19913,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 19880,
											"end": 19913,
											"name": "JUMPDEST"
										},
										{
											"begin": 19876,
											"end": 19931,
											"name": "ISZERO"
										},
										{
											"begin": 19876,
											"end": 19931,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 19876,
											"end": 19931,
											"name": "JUMPI"
										},
										{
											"begin": 19923,
											"end": 19924,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19926,
											"end": 19927,
											"name": "DUP1"
										},
										{
											"begin": 19929,
											"end": 19930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "DUP3"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "SWAP3"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "POP"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "DUP2"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "SWAP2"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "POP"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "DUP1"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "SWAP1"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "POP"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "SWAP3"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "POP"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "SWAP3"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "POP"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "SWAP3"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "POP"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 19915,
											"end": 19931,
											"name": "JUMP"
										},
										{
											"begin": 19876,
											"end": 19931,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 19876,
											"end": 19931,
											"name": "JUMPDEST"
										},
										{
											"begin": 19954,
											"end": 19978,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 19965,
											"end": 19977,
											"name": "DUP6"
										},
										{
											"begin": 19954,
											"end": 19960,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 19954,
											"end": 19958,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 19954,
											"end": 19960,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19954,
											"end": 19960,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 19954,
											"end": 19960,
											"name": "JUMPDEST"
										},
										{
											"begin": 19954,
											"end": 19964,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 19954,
											"end": 19964,
											"name": "SWAP1"
										},
										{
											"begin": 19954,
											"end": 19978,
											"name": "SWAP2"
										},
										{
											"begin": 19954,
											"end": 19978,
											"name": "SWAP1"
										},
										{
											"begin": 19954,
											"end": 19978,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19954,
											"end": 19978,
											"name": "AND"
										},
										{
											"begin": 19954,
											"end": 19978,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19954,
											"end": 19978,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 19954,
											"end": 19978,
											"name": "JUMPDEST"
										},
										{
											"begin": 19941,
											"end": 19978,
											"name": "SWAP1"
										},
										{
											"begin": 19941,
											"end": 19978,
											"name": "POP"
										},
										{
											"begin": 20006,
											"end": 20007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19992,
											"end": 20002,
											"name": "DUP2"
										},
										{
											"begin": 19992,
											"end": 20007,
											"name": "EQ"
										},
										{
											"begin": 19988,
											"end": 20025,
											"name": "ISZERO"
										},
										{
											"begin": 19988,
											"end": 20025,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 19988,
											"end": 20025,
											"name": "JUMPI"
										},
										{
											"begin": 20017,
											"end": 20018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20020,
											"end": 20021,
											"name": "DUP1"
										},
										{
											"begin": 20023,
											"end": 20024,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "DUP3"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "SWAP3"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "POP"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "DUP2"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "SWAP2"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "POP"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "DUP1"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "SWAP1"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "POP"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "SWAP3"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "POP"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "SWAP3"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "POP"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "SWAP3"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "POP"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 20009,
											"end": 20025,
											"name": "JUMP"
										},
										{
											"begin": 19988,
											"end": 20025,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 19988,
											"end": 20025,
											"name": "JUMPDEST"
										},
										{
											"begin": 20035,
											"end": 20059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20062,
											"end": 20099,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 20087,
											"end": 20097,
											"name": "DUP3"
										},
										{
											"begin": 20062,
											"end": 20069,
											"name": "PUSH",
											"value": "B2"
										},
										{
											"begin": 20062,
											"end": 20079,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 20062,
											"end": 20079,
											"name": "SWAP1"
										},
										{
											"begin": 20062,
											"end": 20099,
											"name": "SWAP2"
										},
										{
											"begin": 20062,
											"end": 20099,
											"name": "SWAP1"
										},
										{
											"begin": 20062,
											"end": 20099,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20062,
											"end": 20099,
											"name": "AND"
										},
										{
											"begin": 20062,
											"end": 20099,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20062,
											"end": 20099,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 20062,
											"end": 20099,
											"name": "JUMPDEST"
										},
										{
											"begin": 20035,
											"end": 20099,
											"name": "SWAP1"
										},
										{
											"begin": 20035,
											"end": 20099,
											"name": "POP"
										},
										{
											"begin": 20128,
											"end": 20178,
											"name": "PUSH [tag]",
											"value": "224"
										},
										{
											"begin": 20149,
											"end": 20177,
											"name": "PUSH [tag]",
											"value": "225"
										},
										{
											"begin": 20149,
											"end": 20175,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 20149,
											"end": 20177,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20149,
											"end": 20177,
											"name": "tag",
											"value": "225"
										},
										{
											"begin": 20149,
											"end": 20177,
											"name": "JUMPDEST"
										},
										{
											"begin": 20128,
											"end": 20144,
											"name": "DUP3"
										},
										{
											"begin": 20128,
											"end": 20148,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 20128,
											"end": 20148,
											"name": "SWAP1"
										},
										{
											"begin": 20128,
											"end": 20178,
											"name": "SWAP2"
										},
										{
											"begin": 20128,
											"end": 20178,
											"name": "SWAP1"
										},
										{
											"begin": 20128,
											"end": 20178,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20128,
											"end": 20178,
											"name": "AND"
										},
										{
											"begin": 20128,
											"end": 20178,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20128,
											"end": 20178,
											"name": "tag",
											"value": "224"
										},
										{
											"begin": 20128,
											"end": 20178,
											"name": "JUMPDEST"
										},
										{
											"begin": 20109,
											"end": 20178,
											"name": "SWAP1"
										},
										{
											"begin": 20109,
											"end": 20178,
											"name": "POP"
										},
										{
											"begin": 20212,
											"end": 20213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20192,
											"end": 20208,
											"name": "DUP2"
										},
										{
											"begin": 20192,
											"end": 20213,
											"name": "EQ"
										},
										{
											"begin": 20188,
											"end": 20240,
											"name": "ISZERO"
										},
										{
											"begin": 20188,
											"end": 20240,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 20188,
											"end": 20240,
											"name": "JUMPI"
										},
										{
											"begin": 20223,
											"end": 20224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20226,
											"end": 20227,
											"name": "DUP1"
										},
										{
											"begin": 20229,
											"end": 20239,
											"name": "DUP4"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "DUP3"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "SWAP3"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "POP"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "DUP2"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "SWAP2"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "POP"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "SWAP4"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "POP"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "SWAP4"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "POP"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "SWAP4"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "POP"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "POP"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 20215,
											"end": 20240,
											"name": "JUMP"
										},
										{
											"begin": 20188,
											"end": 20240,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 20188,
											"end": 20240,
											"name": "JUMPDEST"
										},
										{
											"begin": 4481,
											"end": 4491,
											"name": "PUSH",
											"value": "214E8348C4F0000"
										},
										{
											"begin": 20257,
											"end": 20273,
											"name": "DUP2"
										},
										{
											"begin": 20257,
											"end": 20294,
											"name": "GT"
										},
										{
											"begin": 20257,
											"end": 20294,
											"name": "ISZERO"
										},
										{
											"begin": 20250,
											"end": 20295,
											"name": "PUSH [tag]",
											"value": "227"
										},
										{
											"begin": 20250,
											"end": 20295,
											"name": "JUMPI"
										},
										{
											"begin": 20250,
											"end": 20295,
											"name": "INVALID"
										},
										{
											"begin": 20250,
											"end": 20295,
											"name": "tag",
											"value": "227"
										},
										{
											"begin": 20250,
											"end": 20295,
											"name": "JUMPDEST"
										},
										{
											"begin": 20313,
											"end": 20379,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 20371,
											"end": 20378,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4374,
											"end": 4382,
											"name": "PUSH",
											"value": "1E13380"
										},
										{
											"begin": 20364,
											"end": 20378,
											"name": "MUL"
										},
										{
											"begin": 20313,
											"end": 20359,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 20348,
											"end": 20358,
											"name": "DUP5"
										},
										{
											"begin": 20313,
											"end": 20343,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 4481,
											"end": 4491,
											"name": "PUSH",
											"value": "214E8348C4F0000"
										},
										{
											"begin": 20313,
											"end": 20320,
											"name": "DUP11"
										},
										{
											"begin": 20313,
											"end": 20324,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 20313,
											"end": 20324,
											"name": "SWAP1"
										},
										{
											"begin": 20313,
											"end": 20343,
											"name": "SWAP2"
										},
										{
											"begin": 20313,
											"end": 20343,
											"name": "SWAP1"
										},
										{
											"begin": 20313,
											"end": 20343,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20313,
											"end": 20343,
											"name": "AND"
										},
										{
											"begin": 20313,
											"end": 20343,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20313,
											"end": 20343,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 20313,
											"end": 20343,
											"name": "JUMPDEST"
										},
										{
											"begin": 20313,
											"end": 20347,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 20313,
											"end": 20347,
											"name": "SWAP1"
										},
										{
											"begin": 20313,
											"end": 20359,
											"name": "SWAP2"
										},
										{
											"begin": 20313,
											"end": 20359,
											"name": "SWAP1"
										},
										{
											"begin": 20313,
											"end": 20359,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20313,
											"end": 20359,
											"name": "AND"
										},
										{
											"begin": 20313,
											"end": 20359,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20313,
											"end": 20359,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 20313,
											"end": 20359,
											"name": "JUMPDEST"
										},
										{
											"begin": 20313,
											"end": 20363,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 20313,
											"end": 20363,
											"name": "SWAP1"
										},
										{
											"begin": 20313,
											"end": 20379,
											"name": "SWAP2"
										},
										{
											"begin": 20313,
											"end": 20379,
											"name": "SWAP1"
										},
										{
											"begin": 20313,
											"end": 20379,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20313,
											"end": 20379,
											"name": "AND"
										},
										{
											"begin": 20313,
											"end": 20379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20313,
											"end": 20379,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 20313,
											"end": 20379,
											"name": "JUMPDEST"
										},
										{
											"begin": 20305,
											"end": 20379,
											"name": "SWAP4"
										},
										{
											"begin": 20305,
											"end": 20379,
											"name": "POP"
										},
										{
											"begin": 20401,
											"end": 20466,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 20458,
											"end": 20465,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4374,
											"end": 4382,
											"name": "PUSH",
											"value": "1E13380"
										},
										{
											"begin": 20451,
											"end": 20465,
											"name": "MUL"
										},
										{
											"begin": 20401,
											"end": 20446,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 20435,
											"end": 20445,
											"name": "DUP5"
										},
										{
											"begin": 20401,
											"end": 20430,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 20413,
											"end": 20429,
											"name": "DUP6"
										},
										{
											"begin": 20401,
											"end": 20408,
											"name": "DUP11"
										},
										{
											"begin": 20401,
											"end": 20412,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 20401,
											"end": 20412,
											"name": "SWAP1"
										},
										{
											"begin": 20401,
											"end": 20430,
											"name": "SWAP2"
										},
										{
											"begin": 20401,
											"end": 20430,
											"name": "SWAP1"
										},
										{
											"begin": 20401,
											"end": 20430,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20401,
											"end": 20430,
											"name": "AND"
										},
										{
											"begin": 20401,
											"end": 20430,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20401,
											"end": 20430,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 20401,
											"end": 20430,
											"name": "JUMPDEST"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 20401,
											"end": 20434,
											"name": "SWAP1"
										},
										{
											"begin": 20401,
											"end": 20446,
											"name": "SWAP2"
										},
										{
											"begin": 20401,
											"end": 20446,
											"name": "SWAP1"
										},
										{
											"begin": 20401,
											"end": 20446,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20401,
											"end": 20446,
											"name": "AND"
										},
										{
											"begin": 20401,
											"end": 20446,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20401,
											"end": 20446,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 20401,
											"end": 20446,
											"name": "JUMPDEST"
										},
										{
											"begin": 20401,
											"end": 20450,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 20401,
											"end": 20450,
											"name": "SWAP1"
										},
										{
											"begin": 20401,
											"end": 20466,
											"name": "SWAP2"
										},
										{
											"begin": 20401,
											"end": 20466,
											"name": "SWAP1"
										},
										{
											"begin": 20401,
											"end": 20466,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 20401,
											"end": 20466,
											"name": "AND"
										},
										{
											"begin": 20401,
											"end": 20466,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20401,
											"end": 20466,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 20401,
											"end": 20466,
											"name": "JUMPDEST"
										},
										{
											"begin": 20389,
											"end": 20466,
											"name": "SWAP3"
										},
										{
											"begin": 20389,
											"end": 20466,
											"name": "POP"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "POP"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "JUMPDEST"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP3"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "POP"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP3"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "POP"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "SWAP3"
										},
										{
											"begin": 19702,
											"end": 20473,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPI"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "REVERT"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 13848,
											"end": 13882,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 13865,
											"end": 13873,
											"name": "PUSH",
											"value": "9D"
										},
										{
											"begin": 13875,
											"end": 13881,
											"name": "DUP3"
										},
										{
											"begin": 13848,
											"end": 13864,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 13848,
											"end": 13882,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13848,
											"end": 13882,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 13848,
											"end": 13882,
											"name": "JUMPDEST"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "PUSH",
											"value": "C8242DC5446855370B781ABBFC5D882AF1D1A3CC29143216ABA3558FEB0CE925"
										},
										{
											"begin": 13904,
											"end": 13910,
											"name": "DUP2"
										},
										{
											"begin": 13912,
											"end": 13922,
											"name": "CALLER"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "MLOAD"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "DUP1"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "DUP4"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "DUP2"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "MSTORE"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "ADD"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "DUP3"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "AND"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "AND"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "DUP2"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "MSTORE"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "ADD"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "SWAP3"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "POP"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "POP"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "POP"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "MLOAD"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "DUP1"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "SWAP2"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "SUB"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "SWAP1"
										},
										{
											"begin": 13897,
											"end": 13923,
											"name": "LOG1"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "POP"
										},
										{
											"begin": 13789,
											"end": 13930,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "241"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "tag",
											"value": "241"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPI"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "REVERT"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 1844,
											"end": 1845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "AND"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "SLOAD"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "EXP"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "SWAP1"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "DIV"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1834,
											"name": "AND"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "AND"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "MLOAD"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "MLOAD"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "DUP1"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "SWAP2"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "SUB"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "SWAP1"
										},
										{
											"begin": 1807,
											"end": 1847,
											"name": "LOG3"
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1863,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 1857,
											"end": 1863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "EXP"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "DUP2"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "SLOAD"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "DUP2"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "MUL"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "NOT"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "AND"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "SWAP1"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "DUP4"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "AND"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "MUL"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "OR"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "SWAP1"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "SSTORE"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "POP"
										},
										{
											"begin": 1746,
											"end": 1883,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPI"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "REVERT"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 15176,
											"end": 15229,
											"name": "PUSH [tag]",
											"value": "248"
										},
										{
											"begin": 15193,
											"end": 15220,
											"name": "PUSH",
											"value": "A6"
										},
										{
											"begin": 15222,
											"end": 15228,
											"name": "DUP3"
										},
										{
											"begin": 15176,
											"end": 15192,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 15176,
											"end": 15229,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15176,
											"end": 15229,
											"name": "tag",
											"value": "248"
										},
										{
											"begin": 15176,
											"end": 15229,
											"name": "JUMPDEST"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "PUSH",
											"value": "597B9881536F6A87F60171072E2A2D56C53E5E2C1D72270259008AD4932E61ED"
										},
										{
											"begin": 15270,
											"end": 15276,
											"name": "DUP2"
										},
										{
											"begin": 15278,
											"end": 15288,
											"name": "CALLER"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "MLOAD"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "DUP1"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "DUP4"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "DUP2"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "MSTORE"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "ADD"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "DUP3"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "AND"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "AND"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "DUP2"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "MSTORE"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "ADD"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "SWAP3"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "POP"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "POP"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "POP"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "MLOAD"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "DUP1"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "SWAP2"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "SUB"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "SWAP1"
										},
										{
											"begin": 15244,
											"end": 15289,
											"name": "LOG1"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "POP"
										},
										{
											"begin": 15098,
											"end": 15296,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "JUMPDEST"
										},
										{
											"begin": 20583,
											"end": 20592,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20594,
											"end": 20602,
											"name": "DUP1"
										},
										{
											"begin": 20604,
											"end": 20613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 20632,
											"end": 20655,
											"name": "PUSH [tag]",
											"value": "250"
										},
										{
											"begin": 20632,
											"end": 20639,
											"name": "PUSH",
											"value": "B2"
										},
										{
											"begin": 20632,
											"end": 20653,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 20632,
											"end": 20655,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 20632,
											"end": 20655,
											"name": "tag",
											"value": "250"
										},
										{
											"begin": 20632,
											"end": 20655,
											"name": "JUMPDEST"
										},
										{
											"begin": 20625,
											"end": 20655,
											"name": "SWAP3"
										},
										{
											"begin": 20625,
											"end": 20655,
											"name": "POP"
										},
										{
											"begin": 20625,
											"end": 20655,
											"name": "SWAP3"
										},
										{
											"begin": 20625,
											"end": 20655,
											"name": "POP"
										},
										{
											"begin": 20625,
											"end": 20655,
											"name": "SWAP3"
										},
										{
											"begin": 20625,
											"end": 20655,
											"name": "POP"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "SWAP1"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "SWAP2"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "SWAP3"
										},
										{
											"begin": 20530,
											"end": 20662,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "EXP"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DIV"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPI"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "POP"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "PUSH [tag]",
											"value": "254"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "tag",
											"value": "254"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPI"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "POP"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "DUP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SLOAD"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "EXP"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "DIV"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "AND"
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "ISZERO"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPDEST"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPI"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH data",
											"value": "9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "CODECOPY"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "REVERT"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPDEST"
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DUP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SLOAD"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "EXP"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DIV"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "AND"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "ISZERO"
										},
										{
											"begin": 1129,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1129,
											"end": 1164,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1188,
											"name": "DUP1"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "ISZERO"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPI"
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "EXP"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "NOT"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP4"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "OR"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SSTORE"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "POP"
										},
										{
											"begin": 1239,
											"end": 1243,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1225,
											"end": 1236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1236,
											"name": "DUP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "EXP"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SLOAD"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "NOT"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "OR"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SSTORE"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPDEST"
										},
										{
											"begin": 975,
											"end": 976,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 959,
											"end": 972,
											"name": "PUSH",
											"value": "66"
										},
										{
											"begin": 959,
											"end": 976,
											"name": "DUP2"
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1"
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SSTORE"
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP"
										},
										{
											"begin": 1268,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "ISZERO"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPI"
										},
										{
											"begin": 1307,
											"end": 1312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "DUP1"
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "EXP"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP2"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SLOAD"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP2"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "MUL"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "NOT"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "AND"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP4"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "ISZERO"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "ISZERO"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "MUL"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "OR"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SSTORE"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPDEST"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "POP"
										},
										{
											"begin": 769,
											"end": 983,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "JUMPDEST"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "SLOAD"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "DUP2"
										},
										{
											"begin": 6127,
											"end": 6153,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "JUMPDEST"
										},
										{
											"begin": 18958,
											"end": 18965,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18977,
											"end": 18996,
											"name": "DUP1"
										},
										{
											"begin": 18999,
											"end": 19004,
											"name": "PUSH",
											"value": "99"
										},
										{
											"begin": 18999,
											"end": 19004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18999,
											"end": 19004,
											"name": "SWAP1"
										},
										{
											"begin": 18999,
											"end": 19004,
											"name": "SLOAD"
										},
										{
											"begin": 18999,
											"end": 19004,
											"name": "SWAP1"
										},
										{
											"begin": 18999,
											"end": 19004,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 18999,
											"end": 19004,
											"name": "EXP"
										},
										{
											"begin": 18999,
											"end": 19004,
											"name": "SWAP1"
										},
										{
											"begin": 18999,
											"end": 19004,
											"name": "DIV"
										},
										{
											"begin": 18999,
											"end": 19004,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18999,
											"end": 19004,
											"name": "AND"
										},
										{
											"begin": 18999,
											"end": 19016,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18999,
											"end": 19016,
											"name": "AND"
										},
										{
											"begin": 18999,
											"end": 19016,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "MLOAD"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "DUP2"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "AND"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "SHL"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "DUP2"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "MSTORE"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "ADD"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "MLOAD"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "DUP1"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "DUP4"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "SUB"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "DUP2"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "DUP7"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "DUP1"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "POP"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "GAS"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "STATICCALL"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "POP"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "POP"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "POP"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "POP"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "MLOAD"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "264"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "264"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "DUP2"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "ADD"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "SWAP1"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "DUP1"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "DUP1"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "MLOAD"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "SWAP1"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "ADD"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "SWAP1"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "SWAP3"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "SWAP2"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "SWAP1"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "POP"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "POP"
										},
										{
											"begin": 18999,
											"end": 19018,
											"name": "POP"
										},
										{
											"begin": 18977,
											"end": 19018,
											"name": "SWAP1"
										},
										{
											"begin": 18977,
											"end": 19018,
											"name": "POP"
										},
										{
											"begin": 19028,
											"end": 19042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19045,
											"end": 19064,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 19045,
											"end": 19062,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 19045,
											"end": 19064,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19045,
											"end": 19064,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 19045,
											"end": 19064,
											"name": "JUMPDEST"
										},
										{
											"begin": 19028,
											"end": 19064,
											"name": "SWAP1"
										},
										{
											"begin": 19028,
											"end": 19064,
											"name": "POP"
										},
										{
											"begin": 19088,
											"end": 19089,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19078,
											"end": 19084,
											"name": "DUP2"
										},
										{
											"begin": 19078,
											"end": 19089,
											"name": "EQ"
										},
										{
											"begin": 19074,
											"end": 19099,
											"name": "ISZERO"
										},
										{
											"begin": 19074,
											"end": 19099,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 19074,
											"end": 19099,
											"name": "JUMPI"
										},
										{
											"begin": 19098,
											"end": 19099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19091,
											"end": 19099,
											"name": "SWAP3"
										},
										{
											"begin": 19091,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 19091,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 19091,
											"end": 19099,
											"name": "POP"
										},
										{
											"begin": 19091,
											"end": 19099,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 19091,
											"end": 19099,
											"name": "JUMP"
										},
										{
											"begin": 19074,
											"end": 19099,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 19074,
											"end": 19099,
											"name": "JUMPDEST"
										},
										{
											"begin": 19109,
											"end": 19123,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19126,
											"end": 19162,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 19154,
											"end": 19161,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 19126,
											"end": 19149,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 19142,
											"end": 19148,
											"name": "DUP5"
										},
										{
											"begin": 19126,
											"end": 19137,
											"name": "DUP7"
										},
										{
											"begin": 19126,
											"end": 19141,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 19126,
											"end": 19141,
											"name": "SWAP1"
										},
										{
											"begin": 19126,
											"end": 19149,
											"name": "SWAP2"
										},
										{
											"begin": 19126,
											"end": 19149,
											"name": "SWAP1"
										},
										{
											"begin": 19126,
											"end": 19149,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19126,
											"end": 19149,
											"name": "AND"
										},
										{
											"begin": 19126,
											"end": 19149,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19126,
											"end": 19149,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 19126,
											"end": 19149,
											"name": "JUMPDEST"
										},
										{
											"begin": 19126,
											"end": 19153,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 19126,
											"end": 19153,
											"name": "SWAP1"
										},
										{
											"begin": 19126,
											"end": 19162,
											"name": "SWAP2"
										},
										{
											"begin": 19126,
											"end": 19162,
											"name": "SWAP1"
										},
										{
											"begin": 19126,
											"end": 19162,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19126,
											"end": 19162,
											"name": "AND"
										},
										{
											"begin": 19126,
											"end": 19162,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19126,
											"end": 19162,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 19126,
											"end": 19162,
											"name": "JUMPDEST"
										},
										{
											"begin": 19109,
											"end": 19162,
											"name": "SWAP1"
										},
										{
											"begin": 19109,
											"end": 19162,
											"name": "POP"
										},
										{
											"begin": 19172,
											"end": 19206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 19209,
											"end": 19233,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 19231,
											"end": 19232,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4481,
											"end": 4491,
											"name": "PUSH",
											"value": "214E8348C4F0000"
										},
										{
											"begin": 19209,
											"end": 19230,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 19209,
											"end": 19230,
											"name": "SWAP1"
										},
										{
											"begin": 19209,
											"end": 19233,
											"name": "SWAP2"
										},
										{
											"begin": 19209,
											"end": 19233,
											"name": "SWAP1"
										},
										{
											"begin": 19209,
											"end": 19233,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19209,
											"end": 19233,
											"name": "AND"
										},
										{
											"begin": 19209,
											"end": 19233,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19209,
											"end": 19233,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 19209,
											"end": 19233,
											"name": "JUMPDEST"
										},
										{
											"begin": 19172,
											"end": 19233,
											"name": "SWAP1"
										},
										{
											"begin": 19172,
											"end": 19233,
											"name": "POP"
										},
										{
											"begin": 19270,
											"end": 19276,
											"name": "DUP2"
										},
										{
											"begin": 19255,
											"end": 19266,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": 19255,
											"end": 19266,
											"name": "SLOAD"
										},
										{
											"begin": 19255,
											"end": 19276,
											"name": "LT"
										},
										{
											"begin": 19251,
											"end": 19336,
											"name": "PUSH [tag]",
											"value": "270"
										},
										{
											"begin": 19251,
											"end": 19336,
											"name": "JUMPI"
										},
										{
											"begin": 19299,
											"end": 19325,
											"name": "DUP1"
										},
										{
											"begin": 19292,
											"end": 19325,
											"name": "SWAP5"
										},
										{
											"begin": 19292,
											"end": 19325,
											"name": "POP"
										},
										{
											"begin": 19292,
											"end": 19325,
											"name": "POP"
										},
										{
											"begin": 19292,
											"end": 19325,
											"name": "POP"
										},
										{
											"begin": 19292,
											"end": 19325,
											"name": "POP"
										},
										{
											"begin": 19292,
											"end": 19325,
											"name": "POP"
										},
										{
											"begin": 19292,
											"end": 19325,
											"name": "PUSH [tag]",
											"value": "261"
										},
										{
											"begin": 19292,
											"end": 19325,
											"name": "JUMP"
										},
										{
											"begin": 19251,
											"end": 19336,
											"name": "tag",
											"value": "270"
										},
										{
											"begin": 19251,
											"end": 19336,
											"name": "JUMPDEST"
										},
										{
											"begin": 19352,
											"end": 19407,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 19400,
											"end": 19406,
											"name": "DUP3"
										},
										{
											"begin": 19352,
											"end": 19395,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 19383,
											"end": 19394,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": 19383,
											"end": 19394,
											"name": "SLOAD"
										},
										{
											"begin": 19352,
											"end": 19378,
											"name": "DUP5"
										},
										{
											"begin": 19352,
											"end": 19382,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 19352,
											"end": 19382,
											"name": "SWAP1"
										},
										{
											"begin": 19352,
											"end": 19395,
											"name": "SWAP2"
										},
										{
											"begin": 19352,
											"end": 19395,
											"name": "SWAP1"
										},
										{
											"begin": 19352,
											"end": 19395,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19352,
											"end": 19395,
											"name": "AND"
										},
										{
											"begin": 19352,
											"end": 19395,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19352,
											"end": 19395,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 19352,
											"end": 19395,
											"name": "JUMPDEST"
										},
										{
											"begin": 19352,
											"end": 19399,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 19352,
											"end": 19399,
											"name": "SWAP1"
										},
										{
											"begin": 19352,
											"end": 19407,
											"name": "SWAP2"
										},
										{
											"begin": 19352,
											"end": 19407,
											"name": "SWAP1"
										},
										{
											"begin": 19352,
											"end": 19407,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 19352,
											"end": 19407,
											"name": "AND"
										},
										{
											"begin": 19352,
											"end": 19407,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 19352,
											"end": 19407,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 19352,
											"end": 19407,
											"name": "JUMPDEST"
										},
										{
											"begin": 19345,
											"end": 19407,
											"name": "SWAP5"
										},
										{
											"begin": 19345,
											"end": 19407,
											"name": "POP"
										},
										{
											"begin": 19345,
											"end": 19407,
											"name": "POP"
										},
										{
											"begin": 19345,
											"end": 19407,
											"name": "POP"
										},
										{
											"begin": 19345,
											"end": 19407,
											"name": "POP"
										},
										{
											"begin": 19345,
											"end": 19407,
											"name": "POP"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "tag",
											"value": "261"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "JUMPDEST"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "SWAP1"
										},
										{
											"begin": 18899,
											"end": 19414,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPI"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "REVERT"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 14722,
											"end": 14729,
											"name": "PUSH",
											"value": "E10"
										},
										{
											"begin": 14712,
											"end": 14718,
											"name": "DUP2"
										},
										{
											"begin": 14712,
											"end": 14729,
											"name": "LT"
										},
										{
											"begin": 14712,
											"end": 14729,
											"name": "ISZERO"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "JUMPI"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "MLOAD"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "DUP2"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "MSTORE"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "ADD"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "DUP1"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "DUP1"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "ADD"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "DUP3"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "DUP2"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "SUB"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "DUP3"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "MSTORE"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "PUSH",
											"value": "1D"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "DUP2"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "MSTORE"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "ADD"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "DUP1"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "PUSH",
											"value": "73686F756C646E2774206265206C657373207468616E203120686F7572000000"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "DUP2"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "MSTORE"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "POP"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "ADD"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "SWAP2"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "POP"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "POP"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "MLOAD"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "DUP1"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "SWAP2"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "SUB"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "SWAP1"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "REVERT"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 14704,
											"end": 14763,
											"name": "JUMPDEST"
										},
										{
											"begin": 14773,
											"end": 14828,
											"name": "PUSH [tag]",
											"value": "278"
										},
										{
											"begin": 14790,
											"end": 14819,
											"name": "PUSH",
											"value": "A3"
										},
										{
											"begin": 14821,
											"end": 14827,
											"name": "DUP3"
										},
										{
											"begin": 14773,
											"end": 14789,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 14773,
											"end": 14828,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14773,
											"end": 14828,
											"name": "tag",
											"value": "278"
										},
										{
											"begin": 14773,
											"end": 14828,
											"name": "JUMPDEST"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "PUSH",
											"value": "3A963FA1D1D0DA205F1AE9869AA14BF4FF7A4585EFA819B0C94326B4A3E1E228"
										},
										{
											"begin": 14871,
											"end": 14877,
											"name": "DUP2"
										},
										{
											"begin": 14879,
											"end": 14889,
											"name": "CALLER"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "MLOAD"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "DUP1"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "DUP4"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "DUP2"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "MSTORE"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "ADD"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "DUP3"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "AND"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "AND"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "DUP2"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "MSTORE"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "ADD"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "SWAP3"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "POP"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "POP"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "POP"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "MLOAD"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "DUP1"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "SWAP2"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "SUB"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "SWAP1"
										},
										{
											"begin": 14843,
											"end": 14890,
											"name": "LOG1"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "POP"
										},
										{
											"begin": 14624,
											"end": 14897,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "JUMPDEST"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "AD"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "MSTORE"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "DUP2"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "MSTORE"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "KECCAK256"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "MSTORE"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "DUP1"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "MSTORE"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "KECCAK256"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP2"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SWAP2"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "POP"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "SLOAD"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "DUP2"
										},
										{
											"begin": 5805,
											"end": 5874,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "JUMPDEST"
										},
										{
											"begin": 997,
											"end": 1004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "SWAP1"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "SLOAD"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "SWAP1"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "EXP"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "SWAP1"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "DIV"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "AND"
										},
										{
											"begin": 1016,
											"end": 1029,
											"name": "SWAP1"
										},
										{
											"begin": 1016,
											"end": 1029,
											"name": "POP"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 959,
											"end": 1036,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "JUMPDEST"
										},
										{
											"begin": 17733,
											"end": 17740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "PUSH [tag]",
											"value": "281"
										},
										{
											"begin": 17778,
											"end": 17807,
											"name": "PUSH",
											"value": "A3"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "MLOAD"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "DUP1"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "ADD"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "MSTORE"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "SWAP1"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "DUP2"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "DUP3"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "ADD"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "SLOAD"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "DUP2"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "MSTORE"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "ADD"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "DUP3"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "ADD"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "SLOAD"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "DUP2"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "MSTORE"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "ADD"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "DUP3"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "ADD"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "SLOAD"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "DUP2"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "MSTORE"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "POP"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "POP"
										},
										{
											"begin": 17759,
											"end": 17777,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "tag",
											"value": "281"
										},
										{
											"begin": 17759,
											"end": 17808,
											"name": "JUMPDEST"
										},
										{
											"begin": 17752,
											"end": 17808,
											"name": "SWAP1"
										},
										{
											"begin": 17752,
											"end": 17808,
											"name": "POP"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "SWAP1"
										},
										{
											"begin": 17676,
											"end": 17815,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "JUMPDEST"
										},
										{
											"begin": 1350,
											"end": 1354,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SWAP1"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SLOAD"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SWAP1"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "EXP"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SWAP1"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "DIV"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "AND"
										},
										{
											"begin": 1373,
											"end": 1395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1395,
											"name": "AND"
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 1373,
											"end": 1383,
											"name": "PUSH [tag]",
											"value": "284"
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "JUMPDEST"
										},
										{
											"begin": 1373,
											"end": 1395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1373,
											"end": 1395,
											"name": "AND"
										},
										{
											"begin": 1373,
											"end": 1395,
											"name": "EQ"
										},
										{
											"begin": 1366,
											"end": 1395,
											"name": "SWAP1"
										},
										{
											"begin": 1366,
											"end": 1395,
											"name": "POP"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "SWAP1"
										},
										{
											"begin": 1310,
											"end": 1402,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "JUMPDEST"
										},
										{
											"begin": 10730,
											"end": 10778,
											"name": "PUSH [tag]",
											"value": "286"
										},
										{
											"begin": 10740,
											"end": 10750,
											"name": "CALLER"
										},
										{
											"begin": 10752,
											"end": 10762,
											"name": "DUP4"
										},
										{
											"begin": 10764,
											"end": 10771,
											"name": "DUP4"
										},
										{
											"begin": 10773,
											"end": 10777,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10730,
											"end": 10739,
											"name": "PUSH [tag]",
											"value": "188"
										},
										{
											"begin": 10730,
											"end": 10778,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10730,
											"end": 10778,
											"name": "tag",
											"value": "286"
										},
										{
											"begin": 10730,
											"end": 10778,
											"name": "JUMPDEST"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "POP"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "POP"
										},
										{
											"begin": 10644,
											"end": 10785,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "JUMPDEST"
										},
										{
											"begin": 17950,
											"end": 17957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 17995,
											"end": 18022,
											"name": "PUSH",
											"value": "A6"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "MLOAD"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "DUP1"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "ADD"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "MSTORE"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "SWAP1"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "DUP2"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "DUP3"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "ADD"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "SLOAD"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "DUP2"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "MSTORE"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "ADD"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "DUP3"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "ADD"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "SLOAD"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "DUP2"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "MSTORE"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "ADD"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "DUP3"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "ADD"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "SLOAD"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "DUP2"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "MSTORE"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "POP"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "POP"
										},
										{
											"begin": 17976,
											"end": 17994,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 17976,
											"end": 18023,
											"name": "JUMPDEST"
										},
										{
											"begin": 17969,
											"end": 18023,
											"name": "SWAP1"
										},
										{
											"begin": 17969,
											"end": 18023,
											"name": "POP"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "SWAP1"
										},
										{
											"begin": 17895,
											"end": 18030,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "JUMPDEST"
										},
										{
											"begin": 11174,
											"end": 11175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11161,
											"end": 11171,
											"name": "DUP2"
										},
										{
											"begin": 11161,
											"end": 11175,
											"name": "GT"
										},
										{
											"begin": 11161,
											"end": 11219,
											"name": "DUP1"
										},
										{
											"begin": 11161,
											"end": 11219,
											"name": "ISZERO"
										},
										{
											"begin": 11161,
											"end": 11219,
											"name": "PUSH [tag]",
											"value": "290"
										},
										{
											"begin": 11161,
											"end": 11219,
											"name": "JUMPI"
										},
										{
											"begin": 11161,
											"end": 11219,
											"name": "POP"
										},
										{
											"begin": 11193,
											"end": 11207,
											"name": "PUSH",
											"value": "AF"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11208,
											"end": 11218,
											"name": "CALLER"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "AND"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "AND"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "DUP2"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "MSTORE"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "ADD"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "SWAP1"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "DUP2"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "MSTORE"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "ADD"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "KECCAK256"
										},
										{
											"begin": 11193,
											"end": 11219,
											"name": "SLOAD"
										},
										{
											"begin": 11179,
											"end": 11189,
											"name": "DUP2"
										},
										{
											"begin": 11179,
											"end": 11219,
											"name": "GT"
										},
										{
											"begin": 11179,
											"end": 11219,
											"name": "ISZERO"
										},
										{
											"begin": 11161,
											"end": 11219,
											"name": "tag",
											"value": "290"
										},
										{
											"begin": 11161,
											"end": 11219,
											"name": "JUMPDEST"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "PUSH [tag]",
											"value": "291"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "JUMPI"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "MLOAD"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "DUP2"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "MSTORE"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "ADD"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "DUP1"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "DUP1"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "ADD"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "DUP3"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "DUP2"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "SUB"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "DUP3"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "MSTORE"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "DUP2"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "MSTORE"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "ADD"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "DUP1"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "PUSH",
											"value": "77726F6E67206465706F73697420696400000000000000000000000000000000"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "DUP2"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "MSTORE"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "POP"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "ADD"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "SWAP2"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "POP"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "POP"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "MLOAD"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "DUP1"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "SWAP2"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "SUB"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "SWAP1"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "REVERT"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "tag",
											"value": "291"
										},
										{
											"begin": 11153,
											"end": 11240,
											"name": "JUMPDEST"
										},
										{
											"begin": 11300,
											"end": 11306,
											"name": "PUSH [tag]",
											"value": "292"
										},
										{
											"begin": 11300,
											"end": 11304,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 11300,
											"end": 11306,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11300,
											"end": 11306,
											"name": "tag",
											"value": "292"
										},
										{
											"begin": 11300,
											"end": 11306,
											"name": "JUMPDEST"
										},
										{
											"begin": 11250,
											"end": 11273,
											"name": "PUSH",
											"value": "AE"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11274,
											"end": 11284,
											"name": "CALLER"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "AND"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "AND"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "DUP2"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "MSTORE"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "ADD"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "SWAP1"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "DUP2"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "MSTORE"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "ADD"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11250,
											"end": 11285,
											"name": "KECCAK256"
										},
										{
											"begin": 11250,
											"end": 11297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11286,
											"end": 11296,
											"name": "DUP4"
										},
										{
											"begin": 11250,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11250,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11250,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11250,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11250,
											"end": 11297,
											"name": "SWAP1"
										},
										{
											"begin": 11250,
											"end": 11297,
											"name": "DUP2"
										},
										{
											"begin": 11250,
											"end": 11297,
											"name": "MSTORE"
										},
										{
											"begin": 11250,
											"end": 11297,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11250,
											"end": 11297,
											"name": "ADD"
										},
										{
											"begin": 11250,
											"end": 11297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11250,
											"end": 11297,
											"name": "KECCAK256"
										},
										{
											"begin": 11250,
											"end": 11306,
											"name": "DUP2"
										},
										{
											"begin": 11250,
											"end": 11306,
											"name": "SWAP1"
										},
										{
											"begin": 11250,
											"end": 11306,
											"name": "SSTORE"
										},
										{
											"begin": 11250,
											"end": 11306,
											"name": "POP"
										},
										{
											"begin": 11353,
											"end": 11363,
											"name": "DUP1"
										},
										{
											"begin": 11341,
											"end": 11351,
											"name": "CALLER"
										},
										{
											"begin": 11321,
											"end": 11364,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11321,
											"end": 11364,
											"name": "AND"
										},
										{
											"begin": 11321,
											"end": 11364,
											"name": "PUSH",
											"value": "E670E4E82118D22A1F9EE18920455EBC958BAE26A90A05D31D3378788B1B0E44"
										},
										{
											"begin": 11321,
											"end": 11364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11321,
											"end": 11364,
											"name": "MLOAD"
										},
										{
											"begin": 11321,
											"end": 11364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11321,
											"end": 11364,
											"name": "MLOAD"
										},
										{
											"begin": 11321,
											"end": 11364,
											"name": "DUP1"
										},
										{
											"begin": 11321,
											"end": 11364,
											"name": "SWAP2"
										},
										{
											"begin": 11321,
											"end": 11364,
											"name": "SUB"
										},
										{
											"begin": 11321,
											"end": 11364,
											"name": "SWAP1"
										},
										{
											"begin": 11321,
											"end": 11364,
											"name": "LOG3"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "POP"
										},
										{
											"begin": 11087,
											"end": 11371,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "294"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "tag",
											"value": "294"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPI"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "REVERT"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 12925,
											"end": 12926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12910,
											"end": 12927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12910,
											"end": 12927,
											"name": "AND"
										},
										{
											"begin": 12910,
											"end": 12913,
											"name": "DUP3"
										},
										{
											"begin": 12910,
											"end": 12927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12910,
											"end": 12927,
											"name": "AND"
										},
										{
											"begin": 12910,
											"end": 12927,
											"name": "EQ"
										},
										{
											"begin": 12910,
											"end": 12927,
											"name": "ISZERO"
										},
										{
											"begin": 12910,
											"end": 12951,
											"name": "DUP1"
										},
										{
											"begin": 12910,
											"end": 12951,
											"name": "ISZERO"
										},
										{
											"begin": 12910,
											"end": 12951,
											"name": "PUSH [tag]",
											"value": "297"
										},
										{
											"begin": 12910,
											"end": 12951,
											"name": "JUMPI"
										},
										{
											"begin": 12910,
											"end": 12951,
											"name": "POP"
										},
										{
											"begin": 12946,
											"end": 12950,
											"name": "ADDRESS"
										},
										{
											"begin": 12931,
											"end": 12951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12931,
											"end": 12951,
											"name": "AND"
										},
										{
											"begin": 12931,
											"end": 12934,
											"name": "DUP3"
										},
										{
											"begin": 12931,
											"end": 12951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12931,
											"end": 12951,
											"name": "AND"
										},
										{
											"begin": 12931,
											"end": 12951,
											"name": "EQ"
										},
										{
											"begin": 12931,
											"end": 12951,
											"name": "ISZERO"
										},
										{
											"begin": 12910,
											"end": 12951,
											"name": "tag",
											"value": "297"
										},
										{
											"begin": 12910,
											"end": 12951,
											"name": "JUMPDEST"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "JUMPI"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "MLOAD"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "DUP2"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "MSTORE"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "ADD"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "DUP1"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "DUP1"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "ADD"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "DUP3"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "DUP2"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "SUB"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "DUP3"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "MSTORE"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "DUP2"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "MSTORE"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "ADD"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "DUP1"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "PUSH",
											"value": "6E6F7420612076616C696420726563697069656E740000000000000000000000"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "DUP2"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "MSTORE"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "POP"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "ADD"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "SWAP2"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "POP"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "POP"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "MLOAD"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "DUP1"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "SWAP2"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "SUB"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "SWAP1"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "REVERT"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 12902,
											"end": 12977,
											"name": "JUMPDEST"
										},
										{
											"begin": 13005,
											"end": 13006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12995,
											"end": 13002,
											"name": "DUP2"
										},
										{
											"begin": 12995,
											"end": 13006,
											"name": "GT"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "JUMPI"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "MLOAD"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "DUP2"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "MSTORE"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "ADD"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "DUP1"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "DUP1"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "ADD"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "DUP3"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "DUP2"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "SUB"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "DUP3"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "MSTORE"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "DUP2"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "MSTORE"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "ADD"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "DUP1"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "PUSH",
											"value": "616D6F756E742073686F756C642062652067726561746572207468616E203000"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "DUP2"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "MSTORE"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "POP"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "ADD"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "SWAP2"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "POP"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "POP"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "MLOAD"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "DUP1"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "SWAP2"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "SUB"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "SWAP1"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "REVERT"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "JUMPDEST"
										},
										{
											"begin": 13074,
											"end": 13075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13056,
											"end": 13076,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13056,
											"end": 13076,
											"name": "AND"
										},
										{
											"begin": 13056,
											"end": 13062,
											"name": "DUP4"
										},
										{
											"begin": 13056,
											"end": 13076,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13056,
											"end": 13076,
											"name": "AND"
										},
										{
											"begin": 13056,
											"end": 13076,
											"name": "EQ"
										},
										{
											"begin": 13052,
											"end": 13627,
											"name": "ISZERO"
										},
										{
											"begin": 13052,
											"end": 13627,
											"name": "PUSH [tag]",
											"value": "300"
										},
										{
											"begin": 13052,
											"end": 13627,
											"name": "JUMPI"
										},
										{
											"begin": 13097,
											"end": 13100,
											"name": "DUP2"
										},
										{
											"begin": 13097,
											"end": 13105,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13097,
											"end": 13105,
											"name": "AND"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 13106,
											"end": 13113,
											"name": "DUP3"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "SWAP1"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "DUP2"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "ISZERO"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "MUL"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "SWAP1"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "MLOAD"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "MLOAD"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "DUP1"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "DUP4"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "SUB"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "DUP2"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "DUP6"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "DUP9"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "DUP9"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "CALL"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "SWAP4"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "POP"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "POP"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "POP"
										},
										{
											"begin": 13097,
											"end": 13114,
											"name": "POP"
										},
										{
											"begin": 13092,
											"end": 13224,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 13092,
											"end": 13224,
											"name": "JUMPI"
										},
										{
											"begin": 13196,
											"end": 13203,
											"name": "DUP1"
										},
										{
											"begin": 13205,
											"end": 13208,
											"name": "DUP3"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "MLOAD"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "302"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "SWAP1"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "303"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "tag",
											"value": "302"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "JUMPDEST"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "DUP3"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "AND"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "AND"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "DUP2"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "MSTORE"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "ADD"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "SWAP2"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "POP"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "POP"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "MLOAD"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "SWAP2"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "SUB"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "SWAP1"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "DUP3"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "CREATE"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "POP"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "SWAP1"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "POP"
										},
										{
											"begin": 13174,
											"end": 13209,
											"name": "POP"
										},
										{
											"begin": 13092,
											"end": 13224,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 13092,
											"end": 13224,
											"name": "JUMPDEST"
										},
										{
											"begin": 13052,
											"end": 13627,
											"name": "PUSH [tag]",
											"value": "305"
										},
										{
											"begin": 13052,
											"end": 13627,
											"name": "JUMP"
										},
										{
											"begin": 13052,
											"end": 13627,
											"name": "tag",
											"value": "300"
										},
										{
											"begin": 13052,
											"end": 13627,
											"name": "JUMPDEST"
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "PUSH",
											"value": "99"
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "SWAP1"
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "SLOAD"
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "SWAP1"
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "EXP"
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "SWAP1"
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "DIV"
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "AND"
										},
										{
											"begin": 13244,
											"end": 13268,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13244,
											"end": 13268,
											"name": "AND"
										},
										{
											"begin": 13244,
											"end": 13250,
											"name": "DUP4"
										},
										{
											"begin": 13244,
											"end": 13268,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13244,
											"end": 13268,
											"name": "AND"
										},
										{
											"begin": 13244,
											"end": 13268,
											"name": "EQ"
										},
										{
											"begin": 13240,
											"end": 13627,
											"name": "ISZERO"
										},
										{
											"begin": 13240,
											"end": 13627,
											"name": "PUSH [tag]",
											"value": "306"
										},
										{
											"begin": 13240,
											"end": 13627,
											"name": "JUMPI"
										},
										{
											"begin": 13284,
											"end": 13307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13357,
											"name": "PUSH [tag]",
											"value": "307"
										},
										{
											"begin": 13345,
											"end": 13356,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": 13345,
											"end": 13356,
											"name": "SLOAD"
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "PUSH",
											"value": "99"
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "SWAP1"
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "SLOAD"
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "SWAP1"
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "EXP"
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "SWAP1"
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "DIV"
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13310,
											"end": 13315,
											"name": "AND"
										},
										{
											"begin": 13310,
											"end": 13325,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13310,
											"end": 13325,
											"name": "AND"
										},
										{
											"begin": 13310,
											"end": 13325,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 13334,
											"end": 13338,
											"name": "ADDRESS"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "MLOAD"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "DUP3"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "AND"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "SHL"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "DUP2"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "MSTORE"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "ADD"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "DUP1"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "DUP3"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "AND"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "AND"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "DUP2"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "MSTORE"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "ADD"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "SWAP2"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "MLOAD"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "DUP1"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "DUP4"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "SUB"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "DUP2"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "DUP7"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "DUP1"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "GAS"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "STATICCALL"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "309"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "309"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "MLOAD"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "310"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "310"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "DUP2"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "ADD"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "SWAP1"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "DUP1"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "DUP1"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "MLOAD"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "SWAP1"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "ADD"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "SWAP1"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "SWAP3"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "SWAP2"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "SWAP1"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "POP"
										},
										{
											"begin": 13310,
											"end": 13344,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 13310,
											"end": 13344,
											"name": "SWAP1"
										},
										{
											"begin": 13310,
											"end": 13357,
											"name": "SWAP2"
										},
										{
											"begin": 13310,
											"end": 13357,
											"name": "SWAP1"
										},
										{
											"begin": 13310,
											"end": 13357,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13310,
											"end": 13357,
											"name": "AND"
										},
										{
											"begin": 13310,
											"end": 13357,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13310,
											"end": 13357,
											"name": "tag",
											"value": "307"
										},
										{
											"begin": 13310,
											"end": 13357,
											"name": "JUMPDEST"
										},
										{
											"begin": 13284,
											"end": 13357,
											"name": "SWAP1"
										},
										{
											"begin": 13284,
											"end": 13357,
											"name": "POP"
										},
										{
											"begin": 13398,
											"end": 13405,
											"name": "DUP2"
										},
										{
											"begin": 13379,
											"end": 13394,
											"name": "DUP2"
										},
										{
											"begin": 13379,
											"end": 13405,
											"name": "LT"
										},
										{
											"begin": 13379,
											"end": 13405,
											"name": "ISZERO"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "PUSH [tag]",
											"value": "311"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "JUMPI"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "MLOAD"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "DUP2"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "MSTORE"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "ADD"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "DUP1"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "DUP1"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "ADD"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "DUP3"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "DUP2"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "SUB"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "DUP3"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "MSTORE"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "DUP2"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "MSTORE"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "ADD"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "DUP1"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "PUSH",
											"value": "696E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "DUP2"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "MSTORE"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "POP"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "ADD"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "SWAP2"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "POP"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "POP"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "MLOAD"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "DUP1"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "SWAP2"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "SUB"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "SWAP1"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "REVERT"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "tag",
											"value": "311"
										},
										{
											"begin": 13371,
											"end": 13428,
											"name": "JUMPDEST"
										},
										{
											"begin": 13450,
											"end": 13455,
											"name": "PUSH",
											"value": "99"
										},
										{
											"begin": 13450,
											"end": 13455,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13450,
											"end": 13455,
											"name": "SWAP1"
										},
										{
											"begin": 13450,
											"end": 13455,
											"name": "SLOAD"
										},
										{
											"begin": 13450,
											"end": 13455,
											"name": "SWAP1"
										},
										{
											"begin": 13450,
											"end": 13455,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 13450,
											"end": 13455,
											"name": "EXP"
										},
										{
											"begin": 13450,
											"end": 13455,
											"name": "SWAP1"
										},
										{
											"begin": 13450,
											"end": 13455,
											"name": "DIV"
										},
										{
											"begin": 13450,
											"end": 13455,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13450,
											"end": 13455,
											"name": "AND"
										},
										{
											"begin": 13450,
											"end": 13464,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13450,
											"end": 13464,
											"name": "AND"
										},
										{
											"begin": 13450,
											"end": 13464,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 13465,
											"end": 13468,
											"name": "DUP5"
										},
										{
											"begin": 13470,
											"end": 13477,
											"name": "DUP5"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "MLOAD"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP4"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "AND"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "SHL"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP2"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "MSTORE"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "ADD"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP1"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP4"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "AND"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "AND"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP2"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "MSTORE"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "ADD"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP3"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP2"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "MSTORE"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "ADD"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "SWAP3"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "POP"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "POP"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "POP"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "MLOAD"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP1"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP4"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "SUB"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP2"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP8"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP1"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "312"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "312"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "POP"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "GAS"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "CALL"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "313"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "313"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "POP"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "POP"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "POP"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "POP"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "MLOAD"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP2"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "ADD"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "SWAP1"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP1"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "DUP1"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "MLOAD"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "SWAP1"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "ADD"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "SWAP1"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "SWAP3"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "SWAP2"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "SWAP1"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "POP"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "POP"
										},
										{
											"begin": 13450,
											"end": 13478,
											"name": "POP"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "JUMPI"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "MLOAD"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "DUP2"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "MSTORE"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "ADD"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "DUP1"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "DUP1"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "ADD"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "DUP3"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "DUP2"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "SUB"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "DUP3"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "MSTORE"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "DUP2"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "MSTORE"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "ADD"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "DUP1"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "PUSH",
											"value": "7472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "DUP2"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "MSTORE"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "POP"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "ADD"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "SWAP2"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "POP"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "POP"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "MLOAD"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "DUP1"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "SWAP2"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "SUB"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "SWAP1"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "REVERT"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 13442,
											"end": 13498,
											"name": "JUMPDEST"
										},
										{
											"begin": 13240,
											"end": 13627,
											"name": "POP"
										},
										{
											"begin": 13240,
											"end": 13627,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 13240,
											"end": 13627,
											"name": "JUMP"
										},
										{
											"begin": 13240,
											"end": 13627,
											"name": "tag",
											"value": "306"
										},
										{
											"begin": 13240,
											"end": 13627,
											"name": "JUMPDEST"
										},
										{
											"begin": 13529,
											"end": 13547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13557,
											"end": 13563,
											"name": "DUP4"
										},
										{
											"begin": 13529,
											"end": 13564,
											"name": "SWAP1"
										},
										{
											"begin": 13529,
											"end": 13564,
											"name": "POP"
										},
										{
											"begin": 13578,
											"end": 13616,
											"name": "PUSH [tag]",
											"value": "317"
										},
										{
											"begin": 13603,
											"end": 13606,
											"name": "DUP4"
										},
										{
											"begin": 13608,
											"end": 13615,
											"name": "DUP4"
										},
										{
											"begin": 13578,
											"end": 13589,
											"name": "DUP4"
										},
										{
											"begin": 13578,
											"end": 13602,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13578,
											"end": 13602,
											"name": "AND"
										},
										{
											"begin": 13578,
											"end": 13602,
											"name": "PUSH [tag]",
											"value": "318"
										},
										{
											"begin": 13578,
											"end": 13602,
											"name": "SWAP1"
										},
										{
											"begin": 13578,
											"end": 13616,
											"name": "SWAP3"
										},
										{
											"begin": 13578,
											"end": 13616,
											"name": "SWAP2"
										},
										{
											"begin": 13578,
											"end": 13616,
											"name": "SWAP1"
										},
										{
											"begin": 13578,
											"end": 13616,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13578,
											"end": 13616,
											"name": "AND"
										},
										{
											"begin": 13578,
											"end": 13616,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13578,
											"end": 13616,
											"name": "tag",
											"value": "317"
										},
										{
											"begin": 13578,
											"end": 13616,
											"name": "JUMPDEST"
										},
										{
											"begin": 13240,
											"end": 13627,
											"name": "POP"
										},
										{
											"begin": 13240,
											"end": 13627,
											"name": "tag",
											"value": "316"
										},
										{
											"begin": 13240,
											"end": 13627,
											"name": "JUMPDEST"
										},
										{
											"begin": 13052,
											"end": 13627,
											"name": "tag",
											"value": "305"
										},
										{
											"begin": 13052,
											"end": 13627,
											"name": "JUMPDEST"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "POP"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "POP"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "POP"
										},
										{
											"begin": 12798,
											"end": 13633,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "JUMPDEST"
										},
										{
											"begin": 10167,
											"end": 10171,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10213,
											"end": 10218,
											"name": "PUSH",
											"value": "99"
										},
										{
											"begin": 10213,
											"end": 10218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10213,
											"end": 10218,
											"name": "SWAP1"
										},
										{
											"begin": 10213,
											"end": 10218,
											"name": "SLOAD"
										},
										{
											"begin": 10213,
											"end": 10218,
											"name": "SWAP1"
										},
										{
											"begin": 10213,
											"end": 10218,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10213,
											"end": 10218,
											"name": "EXP"
										},
										{
											"begin": 10213,
											"end": 10218,
											"name": "SWAP1"
										},
										{
											"begin": 10213,
											"end": 10218,
											"name": "DIV"
										},
										{
											"begin": 10213,
											"end": 10218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10213,
											"end": 10218,
											"name": "AND"
										},
										{
											"begin": 10191,
											"end": 10219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10191,
											"end": 10219,
											"name": "AND"
										},
										{
											"begin": 10191,
											"end": 10201,
											"name": "CALLER"
										},
										{
											"begin": 10191,
											"end": 10219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10191,
											"end": 10219,
											"name": "AND"
										},
										{
											"begin": 10191,
											"end": 10219,
											"name": "EQ"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "PUSH [tag]",
											"value": "320"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "JUMPI"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "MLOAD"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "DUP2"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "MSTORE"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "ADD"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "DUP1"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "DUP1"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "ADD"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "DUP3"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "DUP2"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "SUB"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "DUP3"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "MSTORE"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "DUP2"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "MSTORE"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "ADD"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "DUP1"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "PUSH",
											"value": "6F6E6C7920746F6B656E20636F6E747261637420697320616C6C6F7765640000"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "DUP2"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "MSTORE"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "POP"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "ADD"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "SWAP2"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "POP"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "POP"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "MLOAD"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "DUP1"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "SWAP2"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "SUB"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "SWAP1"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "REVERT"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "tag",
											"value": "320"
										},
										{
											"begin": 10183,
											"end": 10254,
											"name": "JUMPDEST"
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "PUSH",
											"value": "B1"
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "SWAP1"
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "SLOAD"
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "SWAP1"
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "EXP"
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "SWAP1"
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "DIV"
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 10269,
											"end": 10275,
											"name": "AND"
										},
										{
											"begin": 10264,
											"end": 10355,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 10264,
											"end": 10355,
											"name": "JUMPI"
										},
										{
											"begin": 10291,
											"end": 10344,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 10300,
											"end": 10307,
											"name": "DUP6"
										},
										{
											"begin": 10311,
											"end": 10325,
											"name": "PUSH",
											"value": "AF"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10326,
											"end": 10333,
											"name": "DUP9"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "AND"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "AND"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "DUP2"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "MSTORE"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "ADD"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "SWAP1"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "DUP2"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "MSTORE"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "ADD"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "KECCAK256"
										},
										{
											"begin": 10311,
											"end": 10334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10309,
											"end": 10334,
											"name": "DUP2"
										},
										{
											"begin": 10309,
											"end": 10334,
											"name": "SLOAD"
										},
										{
											"begin": 10309,
											"end": 10334,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10309,
											"end": 10334,
											"name": "ADD"
										},
										{
											"begin": 10309,
											"end": 10334,
											"name": "SWAP2"
										},
										{
											"begin": 10309,
											"end": 10334,
											"name": "SWAP1"
										},
										{
											"begin": 10309,
											"end": 10334,
											"name": "POP"
										},
										{
											"begin": 10309,
											"end": 10334,
											"name": "DUP2"
										},
										{
											"begin": 10309,
											"end": 10334,
											"name": "SWAP1"
										},
										{
											"begin": 10309,
											"end": 10334,
											"name": "SSTORE"
										},
										{
											"begin": 10336,
											"end": 10343,
											"name": "DUP7"
										},
										{
											"begin": 10291,
											"end": 10299,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 10291,
											"end": 10344,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10291,
											"end": 10344,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 10291,
											"end": 10344,
											"name": "JUMPDEST"
										},
										{
											"begin": 10264,
											"end": 10355,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 10264,
											"end": 10355,
											"name": "JUMPDEST"
										},
										{
											"begin": 10371,
											"end": 10375,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 10364,
											"end": 10375,
											"name": "SWAP1"
										},
										{
											"begin": 10364,
											"end": 10375,
											"name": "POP"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP5"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "SWAP4"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "POP"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "POP"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "POP"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "POP"
										},
										{
											"begin": 10074,
											"end": 10382,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "JUMPDEST"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "PUSH",
											"value": "A9"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "DUP1"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "ADD"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "SLOAD"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "SWAP1"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "DUP1"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "ADD"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "SLOAD"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "SWAP1"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "DUP1"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "ADD"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "SLOAD"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "SWAP1"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "POP"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "DUP4"
										},
										{
											"begin": 5615,
											"end": 5654,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "JUMPDEST"
										},
										{
											"begin": 8645,
											"end": 8691,
											"name": "PUSH [tag]",
											"value": "325"
										},
										{
											"begin": 8655,
											"end": 8669,
											"name": "PUSH",
											"value": "AF"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8670,
											"end": 8680,
											"name": "CALLER"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "AND"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "AND"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "DUP2"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "MSTORE"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "ADD"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "SWAP1"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "DUP2"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "MSTORE"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "ADD"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "KECCAK256"
										},
										{
											"begin": 8655,
											"end": 8681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8653,
											"end": 8681,
											"name": "DUP2"
										},
										{
											"begin": 8653,
											"end": 8681,
											"name": "SLOAD"
										},
										{
											"begin": 8653,
											"end": 8681,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8653,
											"end": 8681,
											"name": "ADD"
										},
										{
											"begin": 8653,
											"end": 8681,
											"name": "SWAP2"
										},
										{
											"begin": 8653,
											"end": 8681,
											"name": "SWAP1"
										},
										{
											"begin": 8653,
											"end": 8681,
											"name": "POP"
										},
										{
											"begin": 8653,
											"end": 8681,
											"name": "DUP2"
										},
										{
											"begin": 8653,
											"end": 8681,
											"name": "SWAP1"
										},
										{
											"begin": 8653,
											"end": 8681,
											"name": "SSTORE"
										},
										{
											"begin": 8683,
											"end": 8690,
											"name": "DUP3"
										},
										{
											"begin": 8645,
											"end": 8652,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 8645,
											"end": 8691,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8645,
											"end": 8691,
											"name": "tag",
											"value": "325"
										},
										{
											"begin": 8645,
											"end": 8691,
											"name": "JUMPDEST"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "POP"
										},
										{
											"begin": 8592,
											"end": 8698,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "JUMPDEST"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH",
											"value": "AF"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "MSTORE"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "DUP1"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "MSTORE"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "KECCAK256"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SWAP2"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "POP"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SWAP1"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "POP"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "SLOAD"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "DUP2"
										},
										{
											"begin": 6040,
											"end": 6090,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "EXP"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DIV"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "PUSH [tag]",
											"value": "327"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPI"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "POP"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "PUSH [tag]",
											"value": "328"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "tag",
											"value": "328"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "tag",
											"value": "327"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "PUSH [tag]",
											"value": "329"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPI"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "POP"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "DUP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SLOAD"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "EXP"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "DIV"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "AND"
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "ISZERO"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "tag",
											"value": "329"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPDEST"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH [tag]",
											"value": "330"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPI"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH data",
											"value": "9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "CODECOPY"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "REVERT"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "tag",
											"value": "330"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPDEST"
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DUP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SLOAD"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "EXP"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DIV"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "AND"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "ISZERO"
										},
										{
											"begin": 1129,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1129,
											"end": 1164,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1188,
											"name": "DUP1"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "ISZERO"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "PUSH [tag]",
											"value": "331"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPI"
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "EXP"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "NOT"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP4"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "OR"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SSTORE"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "POP"
										},
										{
											"begin": 1239,
											"end": 1243,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1225,
											"end": 1236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1236,
											"name": "DUP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "EXP"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SLOAD"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "NOT"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "OR"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SSTORE"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "tag",
											"value": "331"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPDEST"
										},
										{
											"begin": 815,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 806,
											"end": 812,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 806,
											"end": 812,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "EXP"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "SLOAD"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "DUP2"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "MUL"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "NOT"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "AND"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "DUP4"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "AND"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "MUL"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "OR"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "SWAP1"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "SSTORE"
										},
										{
											"begin": 806,
											"end": 821,
											"name": "POP"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "SWAP1"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "SLOAD"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "SWAP1"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "EXP"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "SWAP1"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "DIV"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 869,
											"end": 875,
											"name": "AND"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "AND"
										},
										{
											"begin": 865,
											"end": 866,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "AND"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "MLOAD"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "MLOAD"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "DUP1"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "SWAP2"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "SUB"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "SWAP1"
										},
										{
											"begin": 836,
											"end": 876,
											"name": "LOG3"
										},
										{
											"begin": 1268,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "ISZERO"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "PUSH [tag]",
											"value": "333"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPI"
										},
										{
											"begin": 1307,
											"end": 1312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "DUP1"
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "EXP"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP2"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SLOAD"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP2"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "MUL"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "NOT"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "AND"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP4"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "ISZERO"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "ISZERO"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "MUL"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "OR"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SSTORE"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "tag",
											"value": "333"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPDEST"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "POP"
										},
										{
											"begin": 741,
											"end": 883,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "JUMPDEST"
										},
										{
											"begin": 18614,
											"end": 18621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18633,
											"end": 18658,
											"name": "PUSH [tag]",
											"value": "335"
										},
										{
											"begin": 18633,
											"end": 18658,
											"name": "PUSH [tag]",
											"value": "336"
										},
										{
											"begin": 18633,
											"end": 18658,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18633,
											"end": 18658,
											"name": "tag",
											"value": "335"
										},
										{
											"begin": 18633,
											"end": 18658,
											"name": "JUMPDEST"
										},
										{
											"begin": 18661,
											"end": 18697,
											"name": "PUSH",
											"value": "9A"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "MLOAD"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "DUP1"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "ADD"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "MSTORE"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "SWAP1"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "DUP2"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "DUP3"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "ADD"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "SWAP1"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "SLOAD"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "SWAP1"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "EXP"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "SWAP1"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "DIV"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "AND"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "AND"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "AND"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "DUP2"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "MSTORE"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "ADD"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "DUP3"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "ADD"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "SWAP1"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "SLOAD"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "SWAP1"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "EXP"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "SWAP1"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "DIV"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "AND"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "AND"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "AND"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "DUP2"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "MSTORE"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "ADD"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "DUP3"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "ADD"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "SLOAD"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "DUP2"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "MSTORE"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "POP"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "POP"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "SWAP1"
										},
										{
											"begin": 18633,
											"end": 18697,
											"name": "POP"
										},
										{
											"begin": 18714,
											"end": 18755,
											"name": "PUSH [tag]",
											"value": "337"
										},
										{
											"begin": 18739,
											"end": 18744,
											"name": "DUP2"
										},
										{
											"begin": 18739,
											"end": 18754,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18739,
											"end": 18754,
											"name": "ADD"
										},
										{
											"begin": 18739,
											"end": 18754,
											"name": "MLOAD"
										},
										{
											"begin": 18714,
											"end": 18738,
											"name": "PUSH [tag]",
											"value": "338"
										},
										{
											"begin": 18714,
											"end": 18755,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 18714,
											"end": 18755,
											"name": "tag",
											"value": "337"
										},
										{
											"begin": 18714,
											"end": 18755,
											"name": "JUMPDEST"
										},
										{
											"begin": 18714,
											"end": 18789,
											"name": "PUSH [tag]",
											"value": "339"
										},
										{
											"begin": 18714,
											"end": 18789,
											"name": "JUMPI"
										},
										{
											"begin": 18775,
											"end": 18780,
											"name": "DUP1"
										},
										{
											"begin": 18775,
											"end": 18789,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18775,
											"end": 18789,
											"name": "ADD"
										},
										{
											"begin": 18775,
											"end": 18789,
											"name": "MLOAD"
										},
										{
											"begin": 18714,
											"end": 18789,
											"name": "PUSH [tag]",
											"value": "340"
										},
										{
											"begin": 18714,
											"end": 18789,
											"name": "JUMP"
										},
										{
											"begin": 18714,
											"end": 18789,
											"name": "tag",
											"value": "339"
										},
										{
											"begin": 18714,
											"end": 18789,
											"name": "JUMPDEST"
										},
										{
											"begin": 18758,
											"end": 18763,
											"name": "DUP1"
										},
										{
											"begin": 18758,
											"end": 18772,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18758,
											"end": 18772,
											"name": "ADD"
										},
										{
											"begin": 18758,
											"end": 18772,
											"name": "MLOAD"
										},
										{
											"begin": 18714,
											"end": 18789,
											"name": "tag",
											"value": "340"
										},
										{
											"begin": 18714,
											"end": 18789,
											"name": "JUMPDEST"
										},
										{
											"begin": 18707,
											"end": 18789,
											"name": "SWAP2"
										},
										{
											"begin": 18707,
											"end": 18789,
											"name": "POP"
										},
										{
											"begin": 18707,
											"end": 18789,
											"name": "POP"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "SWAP1"
										},
										{
											"begin": 18550,
											"end": 18796,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SLOAD"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "EXP"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "DIV"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1024,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "PUSH [tag]",
											"value": "342"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPI"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "POP"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "PUSH [tag]",
											"value": "343"
										},
										{
											"begin": 1040,
											"end": 1053,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "tag",
											"value": "343"
										},
										{
											"begin": 1040,
											"end": 1055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "tag",
											"value": "342"
										},
										{
											"begin": 1024,
											"end": 1055,
											"name": "JUMPDEST"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "DUP1"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "PUSH [tag]",
											"value": "344"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPI"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "POP"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "DUP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SLOAD"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "EXP"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "SWAP1"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "DIV"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1060,
											"end": 1071,
											"name": "AND"
										},
										{
											"begin": 1059,
											"end": 1071,
											"name": "ISZERO"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "tag",
											"value": "344"
										},
										{
											"begin": 1024,
											"end": 1071,
											"name": "JUMPDEST"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH [tag]",
											"value": "345"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPI"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP3"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MSTORE"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH data",
											"value": "9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "CODECOPY"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "ADD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "POP"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "MLOAD"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "DUP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP2"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SUB"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "SWAP1"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "REVERT"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "tag",
											"value": "345"
										},
										{
											"begin": 1016,
											"end": 1122,
											"name": "JUMPDEST"
										},
										{
											"begin": 1129,
											"end": 1148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DUP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SLOAD"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "EXP"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "DIV"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1164,
											"name": "AND"
										},
										{
											"begin": 1151,
											"end": 1164,
											"name": "ISZERO"
										},
										{
											"begin": 1129,
											"end": 1164,
											"name": "SWAP1"
										},
										{
											"begin": 1129,
											"end": 1164,
											"name": "POP"
										},
										{
											"begin": 1174,
											"end": 1188,
											"name": "DUP1"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "ISZERO"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "PUSH [tag]",
											"value": "346"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPI"
										},
										{
											"begin": 1213,
											"end": 1217,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1210,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "EXP"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SLOAD"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP2"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "NOT"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "AND"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP4"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "ISZERO"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "MUL"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "OR"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SSTORE"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "POP"
										},
										{
											"begin": 1239,
											"end": 1243,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1225,
											"end": 1236,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1236,
											"name": "DUP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "EXP"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SLOAD"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP2"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "NOT"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "AND"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP4"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ISZERO"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "MUL"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "OR"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SWAP1"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "SSTORE"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "POP"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "tag",
											"value": "346"
										},
										{
											"begin": 1170,
											"end": 1250,
											"name": "JUMPDEST"
										},
										{
											"begin": 7679,
											"end": 7680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7661,
											"end": 7681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7661,
											"end": 7681,
											"name": "AND"
										},
										{
											"begin": 7661,
											"end": 7667,
											"name": "DUP13"
										},
										{
											"begin": 7661,
											"end": 7681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7661,
											"end": 7681,
											"name": "AND"
										},
										{
											"begin": 7661,
											"end": 7681,
											"name": "EQ"
										},
										{
											"begin": 7661,
											"end": 7681,
											"name": "ISZERO"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "PUSH [tag]",
											"value": "348"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "JUMPI"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "MLOAD"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "DUP2"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "MSTORE"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "ADD"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "DUP1"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "DUP1"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "ADD"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "DUP3"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "DUP2"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "SUB"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "DUP3"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "MSTORE"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "DUP2"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "MSTORE"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "ADD"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "DUP1"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "PUSH",
											"value": "7A65726F20616464726573730000000000000000000000000000000000000000"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "DUP2"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "MSTORE"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "POP"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "ADD"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "SWAP2"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "POP"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "POP"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "MLOAD"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "DUP1"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "SWAP2"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "SUB"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "SWAP1"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "REVERT"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "tag",
											"value": "348"
										},
										{
											"begin": 7653,
											"end": 7698,
											"name": "JUMPDEST"
										},
										{
											"begin": 7716,
											"end": 7742,
											"name": "PUSH [tag]",
											"value": "349"
										},
										{
											"begin": 7716,
											"end": 7729,
											"name": "DUP12"
										},
										{
											"begin": 7716,
											"end": 7740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7716,
											"end": 7740,
											"name": "AND"
										},
										{
											"begin": 7716,
											"end": 7740,
											"name": "PUSH [tag]",
											"value": "350"
										},
										{
											"begin": 7716,
											"end": 7742,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7716,
											"end": 7742,
											"name": "tag",
											"value": "349"
										},
										{
											"begin": 7716,
											"end": 7742,
											"name": "JUMPDEST"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "PUSH [tag]",
											"value": "351"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "JUMPI"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "MLOAD"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "DUP2"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "MSTORE"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "ADD"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "DUP1"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "DUP1"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "ADD"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "DUP3"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "DUP2"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "SUB"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "DUP3"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "MSTORE"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "DUP2"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "MSTORE"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "ADD"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "DUP1"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "PUSH",
											"value": "6E6F74206120636F6E7472616374206164647265737300000000000000000000"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "DUP2"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "MSTORE"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "POP"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "ADD"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "SWAP2"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "POP"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "POP"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "MLOAD"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "DUP1"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "SWAP2"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "SUB"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "SWAP1"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "REVERT"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "tag",
											"value": "351"
										},
										{
											"begin": 7708,
											"end": 7769,
											"name": "JUMPDEST"
										},
										{
											"begin": 7779,
											"end": 7809,
											"name": "PUSH [tag]",
											"value": "352"
										},
										{
											"begin": 7798,
											"end": 7808,
											"name": "CALLER"
										},
										{
											"begin": 7779,
											"end": 7797,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 7779,
											"end": 7809,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7779,
											"end": 7809,
											"name": "tag",
											"value": "352"
										},
										{
											"begin": 7779,
											"end": 7809,
											"name": "JUMPDEST"
										},
										{
											"begin": 7819,
											"end": 7847,
											"name": "PUSH [tag]",
											"value": "353"
										},
										{
											"begin": 7819,
											"end": 7845,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 7819,
											"end": 7847,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7819,
											"end": 7847,
											"name": "tag",
											"value": "353"
										},
										{
											"begin": 7819,
											"end": 7847,
											"name": "JUMPDEST"
										},
										{
											"begin": 7880,
											"end": 7893,
											"name": "DUP11"
										},
										{
											"begin": 7857,
											"end": 7862,
											"name": "PUSH",
											"value": "99"
										},
										{
											"begin": 7857,
											"end": 7862,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "EXP"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "DUP2"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "SLOAD"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "DUP2"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "MUL"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "NOT"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "AND"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "SWAP1"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "DUP4"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "AND"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "MUL"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "OR"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "SWAP1"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "SSTORE"
										},
										{
											"begin": 7857,
											"end": 7894,
											"name": "POP"
										},
										{
											"begin": 7904,
											"end": 7916,
											"name": "PUSH [tag]",
											"value": "354"
										},
										{
											"begin": 7911,
											"end": 7915,
											"name": "DUP10"
										},
										{
											"begin": 7904,
											"end": 7910,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 7904,
											"end": 7916,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7904,
											"end": 7916,
											"name": "tag",
											"value": "354"
										},
										{
											"begin": 7904,
											"end": 7916,
											"name": "JUMPDEST"
										},
										{
											"begin": 7926,
											"end": 7976,
											"name": "PUSH [tag]",
											"value": "355"
										},
										{
											"begin": 7952,
											"end": 7975,
											"name": "DUP9"
										},
										{
											"begin": 7926,
											"end": 7951,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 7926,
											"end": 7976,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7926,
											"end": 7976,
											"name": "tag",
											"value": "355"
										},
										{
											"begin": 7926,
											"end": 7976,
											"name": "JUMPDEST"
										},
										{
											"begin": 7986,
											"end": 8040,
											"name": "PUSH [tag]",
											"value": "356"
										},
										{
											"begin": 8014,
											"end": 8039,
											"name": "DUP8"
										},
										{
											"begin": 7986,
											"end": 8013,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 7986,
											"end": 8040,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7986,
											"end": 8040,
											"name": "tag",
											"value": "356"
										},
										{
											"begin": 7986,
											"end": 8040,
											"name": "JUMPDEST"
										},
										{
											"begin": 8050,
											"end": 8100,
											"name": "PUSH [tag]",
											"value": "357"
										},
										{
											"begin": 8076,
											"end": 8099,
											"name": "DUP7"
										},
										{
											"begin": 8050,
											"end": 8075,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 8050,
											"end": 8100,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8050,
											"end": 8100,
											"name": "tag",
											"value": "357"
										},
										{
											"begin": 8050,
											"end": 8100,
											"name": "JUMPDEST"
										},
										{
											"begin": 8110,
											"end": 8150,
											"name": "PUSH [tag]",
											"value": "358"
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "DUP6"
										},
										{
											"begin": 8110,
											"end": 8130,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 8110,
											"end": 8150,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8110,
											"end": 8150,
											"name": "tag",
											"value": "358"
										},
										{
											"begin": 8110,
											"end": 8150,
											"name": "JUMPDEST"
										},
										{
											"begin": 8160,
											"end": 8228,
											"name": "PUSH [tag]",
											"value": "359"
										},
										{
											"begin": 8181,
											"end": 8195,
											"name": "DUP5"
										},
										{
											"begin": 8197,
											"end": 8211,
											"name": "DUP5"
										},
										{
											"begin": 8213,
											"end": 8227,
											"name": "DUP5"
										},
										{
											"begin": 8160,
											"end": 8180,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 8160,
											"end": 8228,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8160,
											"end": 8228,
											"name": "tag",
											"value": "359"
										},
										{
											"begin": 8160,
											"end": 8228,
											"name": "JUMPDEST"
										},
										{
											"begin": 8238,
											"end": 8306,
											"name": "PUSH [tag]",
											"value": "360"
										},
										{
											"begin": 8273,
											"end": 8305,
											"name": "DUP11"
										},
										{
											"begin": 8238,
											"end": 8272,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 8238,
											"end": 8306,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8238,
											"end": 8306,
											"name": "tag",
											"value": "360"
										},
										{
											"begin": 8238,
											"end": 8306,
											"name": "JUMPDEST"
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "PUSH [tag]",
											"value": "361"
										},
										{
											"begin": 8342,
											"end": 8348,
											"name": "DUP13"
										},
										{
											"begin": 8316,
											"end": 8341,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "tag",
											"value": "361"
										},
										{
											"begin": 8316,
											"end": 8349,
											"name": "JUMPDEST"
										},
										{
											"begin": 1268,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "ISZERO"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "PUSH [tag]",
											"value": "362"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPI"
										},
										{
											"begin": 1307,
											"end": 1312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "DUP1"
										},
										{
											"begin": 1292,
											"end": 1304,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "EXP"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP2"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SLOAD"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP2"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "MUL"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "NOT"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "AND"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "DUP4"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "ISZERO"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "ISZERO"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "MUL"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "OR"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "SSTORE"
										},
										{
											"begin": 1292,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "tag",
											"value": "362"
										},
										{
											"begin": 1264,
											"end": 1319,
											"name": "JUMPDEST"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "POP"
										},
										{
											"begin": 7213,
											"end": 8356,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "JUMPDEST"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "AC"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "MSTORE"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "DUP2"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "MSTORE"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "KECCAK256"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "MSTORE"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "DUP1"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "MSTORE"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "KECCAK256"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP2"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "POP"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SWAP2"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "POP"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "POP"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "SLOAD"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "DUP2"
										},
										{
											"begin": 5698,
											"end": 5763,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "364"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "tag",
											"value": "364"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "365"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPI"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "REVERT"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "tag",
											"value": "365"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 16677,
											"end": 16678,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16657,
											"end": 16679,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16657,
											"end": 16679,
											"name": "AND"
										},
										{
											"begin": 16657,
											"end": 16665,
											"name": "DUP2"
										},
										{
											"begin": 16657,
											"end": 16679,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16657,
											"end": 16679,
											"name": "AND"
										},
										{
											"begin": 16657,
											"end": 16679,
											"name": "EQ"
										},
										{
											"begin": 16657,
											"end": 16679,
											"name": "ISZERO"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "PUSH [tag]",
											"value": "367"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "JUMPI"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "MLOAD"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "DUP2"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "MSTORE"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "ADD"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "DUP1"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "DUP1"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "ADD"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "DUP3"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "DUP2"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "SUB"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "DUP3"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "MSTORE"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "PUSH",
											"value": "C"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "DUP2"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "MSTORE"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "ADD"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "DUP1"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "PUSH",
											"value": "7A65726F20616464726573730000000000000000000000000000000000000000"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "DUP2"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "MSTORE"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "POP"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "ADD"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "SWAP2"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "POP"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "POP"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "MLOAD"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "DUP1"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "SWAP2"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "SUB"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "SWAP1"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "REVERT"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "tag",
											"value": "367"
										},
										{
											"begin": 16649,
											"end": 16696,
											"name": "JUMPDEST"
										},
										{
											"begin": 16734,
											"end": 16738,
											"name": "ADDRESS"
										},
										{
											"begin": 16714,
											"end": 16739,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16714,
											"end": 16739,
											"name": "AND"
										},
										{
											"begin": 16714,
											"end": 16722,
											"name": "DUP2"
										},
										{
											"begin": 16714,
											"end": 16739,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16714,
											"end": 16739,
											"name": "AND"
										},
										{
											"begin": 16714,
											"end": 16739,
											"name": "EQ"
										},
										{
											"begin": 16714,
											"end": 16739,
											"name": "ISZERO"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "PUSH [tag]",
											"value": "368"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "JUMPI"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "MLOAD"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "DUP2"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "MSTORE"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "DUP3"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "DUP2"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "SUB"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "DUP3"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "MSTORE"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "DUP2"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "MSTORE"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "PUSH",
											"value": "77726F6E67206164647265737300000000000000000000000000000000000000"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "DUP2"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "MSTORE"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "ADD"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "SWAP2"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "POP"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "MLOAD"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "DUP1"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "SWAP2"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "SUB"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "SWAP1"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "REVERT"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "tag",
											"value": "368"
										},
										{
											"begin": 16706,
											"end": 16757,
											"name": "JUMPDEST"
										},
										{
											"begin": 16767,
											"end": 16792,
											"name": "PUSH [tag]",
											"value": "369"
										},
										{
											"begin": 16767,
											"end": 16792,
											"name": "PUSH [tag]",
											"value": "336"
										},
										{
											"begin": 16767,
											"end": 16792,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16767,
											"end": 16792,
											"name": "tag",
											"value": "369"
										},
										{
											"begin": 16767,
											"end": 16792,
											"name": "JUMPDEST"
										},
										{
											"begin": 16795,
											"end": 16831,
											"name": "PUSH",
											"value": "9A"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "MLOAD"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "DUP1"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "ADD"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "MSTORE"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "SWAP1"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "DUP2"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "DUP3"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "ADD"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "SWAP1"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "SLOAD"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "SWAP1"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "EXP"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "SWAP1"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "DIV"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "AND"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "AND"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "AND"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "DUP2"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "MSTORE"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "ADD"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "DUP3"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "ADD"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "SWAP1"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "SLOAD"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "SWAP1"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "EXP"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "SWAP1"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "DIV"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "AND"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "AND"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "AND"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "DUP2"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "MSTORE"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "ADD"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "DUP3"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "ADD"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "SLOAD"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "DUP2"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "MSTORE"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "POP"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "POP"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "SWAP1"
										},
										{
											"begin": 16767,
											"end": 16831,
											"name": "POP"
										},
										{
											"begin": 16864,
											"end": 16865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16845,
											"end": 16850,
											"name": "DUP2"
										},
										{
											"begin": 16845,
											"end": 16860,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16845,
											"end": 16860,
											"name": "ADD"
										},
										{
											"begin": 16845,
											"end": 16860,
											"name": "MLOAD"
										},
										{
											"begin": 16845,
											"end": 16865,
											"name": "EQ"
										},
										{
											"begin": 16841,
											"end": 17026,
											"name": "ISZERO"
										},
										{
											"begin": 16841,
											"end": 17026,
											"name": "PUSH [tag]",
											"value": "370"
										},
										{
											"begin": 16841,
											"end": 17026,
											"name": "JUMPI"
										},
										{
											"begin": 16898,
											"end": 16906,
											"name": "DUP2"
										},
										{
											"begin": 16881,
											"end": 16886,
											"name": "DUP2"
										},
										{
											"begin": 16881,
											"end": 16895,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16881,
											"end": 16895,
											"name": "ADD"
										},
										{
											"begin": 16881,
											"end": 16906,
											"name": "SWAP1"
										},
										{
											"begin": 16881,
											"end": 16906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16881,
											"end": 16906,
											"name": "AND"
										},
										{
											"begin": 16881,
											"end": 16906,
											"name": "SWAP1"
										},
										{
											"begin": 16881,
											"end": 16906,
											"name": "DUP2"
										},
										{
											"begin": 16881,
											"end": 16906,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16881,
											"end": 16906,
											"name": "AND"
										},
										{
											"begin": 16881,
											"end": 16906,
											"name": "DUP2"
										},
										{
											"begin": 16881,
											"end": 16906,
											"name": "MSTORE"
										},
										{
											"begin": 16881,
											"end": 16906,
											"name": "POP"
										},
										{
											"begin": 16881,
											"end": 16906,
											"name": "POP"
										},
										{
											"begin": 16841,
											"end": 17026,
											"name": "PUSH [tag]",
											"value": "371"
										},
										{
											"begin": 16841,
											"end": 17026,
											"name": "JUMP"
										},
										{
											"begin": 16841,
											"end": 17026,
											"name": "tag",
											"value": "370"
										},
										{
											"begin": 16841,
											"end": 17026,
											"name": "JUMPDEST"
										},
										{
											"begin": 16927,
											"end": 16968,
											"name": "PUSH [tag]",
											"value": "372"
										},
										{
											"begin": 16952,
											"end": 16957,
											"name": "DUP2"
										},
										{
											"begin": 16952,
											"end": 16967,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16952,
											"end": 16967,
											"name": "ADD"
										},
										{
											"begin": 16952,
											"end": 16967,
											"name": "MLOAD"
										},
										{
											"begin": 16927,
											"end": 16951,
											"name": "PUSH [tag]",
											"value": "338"
										},
										{
											"begin": 16927,
											"end": 16968,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16927,
											"end": 16968,
											"name": "tag",
											"value": "372"
										},
										{
											"begin": 16927,
											"end": 16968,
											"name": "JUMPDEST"
										},
										{
											"begin": 16923,
											"end": 17026,
											"name": "ISZERO"
										},
										{
											"begin": 16923,
											"end": 17026,
											"name": "PUSH [tag]",
											"value": "373"
										},
										{
											"begin": 16923,
											"end": 17026,
											"name": "JUMPI"
										},
										{
											"begin": 17001,
											"end": 17006,
											"name": "DUP1"
										},
										{
											"begin": 17001,
											"end": 17015,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17001,
											"end": 17015,
											"name": "ADD"
										},
										{
											"begin": 17001,
											"end": 17015,
											"name": "MLOAD"
										},
										{
											"begin": 16984,
											"end": 16989,
											"name": "DUP2"
										},
										{
											"begin": 16984,
											"end": 16998,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16984,
											"end": 16998,
											"name": "ADD"
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "SWAP1"
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "AND"
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "SWAP1"
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "DUP2"
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "AND"
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "DUP2"
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "MSTORE"
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "POP"
										},
										{
											"begin": 16984,
											"end": 17015,
											"name": "POP"
										},
										{
											"begin": 16923,
											"end": 17026,
											"name": "tag",
											"value": "373"
										},
										{
											"begin": 16923,
											"end": 17026,
											"name": "JUMPDEST"
										},
										{
											"begin": 16841,
											"end": 17026,
											"name": "tag",
											"value": "371"
										},
										{
											"begin": 16841,
											"end": 17026,
											"name": "JUMPDEST"
										},
										{
											"begin": 17052,
											"end": 17060,
											"name": "DUP2"
										},
										{
											"begin": 17035,
											"end": 17040,
											"name": "DUP2"
										},
										{
											"begin": 17035,
											"end": 17049,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17035,
											"end": 17049,
											"name": "ADD"
										},
										{
											"begin": 17035,
											"end": 17060,
											"name": "SWAP1"
										},
										{
											"begin": 17035,
											"end": 17060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17035,
											"end": 17060,
											"name": "AND"
										},
										{
											"begin": 17035,
											"end": 17060,
											"name": "SWAP1"
										},
										{
											"begin": 17035,
											"end": 17060,
											"name": "DUP2"
										},
										{
											"begin": 17035,
											"end": 17060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17035,
											"end": 17060,
											"name": "AND"
										},
										{
											"begin": 17035,
											"end": 17060,
											"name": "DUP2"
										},
										{
											"begin": 17035,
											"end": 17060,
											"name": "MSTORE"
										},
										{
											"begin": 17035,
											"end": 17060,
											"name": "POP"
										},
										{
											"begin": 17035,
											"end": 17060,
											"name": "POP"
										},
										{
											"begin": 17088,
											"end": 17094,
											"name": "PUSH [tag]",
											"value": "374"
										},
										{
											"begin": 17088,
											"end": 17092,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 17088,
											"end": 17094,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17088,
											"end": 17094,
											"name": "tag",
											"value": "374"
										},
										{
											"begin": 17088,
											"end": 17094,
											"name": "JUMPDEST"
										},
										{
											"begin": 17070,
											"end": 17075,
											"name": "DUP2"
										},
										{
											"begin": 17070,
											"end": 17085,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17070,
											"end": 17085,
											"name": "ADD"
										},
										{
											"begin": 17070,
											"end": 17094,
											"name": "DUP2"
										},
										{
											"begin": 17070,
											"end": 17094,
											"name": "DUP2"
										},
										{
											"begin": 17070,
											"end": 17094,
											"name": "MSTORE"
										},
										{
											"begin": 17070,
											"end": 17094,
											"name": "POP"
										},
										{
											"begin": 17070,
											"end": 17094,
											"name": "POP"
										},
										{
											"begin": 17143,
											"end": 17148,
											"name": "DUP1"
										},
										{
											"begin": 17104,
											"end": 17140,
											"name": "PUSH",
											"value": "9A"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "DUP3"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "ADD"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "MLOAD"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "DUP2"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "ADD"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "EXP"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "DUP2"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "SLOAD"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "DUP2"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "MUL"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "NOT"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "AND"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "SWAP1"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "DUP4"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "AND"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "MUL"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "OR"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "SWAP1"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "SSTORE"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "DUP3"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "ADD"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "MLOAD"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "DUP2"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "ADD"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "EXP"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "DUP2"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "SLOAD"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "DUP2"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "MUL"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "NOT"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "AND"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "SWAP1"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "DUP4"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "AND"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "MUL"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "OR"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "SWAP1"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "SSTORE"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "DUP3"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "ADD"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "MLOAD"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "DUP2"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "ADD"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "SSTORE"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "SWAP1"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17104,
											"end": 17148,
											"name": "POP"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "PUSH",
											"value": "26A68C9D9649FB5E7A060A37B211FFD1D9A4FE6EB068BFB33DECBA647D4ED539"
										},
										{
											"begin": 17198,
											"end": 17206,
											"name": "DUP3"
										},
										{
											"begin": 17208,
											"end": 17218,
											"name": "CALLER"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "MLOAD"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "DUP1"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "DUP4"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "AND"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "AND"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "DUP2"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "MSTORE"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "ADD"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "DUP3"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "AND"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "AND"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "DUP2"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "MSTORE"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "ADD"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "SWAP3"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "POP"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "POP"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "POP"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "MLOAD"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "DUP1"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "SWAP2"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "SUB"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "SWAP1"
										},
										{
											"begin": 17163,
											"end": 17219,
											"name": "LOG1"
										},
										{
											"begin": 1219,
											"end": 1220,
											"name": "POP"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "POP"
										},
										{
											"begin": 16560,
											"end": 17226,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "JUMPDEST"
										},
										{
											"begin": 4629,
											"end": 4635,
											"name": "PUSH",
											"value": "93A80"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "DUP2"
										},
										{
											"begin": 4584,
											"end": 4635,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "JUMPDEST"
										},
										{
											"begin": 17320,
											"end": 17327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "PUSH [tag]",
											"value": "376"
										},
										{
											"begin": 17365,
											"end": 17373,
											"name": "PUSH",
											"value": "9D"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "MLOAD"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "DUP1"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "ADD"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "MSTORE"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "SWAP1"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "DUP2"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "DUP3"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "ADD"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "SLOAD"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "DUP2"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "MSTORE"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "ADD"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "DUP3"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "ADD"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "SLOAD"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "DUP2"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "MSTORE"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "ADD"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "DUP3"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "ADD"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "SLOAD"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "DUP2"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "MSTORE"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "POP"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "POP"
										},
										{
											"begin": 17346,
											"end": 17364,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "tag",
											"value": "376"
										},
										{
											"begin": 17346,
											"end": 17374,
											"name": "JUMPDEST"
										},
										{
											"begin": 17339,
											"end": 17374,
											"name": "SWAP1"
										},
										{
											"begin": 17339,
											"end": 17374,
											"name": "POP"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "SWAP1"
										},
										{
											"begin": 17284,
											"end": 17381,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "JUMPDEST"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "AE"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "MSTORE"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "DUP2"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "MSTORE"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "KECCAK256"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "MSTORE"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "DUP1"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "MSTORE"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "KECCAK256"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP2"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "POP"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SWAP2"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "POP"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "POP"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "SLOAD"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "DUP2"
										},
										{
											"begin": 5927,
											"end": 6007,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "JUMPDEST"
										},
										{
											"begin": 9400,
											"end": 9401,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9387,
											"end": 9397,
											"name": "DUP3"
										},
										{
											"begin": 9387,
											"end": 9401,
											"name": "GT"
										},
										{
											"begin": 9387,
											"end": 9445,
											"name": "DUP1"
										},
										{
											"begin": 9387,
											"end": 9445,
											"name": "ISZERO"
										},
										{
											"begin": 9387,
											"end": 9445,
											"name": "PUSH [tag]",
											"value": "378"
										},
										{
											"begin": 9387,
											"end": 9445,
											"name": "JUMPI"
										},
										{
											"begin": 9387,
											"end": 9445,
											"name": "POP"
										},
										{
											"begin": 9419,
											"end": 9433,
											"name": "PUSH",
											"value": "AF"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9434,
											"end": 9444,
											"name": "CALLER"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "AND"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "AND"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "DUP2"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "MSTORE"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "ADD"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "SWAP1"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "DUP2"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "MSTORE"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "ADD"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "KECCAK256"
										},
										{
											"begin": 9419,
											"end": 9445,
											"name": "SLOAD"
										},
										{
											"begin": 9405,
											"end": 9415,
											"name": "DUP3"
										},
										{
											"begin": 9405,
											"end": 9445,
											"name": "GT"
										},
										{
											"begin": 9405,
											"end": 9445,
											"name": "ISZERO"
										},
										{
											"begin": 9387,
											"end": 9445,
											"name": "tag",
											"value": "378"
										},
										{
											"begin": 9387,
											"end": 9445,
											"name": "JUMPDEST"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "PUSH [tag]",
											"value": "379"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "JUMPI"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "MLOAD"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "DUP2"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "MSTORE"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "ADD"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "DUP1"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "DUP1"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "ADD"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "DUP3"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "DUP2"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "SUB"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "DUP3"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "MSTORE"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "DUP2"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "MSTORE"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "ADD"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "DUP1"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "PUSH",
											"value": "77726F6E67206465706F73697420696400000000000000000000000000000000"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "DUP2"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "MSTORE"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "POP"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "ADD"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "SWAP2"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "POP"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "POP"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "MLOAD"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "DUP1"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "SWAP2"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "SUB"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "SWAP1"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "REVERT"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "tag",
											"value": "379"
										},
										{
											"begin": 9379,
											"end": 9466,
											"name": "JUMPDEST"
										},
										{
											"begin": 9476,
											"end": 9517,
											"name": "PUSH [tag]",
											"value": "380"
										},
										{
											"begin": 9485,
											"end": 9495,
											"name": "CALLER"
										},
										{
											"begin": 9497,
											"end": 9507,
											"name": "DUP4"
										},
										{
											"begin": 9509,
											"end": 9516,
											"name": "DUP4"
										},
										{
											"begin": 9476,
											"end": 9484,
											"name": "PUSH [tag]",
											"value": "323"
										},
										{
											"begin": 9476,
											"end": 9517,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9476,
											"end": 9517,
											"name": "tag",
											"value": "380"
										},
										{
											"begin": 9476,
											"end": 9517,
											"name": "JUMPDEST"
										},
										{
											"begin": 9527,
											"end": 9543,
											"name": "PUSH [tag]",
											"value": "381"
										},
										{
											"begin": 9538,
											"end": 9542,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "PUSH [tag]",
											"value": "382"
										},
										{
											"begin": 9527,
											"end": 9543,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9527,
											"end": 9543,
											"name": "tag",
											"value": "381"
										},
										{
											"begin": 9527,
											"end": 9543,
											"name": "JUMPDEST"
										},
										{
											"begin": 9561,
											"end": 9566,
											"name": "PUSH",
											"value": "99"
										},
										{
											"begin": 9561,
											"end": 9566,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9561,
											"end": 9566,
											"name": "SWAP1"
										},
										{
											"begin": 9561,
											"end": 9566,
											"name": "SLOAD"
										},
										{
											"begin": 9561,
											"end": 9566,
											"name": "SWAP1"
										},
										{
											"begin": 9561,
											"end": 9566,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 9561,
											"end": 9566,
											"name": "EXP"
										},
										{
											"begin": 9561,
											"end": 9566,
											"name": "SWAP1"
										},
										{
											"begin": 9561,
											"end": 9566,
											"name": "DIV"
										},
										{
											"begin": 9561,
											"end": 9566,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9561,
											"end": 9566,
											"name": "AND"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "AND"
										},
										{
											"begin": 9561,
											"end": 9579,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 9580,
											"end": 9590,
											"name": "CALLER"
										},
										{
											"begin": 9600,
											"end": 9604,
											"name": "ADDRESS"
										},
										{
											"begin": 9607,
											"end": 9614,
											"name": "DUP5"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "MLOAD"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP5"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "AND"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "SHL"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP2"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "MSTORE"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "ADD"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP1"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP5"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "AND"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "AND"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP2"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "MSTORE"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "ADD"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP4"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "AND"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "AND"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP2"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "MSTORE"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "ADD"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP3"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP2"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "MSTORE"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "ADD"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "SWAP4"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "POP"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "POP"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "POP"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "POP"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "MLOAD"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP1"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP4"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "SUB"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP2"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP8"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP1"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "383"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "383"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "POP"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "GAS"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "CALL"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "384"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "384"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "POP"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "POP"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "POP"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "POP"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "MLOAD"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "385"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "385"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP2"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "ADD"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "SWAP1"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP1"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "DUP1"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "MLOAD"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "SWAP1"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "ADD"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "SWAP1"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "SWAP3"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "SWAP2"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "SWAP1"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "POP"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "POP"
										},
										{
											"begin": 9561,
											"end": 9615,
											"name": "POP"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "PUSH [tag]",
											"value": "386"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "JUMPI"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "MLOAD"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "DUP2"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "MSTORE"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "ADD"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "DUP1"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "DUP1"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "ADD"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "DUP3"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "DUP2"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "SUB"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "DUP3"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "MSTORE"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "DUP2"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "MSTORE"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "ADD"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "DUP1"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "PUSH",
											"value": "7472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "DUP2"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "MSTORE"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "POP"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "ADD"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "SWAP2"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "POP"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "POP"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "MLOAD"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "DUP1"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "SWAP2"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "SUB"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "SWAP1"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "REVERT"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "tag",
											"value": "386"
										},
										{
											"begin": 9553,
											"end": 9635,
											"name": "JUMPDEST"
										},
										{
											"begin": 9645,
											"end": 9662,
											"name": "PUSH [tag]",
											"value": "387"
										},
										{
											"begin": 9656,
											"end": 9661,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9645,
											"end": 9655,
											"name": "PUSH [tag]",
											"value": "382"
										},
										{
											"begin": 9645,
											"end": 9662,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9645,
											"end": 9662,
											"name": "tag",
											"value": "387"
										},
										{
											"begin": 9645,
											"end": 9662,
											"name": "JUMPDEST"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "POP"
										},
										{
											"begin": 9308,
											"end": 9669,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "PUSH [tag]",
											"value": "389"
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "tag",
											"value": "389"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "JUMPDEST"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH [tag]",
											"value": "390"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPI"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP3"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MSTORE"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "ADD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "POP"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "MLOAD"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SUB"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "SWAP1"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "REVERT"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "tag",
											"value": "390"
										},
										{
											"begin": 1155,
											"end": 1209,
											"name": "JUMPDEST"
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "PUSH [tag]",
											"value": "392"
										},
										{
											"begin": 2123,
											"end": 2131,
											"name": "DUP2"
										},
										{
											"begin": 2104,
											"end": 2122,
											"name": "PUSH [tag]",
											"value": "393"
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "tag",
											"value": "392"
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "JUMPDEST"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "POP"
										},
										{
											"begin": 2032,
											"end": 2139,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "JUMPDEST"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "PUSH",
											"value": "99"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "SWAP1"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "SLOAD"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "SWAP1"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "EXP"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "SWAP1"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "DIV"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "AND"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "DUP2"
										},
										{
											"begin": 4661,
											"end": 4688,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25357,
											"end": 25657,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 25357,
											"end": 25657,
											"name": "JUMPDEST"
										},
										{
											"begin": 25396,
											"end": 25403,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25598,
											"end": 25601,
											"name": "TIMESTAMP"
										},
										{
											"begin": 25591,
											"end": 25601,
											"name": "SWAP1"
										},
										{
											"begin": 25591,
											"end": 25601,
											"name": "POP"
										},
										{
											"begin": 25357,
											"end": 25657,
											"name": "SWAP1"
										},
										{
											"begin": 25357,
											"end": 25657,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMPDEST"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH [tag]",
											"value": "396"
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "DUP4"
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP4"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MLOAD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1358,
											"end": 1361,
											"name": "PUSH [tag]",
											"value": "397"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "tag",
											"value": "396"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMPDEST"
										},
										{
											"begin": 1351,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "SWAP3"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "SWAP2"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "399"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "399"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 21936,
											"end": 23171,
											"name": "tag",
											"value": "188"
										},
										{
											"begin": 21936,
											"end": 23171,
											"name": "JUMPDEST"
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1392,
											"end": 1405,
											"name": "PUSH",
											"value": "66"
										},
										{
											"begin": 1392,
											"end": 1405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "DUP3"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "DUP3"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "SLOAD"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "SWAP3"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "POP"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "POP"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "SWAP1"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "SSTORE"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "POP"
										},
										{
											"begin": 1420,
											"end": 1440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1456,
											"name": "PUSH",
											"value": "66"
										},
										{
											"begin": 1443,
											"end": 1456,
											"name": "SLOAD"
										},
										{
											"begin": 1420,
											"end": 1456,
											"name": "SWAP1"
										},
										{
											"begin": 1420,
											"end": 1456,
											"name": "POP"
										},
										{
											"begin": 22062,
											"end": 22063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22056,
											"end": 22059,
											"name": "DUP5"
										},
										{
											"begin": 22056,
											"end": 22063,
											"name": "GT"
										},
										{
											"begin": 22056,
											"end": 22097,
											"name": "DUP1"
										},
										{
											"begin": 22056,
											"end": 22097,
											"name": "ISZERO"
										},
										{
											"begin": 22056,
											"end": 22097,
											"name": "PUSH [tag]",
											"value": "402"
										},
										{
											"begin": 22056,
											"end": 22097,
											"name": "JUMPI"
										},
										{
											"begin": 22056,
											"end": 22097,
											"name": "POP"
										},
										{
											"begin": 22074,
											"end": 22088,
											"name": "PUSH",
											"value": "AF"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22089,
											"end": 22096,
											"name": "DUP7"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "AND"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "AND"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "DUP2"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "MSTORE"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "ADD"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "SWAP1"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "DUP2"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "MSTORE"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "ADD"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "KECCAK256"
										},
										{
											"begin": 22074,
											"end": 22097,
											"name": "SLOAD"
										},
										{
											"begin": 22067,
											"end": 22070,
											"name": "DUP5"
										},
										{
											"begin": 22067,
											"end": 22097,
											"name": "GT"
										},
										{
											"begin": 22067,
											"end": 22097,
											"name": "ISZERO"
										},
										{
											"begin": 22056,
											"end": 22097,
											"name": "tag",
											"value": "402"
										},
										{
											"begin": 22056,
											"end": 22097,
											"name": "JUMPDEST"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "PUSH [tag]",
											"value": "403"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "JUMPI"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "MLOAD"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "DUP2"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "MSTORE"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "ADD"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "DUP1"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "DUP1"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "ADD"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "DUP3"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "DUP2"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "SUB"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "DUP3"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "MSTORE"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "DUP2"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "MSTORE"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "ADD"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "DUP1"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "PUSH",
											"value": "77726F6E67206465706F73697420696400000000000000000000000000000000"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "DUP2"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "MSTORE"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "POP"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "ADD"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "SWAP2"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "POP"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "POP"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "MLOAD"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "DUP1"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "SWAP2"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "SUB"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "SWAP1"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "REVERT"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "tag",
											"value": "403"
										},
										{
											"begin": 22048,
											"end": 22118,
											"name": "JUMPDEST"
										},
										{
											"begin": 22161,
											"end": 22162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22136,
											"end": 22144,
											"name": "PUSH",
											"value": "AC"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22145,
											"end": 22152,
											"name": "DUP8"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "AND"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "AND"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "DUP2"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "MSTORE"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "ADD"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "SWAP1"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "DUP2"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "MSTORE"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "ADD"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22136,
											"end": 22153,
											"name": "KECCAK256"
										},
										{
											"begin": 22136,
											"end": 22158,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22154,
											"end": 22157,
											"name": "DUP7"
										},
										{
											"begin": 22136,
											"end": 22158,
											"name": "DUP2"
										},
										{
											"begin": 22136,
											"end": 22158,
											"name": "MSTORE"
										},
										{
											"begin": 22136,
											"end": 22158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22136,
											"end": 22158,
											"name": "ADD"
										},
										{
											"begin": 22136,
											"end": 22158,
											"name": "SWAP1"
										},
										{
											"begin": 22136,
											"end": 22158,
											"name": "DUP2"
										},
										{
											"begin": 22136,
											"end": 22158,
											"name": "MSTORE"
										},
										{
											"begin": 22136,
											"end": 22158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22136,
											"end": 22158,
											"name": "ADD"
										},
										{
											"begin": 22136,
											"end": 22158,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22136,
											"end": 22158,
											"name": "KECCAK256"
										},
										{
											"begin": 22136,
											"end": 22158,
											"name": "SLOAD"
										},
										{
											"begin": 22136,
											"end": 22162,
											"name": "GT"
										},
										{
											"begin": 22136,
											"end": 22199,
											"name": "DUP1"
										},
										{
											"begin": 22136,
											"end": 22199,
											"name": "ISZERO"
										},
										{
											"begin": 22136,
											"end": 22199,
											"name": "PUSH [tag]",
											"value": "404"
										},
										{
											"begin": 22136,
											"end": 22199,
											"name": "JUMPI"
										},
										{
											"begin": 22136,
											"end": 22199,
											"name": "POP"
										},
										{
											"begin": 22192,
											"end": 22199,
											"name": "DUP3"
										},
										{
											"begin": 22166,
											"end": 22174,
											"name": "PUSH",
											"value": "AC"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22175,
											"end": 22182,
											"name": "DUP8"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "AND"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "AND"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "DUP2"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "MSTORE"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "ADD"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "SWAP1"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "DUP2"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "MSTORE"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "ADD"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22166,
											"end": 22183,
											"name": "KECCAK256"
										},
										{
											"begin": 22166,
											"end": 22188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22184,
											"end": 22187,
											"name": "DUP7"
										},
										{
											"begin": 22166,
											"end": 22188,
											"name": "DUP2"
										},
										{
											"begin": 22166,
											"end": 22188,
											"name": "MSTORE"
										},
										{
											"begin": 22166,
											"end": 22188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22166,
											"end": 22188,
											"name": "ADD"
										},
										{
											"begin": 22166,
											"end": 22188,
											"name": "SWAP1"
										},
										{
											"begin": 22166,
											"end": 22188,
											"name": "DUP2"
										},
										{
											"begin": 22166,
											"end": 22188,
											"name": "MSTORE"
										},
										{
											"begin": 22166,
											"end": 22188,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22166,
											"end": 22188,
											"name": "ADD"
										},
										{
											"begin": 22166,
											"end": 22188,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22166,
											"end": 22188,
											"name": "KECCAK256"
										},
										{
											"begin": 22166,
											"end": 22188,
											"name": "SLOAD"
										},
										{
											"begin": 22166,
											"end": 22199,
											"name": "LT"
										},
										{
											"begin": 22166,
											"end": 22199,
											"name": "ISZERO"
										},
										{
											"begin": 22136,
											"end": 22199,
											"name": "tag",
											"value": "404"
										},
										{
											"begin": 22136,
											"end": 22199,
											"name": "JUMPDEST"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "PUSH [tag]",
											"value": "405"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "JUMPI"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "MLOAD"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "DUP2"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "MSTORE"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "ADD"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "DUP1"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "DUP1"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "ADD"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "DUP3"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "DUP2"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "SUB"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "DUP3"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "MSTORE"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "DUP2"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "MSTORE"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "ADD"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "DUP1"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "PUSH",
											"value": "696E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "DUP2"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "MSTORE"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "POP"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "ADD"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "SWAP2"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "POP"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "POP"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "MLOAD"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "DUP1"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "SWAP2"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "SUB"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "SWAP1"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "REVERT"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "tag",
											"value": "405"
										},
										{
											"begin": 22128,
											"end": 22222,
											"name": "JUMPDEST"
										},
										{
											"begin": 22240,
											"end": 22282,
											"name": "PUSH [tag]",
											"value": "406"
										},
										{
											"begin": 22269,
											"end": 22276,
											"name": "DUP6"
										},
										{
											"begin": 22278,
											"end": 22281,
											"name": "DUP6"
										},
										{
											"begin": 22240,
											"end": 22268,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 22240,
											"end": 22282,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22240,
											"end": 22282,
											"name": "tag",
											"value": "406"
										},
										{
											"begin": 22240,
											"end": 22282,
											"name": "JUMPDEST"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "PUSH [tag]",
											"value": "407"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "JUMPI"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "MLOAD"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "DUP2"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "MSTORE"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "ADD"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "DUP1"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "DUP1"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "ADD"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "DUP3"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "DUP2"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "SUB"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "DUP3"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "MSTORE"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "PUSH",
											"value": "2B"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "DUP2"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "MSTORE"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "ADD"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "DUP1"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "PUSH data",
											"value": "A232E1F8B28A085F31F602663A0343288B51E95E524FA8082D77230266997C5C"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "PUSH",
											"value": "2B"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "SWAP2"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "CODECOPY"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "ADD"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "SWAP2"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "POP"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "POP"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "MLOAD"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "DUP1"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "SWAP2"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "SUB"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "SWAP1"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "REVERT"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "tag",
											"value": "407"
										},
										{
											"begin": 22232,
											"end": 22330,
											"name": "JUMPDEST"
										},
										{
											"begin": 22341,
											"end": 22364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22366,
											"end": 22384,
											"name": "DUP1"
										},
										{
											"begin": 22388,
											"end": 22416,
											"name": "PUSH [tag]",
											"value": "408"
										},
										{
											"begin": 22394,
											"end": 22401,
											"name": "DUP8"
										},
										{
											"begin": 22403,
											"end": 22406,
											"name": "DUP8"
										},
										{
											"begin": 22408,
											"end": 22415,
											"name": "DUP8"
										},
										{
											"begin": 22388,
											"end": 22393,
											"name": "PUSH [tag]",
											"value": "409"
										},
										{
											"begin": 22388,
											"end": 22416,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22388,
											"end": 22416,
											"name": "tag",
											"value": "408"
										},
										{
											"begin": 22388,
											"end": 22416,
											"name": "JUMPDEST"
										},
										{
											"begin": 22340,
											"end": 22416,
											"name": "SWAP2"
										},
										{
											"begin": 22340,
											"end": 22416,
											"name": "POP"
										},
										{
											"begin": 22340,
											"end": 22416,
											"name": "SWAP2"
										},
										{
											"begin": 22340,
											"end": 22416,
											"name": "POP"
										},
										{
											"begin": 22426,
											"end": 22440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22454,
											"end": 22455,
											"name": "DUP1"
										},
										{
											"begin": 22443,
											"end": 22450,
											"name": "DUP7"
										},
										{
											"begin": 22443,
											"end": 22455,
											"name": "EQ"
										},
										{
											"begin": 22443,
											"end": 22511,
											"name": "PUSH [tag]",
											"value": "410"
										},
										{
											"begin": 22443,
											"end": 22511,
											"name": "JUMPI"
										},
										{
											"begin": 22483,
											"end": 22511,
											"name": "PUSH [tag]",
											"value": "411"
										},
										{
											"begin": 22495,
											"end": 22510,
											"name": "DUP4"
										},
										{
											"begin": 22483,
											"end": 22490,
											"name": "DUP8"
										},
										{
											"begin": 22483,
											"end": 22494,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 22483,
											"end": 22494,
											"name": "SWAP1"
										},
										{
											"begin": 22483,
											"end": 22511,
											"name": "SWAP2"
										},
										{
											"begin": 22483,
											"end": 22511,
											"name": "SWAP1"
										},
										{
											"begin": 22483,
											"end": 22511,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 22483,
											"end": 22511,
											"name": "AND"
										},
										{
											"begin": 22483,
											"end": 22511,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22483,
											"end": 22511,
											"name": "tag",
											"value": "411"
										},
										{
											"begin": 22483,
											"end": 22511,
											"name": "JUMPDEST"
										},
										{
											"begin": 22443,
											"end": 22511,
											"name": "PUSH [tag]",
											"value": "412"
										},
										{
											"begin": 22443,
											"end": 22511,
											"name": "JUMP"
										},
										{
											"begin": 22443,
											"end": 22511,
											"name": "tag",
											"value": "410"
										},
										{
											"begin": 22443,
											"end": 22511,
											"name": "JUMPDEST"
										},
										{
											"begin": 22458,
											"end": 22466,
											"name": "PUSH",
											"value": "AC"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22467,
											"end": 22474,
											"name": "DUP10"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "AND"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "AND"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "DUP2"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "MSTORE"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "ADD"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "SWAP1"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "DUP2"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "MSTORE"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "ADD"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22458,
											"end": 22475,
											"name": "KECCAK256"
										},
										{
											"begin": 22458,
											"end": 22480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22476,
											"end": 22479,
											"name": "DUP9"
										},
										{
											"begin": 22458,
											"end": 22480,
											"name": "DUP2"
										},
										{
											"begin": 22458,
											"end": 22480,
											"name": "MSTORE"
										},
										{
											"begin": 22458,
											"end": 22480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22458,
											"end": 22480,
											"name": "ADD"
										},
										{
											"begin": 22458,
											"end": 22480,
											"name": "SWAP1"
										},
										{
											"begin": 22458,
											"end": 22480,
											"name": "DUP2"
										},
										{
											"begin": 22458,
											"end": 22480,
											"name": "MSTORE"
										},
										{
											"begin": 22458,
											"end": 22480,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22458,
											"end": 22480,
											"name": "ADD"
										},
										{
											"begin": 22458,
											"end": 22480,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22458,
											"end": 22480,
											"name": "KECCAK256"
										},
										{
											"begin": 22458,
											"end": 22480,
											"name": "SLOAD"
										},
										{
											"begin": 22443,
											"end": 22511,
											"name": "tag",
											"value": "412"
										},
										{
											"begin": 22443,
											"end": 22511,
											"name": "JUMPDEST"
										},
										{
											"begin": 22426,
											"end": 22511,
											"name": "SWAP1"
										},
										{
											"begin": 22426,
											"end": 22511,
											"name": "POP"
										},
										{
											"begin": 22546,
											"end": 22580,
											"name": "PUSH [tag]",
											"value": "413"
										},
										{
											"begin": 22573,
											"end": 22579,
											"name": "DUP2"
										},
										{
											"begin": 22546,
											"end": 22554,
											"name": "PUSH",
											"value": "AC"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22555,
											"end": 22562,
											"name": "DUP12"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "AND"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "AND"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "DUP2"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "MSTORE"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "ADD"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "SWAP1"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "DUP2"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "MSTORE"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "ADD"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22546,
											"end": 22563,
											"name": "KECCAK256"
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22564,
											"end": 22567,
											"name": "DUP11"
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "DUP2"
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "MSTORE"
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "ADD"
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "SWAP1"
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "DUP2"
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "MSTORE"
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "ADD"
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "KECCAK256"
										},
										{
											"begin": 22546,
											"end": 22568,
											"name": "SLOAD"
										},
										{
											"begin": 22546,
											"end": 22572,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 22546,
											"end": 22572,
											"name": "SWAP1"
										},
										{
											"begin": 22546,
											"end": 22580,
											"name": "SWAP2"
										},
										{
											"begin": 22546,
											"end": 22580,
											"name": "SWAP1"
										},
										{
											"begin": 22546,
											"end": 22580,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 22546,
											"end": 22580,
											"name": "AND"
										},
										{
											"begin": 22546,
											"end": 22580,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22546,
											"end": 22580,
											"name": "tag",
											"value": "413"
										},
										{
											"begin": 22546,
											"end": 22580,
											"name": "JUMPDEST"
										},
										{
											"begin": 22521,
											"end": 22529,
											"name": "PUSH",
											"value": "AC"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22530,
											"end": 22537,
											"name": "DUP11"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "AND"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "AND"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "DUP2"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "MSTORE"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "ADD"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "SWAP1"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "DUP2"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "MSTORE"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "ADD"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22521,
											"end": 22538,
											"name": "KECCAK256"
										},
										{
											"begin": 22521,
											"end": 22543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22539,
											"end": 22542,
											"name": "DUP10"
										},
										{
											"begin": 22521,
											"end": 22543,
											"name": "DUP2"
										},
										{
											"begin": 22521,
											"end": 22543,
											"name": "MSTORE"
										},
										{
											"begin": 22521,
											"end": 22543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22521,
											"end": 22543,
											"name": "ADD"
										},
										{
											"begin": 22521,
											"end": 22543,
											"name": "SWAP1"
										},
										{
											"begin": 22521,
											"end": 22543,
											"name": "DUP2"
										},
										{
											"begin": 22521,
											"end": 22543,
											"name": "MSTORE"
										},
										{
											"begin": 22521,
											"end": 22543,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22521,
											"end": 22543,
											"name": "ADD"
										},
										{
											"begin": 22521,
											"end": 22543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22521,
											"end": 22543,
											"name": "KECCAK256"
										},
										{
											"begin": 22521,
											"end": 22580,
											"name": "DUP2"
										},
										{
											"begin": 22521,
											"end": 22580,
											"name": "SWAP1"
										},
										{
											"begin": 22521,
											"end": 22580,
											"name": "SSTORE"
										},
										{
											"begin": 22521,
											"end": 22580,
											"name": "POP"
										},
										{
											"begin": 22604,
											"end": 22627,
											"name": "PUSH [tag]",
											"value": "414"
										},
										{
											"begin": 22620,
											"end": 22626,
											"name": "DUP2"
										},
										{
											"begin": 22604,
											"end": 22615,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": 22604,
											"end": 22615,
											"name": "SLOAD"
										},
										{
											"begin": 22604,
											"end": 22619,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 22604,
											"end": 22619,
											"name": "SWAP1"
										},
										{
											"begin": 22604,
											"end": 22627,
											"name": "SWAP2"
										},
										{
											"begin": 22604,
											"end": 22627,
											"name": "SWAP1"
										},
										{
											"begin": 22604,
											"end": 22627,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 22604,
											"end": 22627,
											"name": "AND"
										},
										{
											"begin": 22604,
											"end": 22627,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22604,
											"end": 22627,
											"name": "tag",
											"value": "414"
										},
										{
											"begin": 22604,
											"end": 22627,
											"name": "JUMPDEST"
										},
										{
											"begin": 22590,
											"end": 22601,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": 22590,
											"end": 22627,
											"name": "DUP2"
										},
										{
											"begin": 22590,
											"end": 22627,
											"name": "SWAP1"
										},
										{
											"begin": 22590,
											"end": 22627,
											"name": "SSTORE"
										},
										{
											"begin": 22590,
											"end": 22627,
											"name": "POP"
										},
										{
											"begin": 22667,
											"end": 22668,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22641,
											"end": 22649,
											"name": "PUSH",
											"value": "AC"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22650,
											"end": 22657,
											"name": "DUP11"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "AND"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "AND"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "DUP2"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "MSTORE"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "ADD"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "SWAP1"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "DUP2"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "MSTORE"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "ADD"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "KECCAK256"
										},
										{
											"begin": 22641,
											"end": 22663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22659,
											"end": 22662,
											"name": "DUP10"
										},
										{
											"begin": 22641,
											"end": 22663,
											"name": "DUP2"
										},
										{
											"begin": 22641,
											"end": 22663,
											"name": "MSTORE"
										},
										{
											"begin": 22641,
											"end": 22663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22641,
											"end": 22663,
											"name": "ADD"
										},
										{
											"begin": 22641,
											"end": 22663,
											"name": "SWAP1"
										},
										{
											"begin": 22641,
											"end": 22663,
											"name": "DUP2"
										},
										{
											"begin": 22641,
											"end": 22663,
											"name": "MSTORE"
										},
										{
											"begin": 22641,
											"end": 22663,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22641,
											"end": 22663,
											"name": "ADD"
										},
										{
											"begin": 22641,
											"end": 22663,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22641,
											"end": 22663,
											"name": "KECCAK256"
										},
										{
											"begin": 22641,
											"end": 22663,
											"name": "SLOAD"
										},
										{
											"begin": 22641,
											"end": 22668,
											"name": "EQ"
										},
										{
											"begin": 22637,
											"end": 22725,
											"name": "ISZERO"
										},
										{
											"begin": 22637,
											"end": 22725,
											"name": "PUSH [tag]",
											"value": "415"
										},
										{
											"begin": 22637,
											"end": 22725,
											"name": "JUMPI"
										},
										{
											"begin": 22713,
											"end": 22714,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22684,
											"end": 22696,
											"name": "PUSH",
											"value": "AD"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22697,
											"end": 22704,
											"name": "DUP11"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "AND"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "AND"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "DUP2"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "MSTORE"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "ADD"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "SWAP1"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "DUP2"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "MSTORE"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "ADD"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22684,
											"end": 22705,
											"name": "KECCAK256"
										},
										{
											"begin": 22684,
											"end": 22710,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22706,
											"end": 22709,
											"name": "DUP10"
										},
										{
											"begin": 22684,
											"end": 22710,
											"name": "DUP2"
										},
										{
											"begin": 22684,
											"end": 22710,
											"name": "MSTORE"
										},
										{
											"begin": 22684,
											"end": 22710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22684,
											"end": 22710,
											"name": "ADD"
										},
										{
											"begin": 22684,
											"end": 22710,
											"name": "SWAP1"
										},
										{
											"begin": 22684,
											"end": 22710,
											"name": "DUP2"
										},
										{
											"begin": 22684,
											"end": 22710,
											"name": "MSTORE"
										},
										{
											"begin": 22684,
											"end": 22710,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22684,
											"end": 22710,
											"name": "ADD"
										},
										{
											"begin": 22684,
											"end": 22710,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22684,
											"end": 22710,
											"name": "KECCAK256"
										},
										{
											"begin": 22684,
											"end": 22714,
											"name": "DUP2"
										},
										{
											"begin": 22684,
											"end": 22714,
											"name": "SWAP1"
										},
										{
											"begin": 22684,
											"end": 22714,
											"name": "SSTORE"
										},
										{
											"begin": 22684,
											"end": 22714,
											"name": "POP"
										},
										{
											"begin": 22637,
											"end": 22725,
											"name": "tag",
											"value": "415"
										},
										{
											"begin": 22637,
											"end": 22725,
											"name": "JUMPDEST"
										},
										{
											"begin": 22734,
											"end": 22750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22753,
											"end": 22754,
											"name": "DUP1"
										},
										{
											"begin": 22734,
											"end": 22754,
											"name": "SWAP1"
										},
										{
											"begin": 22734,
											"end": 22754,
											"name": "POP"
										},
										{
											"begin": 22768,
											"end": 22775,
											"name": "DUP6"
										},
										{
											"begin": 22764,
											"end": 22987,
											"name": "ISZERO"
										},
										{
											"begin": 22764,
											"end": 22987,
											"name": "PUSH [tag]",
											"value": "416"
										},
										{
											"begin": 22764,
											"end": 22987,
											"name": "JUMPI"
										},
										{
											"begin": 22802,
											"end": 22832,
											"name": "PUSH [tag]",
											"value": "417"
										},
										{
											"begin": 22824,
											"end": 22831,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 22802,
											"end": 22819,
											"name": "PUSH [tag]",
											"value": "418"
										},
										{
											"begin": 22813,
											"end": 22818,
											"name": "PUSH [tag]",
											"value": "419"
										},
										{
											"begin": 22813,
											"end": 22816,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 22813,
											"end": 22818,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22813,
											"end": 22818,
											"name": "tag",
											"value": "419"
										},
										{
											"begin": 22813,
											"end": 22818,
											"name": "JUMPDEST"
										},
										{
											"begin": 22802,
											"end": 22808,
											"name": "DUP6"
										},
										{
											"begin": 22802,
											"end": 22812,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 22802,
											"end": 22812,
											"name": "SWAP1"
										},
										{
											"begin": 22802,
											"end": 22819,
											"name": "SWAP2"
										},
										{
											"begin": 22802,
											"end": 22819,
											"name": "SWAP1"
										},
										{
											"begin": 22802,
											"end": 22819,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 22802,
											"end": 22819,
											"name": "AND"
										},
										{
											"begin": 22802,
											"end": 22819,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22802,
											"end": 22819,
											"name": "tag",
											"value": "418"
										},
										{
											"begin": 22802,
											"end": 22819,
											"name": "JUMPDEST"
										},
										{
											"begin": 22802,
											"end": 22823,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 22802,
											"end": 22823,
											"name": "SWAP1"
										},
										{
											"begin": 22802,
											"end": 22832,
											"name": "SWAP2"
										},
										{
											"begin": 22802,
											"end": 22832,
											"name": "SWAP1"
										},
										{
											"begin": 22802,
											"end": 22832,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 22802,
											"end": 22832,
											"name": "AND"
										},
										{
											"begin": 22802,
											"end": 22832,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22802,
											"end": 22832,
											"name": "tag",
											"value": "417"
										},
										{
											"begin": 22802,
											"end": 22832,
											"name": "JUMPDEST"
										},
										{
											"begin": 22791,
											"end": 22832,
											"name": "SWAP1"
										},
										{
											"begin": 22791,
											"end": 22832,
											"name": "POP"
										},
										{
											"begin": 22855,
											"end": 22875,
											"name": "PUSH [tag]",
											"value": "420"
										},
										{
											"begin": 22866,
											"end": 22874,
											"name": "DUP2"
										},
										{
											"begin": 22855,
											"end": 22861,
											"name": "DUP4"
										},
										{
											"begin": 22855,
											"end": 22865,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 22855,
											"end": 22865,
											"name": "SWAP1"
										},
										{
											"begin": 22855,
											"end": 22875,
											"name": "SWAP2"
										},
										{
											"begin": 22855,
											"end": 22875,
											"name": "SWAP1"
										},
										{
											"begin": 22855,
											"end": 22875,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 22855,
											"end": 22875,
											"name": "AND"
										},
										{
											"begin": 22855,
											"end": 22875,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22855,
											"end": 22875,
											"name": "tag",
											"value": "420"
										},
										{
											"begin": 22855,
											"end": 22875,
											"name": "JUMPDEST"
										},
										{
											"begin": 22846,
											"end": 22875,
											"name": "SWAP2"
										},
										{
											"begin": 22846,
											"end": 22875,
											"name": "POP"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "PUSH",
											"value": "99"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "SWAP1"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "SLOAD"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "SWAP1"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "EXP"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "SWAP1"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "DIV"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22897,
											"end": 22902,
											"name": "AND"
										},
										{
											"begin": 22897,
											"end": 22911,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22897,
											"end": 22911,
											"name": "AND"
										},
										{
											"begin": 22897,
											"end": 22911,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 22912,
											"end": 22945,
											"name": "PUSH [tag]",
											"value": "421"
										},
										{
											"begin": 22912,
											"end": 22943,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 22912,
											"end": 22945,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 22912,
											"end": 22945,
											"name": "tag",
											"value": "421"
										},
										{
											"begin": 22912,
											"end": 22945,
											"name": "JUMPDEST"
										},
										{
											"begin": 22947,
											"end": 22955,
											"name": "DUP4"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "MLOAD"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP4"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "AND"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "SHL"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP2"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "MSTORE"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "ADD"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP1"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP4"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "AND"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "AND"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP2"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "MSTORE"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "ADD"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP3"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP2"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "MSTORE"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "ADD"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "SWAP3"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "POP"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "POP"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "POP"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "MLOAD"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP1"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP4"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "SUB"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP2"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP8"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP1"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "422"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "422"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "POP"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "GAS"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "CALL"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "423"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "423"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "POP"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "POP"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "POP"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "POP"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "MLOAD"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "424"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "424"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP2"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "ADD"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "SWAP1"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP1"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "DUP1"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "MLOAD"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "SWAP1"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "ADD"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "SWAP1"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "SWAP3"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "SWAP2"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "SWAP1"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "POP"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "POP"
										},
										{
											"begin": 22897,
											"end": 22956,
											"name": "POP"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "PUSH [tag]",
											"value": "425"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "JUMPI"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "MLOAD"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "DUP2"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "MSTORE"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "ADD"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "DUP1"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "DUP1"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "ADD"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "DUP3"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "DUP2"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "SUB"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "DUP3"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "MSTORE"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "DUP2"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "MSTORE"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "ADD"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "DUP1"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "PUSH",
											"value": "7472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "DUP2"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "MSTORE"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "POP"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "ADD"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "SWAP2"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "POP"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "POP"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "MLOAD"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "DUP1"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "SWAP2"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "SUB"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "SWAP1"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "REVERT"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "tag",
											"value": "425"
										},
										{
											"begin": 22889,
											"end": 22976,
											"name": "JUMPDEST"
										},
										{
											"begin": 22764,
											"end": 22987,
											"name": "tag",
											"value": "416"
										},
										{
											"begin": 22764,
											"end": 22987,
											"name": "JUMPDEST"
										},
										{
											"begin": 23004,
											"end": 23009,
											"name": "PUSH",
											"value": "99"
										},
										{
											"begin": 23004,
											"end": 23009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23004,
											"end": 23009,
											"name": "SWAP1"
										},
										{
											"begin": 23004,
											"end": 23009,
											"name": "SLOAD"
										},
										{
											"begin": 23004,
											"end": 23009,
											"name": "SWAP1"
										},
										{
											"begin": 23004,
											"end": 23009,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 23004,
											"end": 23009,
											"name": "EXP"
										},
										{
											"begin": 23004,
											"end": 23009,
											"name": "SWAP1"
										},
										{
											"begin": 23004,
											"end": 23009,
											"name": "DIV"
										},
										{
											"begin": 23004,
											"end": 23009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23004,
											"end": 23009,
											"name": "AND"
										},
										{
											"begin": 23004,
											"end": 23018,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23004,
											"end": 23018,
											"name": "AND"
										},
										{
											"begin": 23004,
											"end": 23018,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 23019,
											"end": 23026,
											"name": "DUP11"
										},
										{
											"begin": 23028,
											"end": 23034,
											"name": "DUP5"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "MLOAD"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP4"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "AND"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "SHL"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP2"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "MSTORE"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "ADD"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP1"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP4"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "AND"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "AND"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP2"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "MSTORE"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "ADD"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP3"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP2"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "MSTORE"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "ADD"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "SWAP3"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "POP"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "POP"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "POP"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "MLOAD"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP1"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP4"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "SUB"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP2"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP8"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP1"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "426"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "426"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "POP"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "GAS"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "CALL"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "427"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "427"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "POP"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "POP"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "POP"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "POP"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "MLOAD"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "428"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "428"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP2"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "ADD"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "SWAP1"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP1"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "DUP1"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "MLOAD"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "SWAP1"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "ADD"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "SWAP1"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "SWAP3"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "SWAP2"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "SWAP1"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "POP"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "POP"
										},
										{
											"begin": 23004,
											"end": 23035,
											"name": "POP"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "PUSH [tag]",
											"value": "429"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "JUMPI"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "MLOAD"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "DUP2"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "MSTORE"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "ADD"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "DUP1"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "DUP1"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "ADD"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "DUP3"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "DUP2"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "SUB"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "DUP3"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "MSTORE"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "DUP2"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "MSTORE"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "ADD"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "DUP1"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "PUSH",
											"value": "7472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "DUP2"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "MSTORE"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "POP"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "ADD"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "SWAP2"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "POP"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "POP"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "MLOAD"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "DUP1"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "SWAP2"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "SUB"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "SWAP1"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "REVERT"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "tag",
											"value": "429"
										},
										{
											"begin": 22996,
											"end": 23055,
											"name": "JUMPDEST"
										},
										{
											"begin": 23089,
											"end": 23092,
											"name": "DUP8"
										},
										{
											"begin": 23080,
											"end": 23087,
											"name": "DUP10"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "AND"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "PUSH",
											"value": "6B4651E8F4162F82274A25E57A29F7ED9156D17078E76DD4D05F04BA08831AA4"
										},
										{
											"begin": 23094,
											"end": 23100,
											"name": "DUP5"
										},
										{
											"begin": 23102,
											"end": 23110,
											"name": "DUP5"
										},
										{
											"begin": 23112,
											"end": 23120,
											"name": "PUSH",
											"value": "AC"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23121,
											"end": 23128,
											"name": "DUP16"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "AND"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "AND"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "DUP2"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "MSTORE"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "ADD"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "SWAP1"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "DUP2"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "MSTORE"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "ADD"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23112,
											"end": 23129,
											"name": "KECCAK256"
										},
										{
											"begin": 23112,
											"end": 23134,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23130,
											"end": 23133,
											"name": "DUP15"
										},
										{
											"begin": 23112,
											"end": 23134,
											"name": "DUP2"
										},
										{
											"begin": 23112,
											"end": 23134,
											"name": "MSTORE"
										},
										{
											"begin": 23112,
											"end": 23134,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23112,
											"end": 23134,
											"name": "ADD"
										},
										{
											"begin": 23112,
											"end": 23134,
											"name": "SWAP1"
										},
										{
											"begin": 23112,
											"end": 23134,
											"name": "DUP2"
										},
										{
											"begin": 23112,
											"end": 23134,
											"name": "MSTORE"
										},
										{
											"begin": 23112,
											"end": 23134,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23112,
											"end": 23134,
											"name": "ADD"
										},
										{
											"begin": 23112,
											"end": 23134,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23112,
											"end": 23134,
											"name": "KECCAK256"
										},
										{
											"begin": 23112,
											"end": 23134,
											"name": "SLOAD"
										},
										{
											"begin": 23136,
											"end": 23151,
											"name": "DUP10"
										},
										{
											"begin": 23153,
											"end": 23163,
											"name": "DUP10"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "MLOAD"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "DUP1"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "DUP7"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "DUP2"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "MSTORE"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "ADD"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "DUP6"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "DUP2"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "MSTORE"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "ADD"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "DUP5"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "DUP2"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "MSTORE"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "ADD"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "DUP4"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "DUP2"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "MSTORE"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "ADD"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "DUP3"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "DUP2"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "MSTORE"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "ADD"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "SWAP6"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "POP"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "POP"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "POP"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "POP"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "POP"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "POP"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "MLOAD"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "DUP1"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "SWAP2"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "SUB"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "SWAP1"
										},
										{
											"begin": 23070,
											"end": 23164,
											"name": "LOG3"
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "PUSH",
											"value": "66"
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "SLOAD"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "DUP2"
										},
										{
											"begin": 1485,
											"end": 1514,
											"name": "EQ"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH [tag]",
											"value": "430"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "JUMPI"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "MLOAD"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP2"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "MSTORE"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "ADD"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP1"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP1"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "ADD"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP3"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP2"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "SUB"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP3"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "MSTORE"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP2"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "MSTORE"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "ADD"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP1"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP2"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "MSTORE"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "POP"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "ADD"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "SWAP2"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "POP"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "POP"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "MLOAD"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP1"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "SWAP2"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "SUB"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "SWAP1"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "REVERT"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "tag",
											"value": "430"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "JUMPDEST"
										},
										{
											"begin": 21936,
											"end": 23171,
											"name": "POP"
										},
										{
											"begin": 21936,
											"end": 23171,
											"name": "POP"
										},
										{
											"begin": 21936,
											"end": 23171,
											"name": "POP"
										},
										{
											"begin": 21936,
											"end": 23171,
											"name": "POP"
										},
										{
											"begin": 21936,
											"end": 23171,
											"name": "POP"
										},
										{
											"begin": 21936,
											"end": 23171,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24282,
											"end": 24641,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 24282,
											"end": 24641,
											"name": "JUMPDEST"
										},
										{
											"begin": 24396,
											"end": 24397,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24376,
											"end": 24382,
											"name": "DUP3"
										},
										{
											"begin": 24376,
											"end": 24392,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 24376,
											"end": 24392,
											"name": "ADD"
										},
										{
											"begin": 24376,
											"end": 24392,
											"name": "SLOAD"
										},
										{
											"begin": 24376,
											"end": 24397,
											"name": "EQ"
										},
										{
											"begin": 24372,
											"end": 24563,
											"name": "ISZERO"
										},
										{
											"begin": 24372,
											"end": 24563,
											"name": "PUSH [tag]",
											"value": "432"
										},
										{
											"begin": 24372,
											"end": 24563,
											"name": "JUMPI"
										},
										{
											"begin": 24431,
											"end": 24440,
											"name": "DUP1"
										},
										{
											"begin": 24413,
											"end": 24419,
											"name": "DUP3"
										},
										{
											"begin": 24413,
											"end": 24428,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24413,
											"end": 24428,
											"name": "ADD"
										},
										{
											"begin": 24413,
											"end": 24440,
											"name": "DUP2"
										},
										{
											"begin": 24413,
											"end": 24440,
											"name": "SWAP1"
										},
										{
											"begin": 24413,
											"end": 24440,
											"name": "SSTORE"
										},
										{
											"begin": 24413,
											"end": 24440,
											"name": "POP"
										},
										{
											"begin": 24372,
											"end": 24563,
											"name": "PUSH [tag]",
											"value": "433"
										},
										{
											"begin": 24372,
											"end": 24563,
											"name": "JUMP"
										},
										{
											"begin": 24372,
											"end": 24563,
											"name": "tag",
											"value": "432"
										},
										{
											"begin": 24372,
											"end": 24563,
											"name": "JUMPDEST"
										},
										{
											"begin": 24461,
											"end": 24503,
											"name": "PUSH [tag]",
											"value": "434"
										},
										{
											"begin": 24486,
											"end": 24492,
											"name": "DUP3"
										},
										{
											"begin": 24486,
											"end": 24502,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 24486,
											"end": 24502,
											"name": "ADD"
										},
										{
											"begin": 24486,
											"end": 24502,
											"name": "SLOAD"
										},
										{
											"begin": 24461,
											"end": 24485,
											"name": "PUSH [tag]",
											"value": "338"
										},
										{
											"begin": 24461,
											"end": 24503,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24461,
											"end": 24503,
											"name": "tag",
											"value": "434"
										},
										{
											"begin": 24461,
											"end": 24503,
											"name": "JUMPDEST"
										},
										{
											"begin": 24457,
											"end": 24563,
											"name": "ISZERO"
										},
										{
											"begin": 24457,
											"end": 24563,
											"name": "PUSH [tag]",
											"value": "435"
										},
										{
											"begin": 24457,
											"end": 24563,
											"name": "JUMPI"
										},
										{
											"begin": 24537,
											"end": 24543,
											"name": "DUP2"
										},
										{
											"begin": 24537,
											"end": 24552,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 24537,
											"end": 24552,
											"name": "ADD"
										},
										{
											"begin": 24537,
											"end": 24552,
											"name": "SLOAD"
										},
										{
											"begin": 24519,
											"end": 24525,
											"name": "DUP3"
										},
										{
											"begin": 24519,
											"end": 24534,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24519,
											"end": 24534,
											"name": "ADD"
										},
										{
											"begin": 24519,
											"end": 24552,
											"name": "DUP2"
										},
										{
											"begin": 24519,
											"end": 24552,
											"name": "SWAP1"
										},
										{
											"begin": 24519,
											"end": 24552,
											"name": "SSTORE"
										},
										{
											"begin": 24519,
											"end": 24552,
											"name": "POP"
										},
										{
											"begin": 24457,
											"end": 24563,
											"name": "tag",
											"value": "435"
										},
										{
											"begin": 24457,
											"end": 24563,
											"name": "JUMPDEST"
										},
										{
											"begin": 24372,
											"end": 24563,
											"name": "tag",
											"value": "433"
										},
										{
											"begin": 24372,
											"end": 24563,
											"name": "JUMPDEST"
										},
										{
											"begin": 24590,
											"end": 24599,
											"name": "DUP1"
										},
										{
											"begin": 24572,
											"end": 24578,
											"name": "DUP3"
										},
										{
											"begin": 24572,
											"end": 24587,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 24572,
											"end": 24587,
											"name": "ADD"
										},
										{
											"begin": 24572,
											"end": 24599,
											"name": "DUP2"
										},
										{
											"begin": 24572,
											"end": 24599,
											"name": "SWAP1"
										},
										{
											"begin": 24572,
											"end": 24599,
											"name": "SSTORE"
										},
										{
											"begin": 24572,
											"end": 24599,
											"name": "POP"
										},
										{
											"begin": 24628,
											"end": 24634,
											"name": "PUSH [tag]",
											"value": "436"
										},
										{
											"begin": 24628,
											"end": 24632,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 24628,
											"end": 24634,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24628,
											"end": 24634,
											"name": "tag",
											"value": "436"
										},
										{
											"begin": 24628,
											"end": 24634,
											"name": "JUMPDEST"
										},
										{
											"begin": 24609,
											"end": 24615,
											"name": "DUP3"
										},
										{
											"begin": 24609,
											"end": 24625,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 24609,
											"end": 24625,
											"name": "ADD"
										},
										{
											"begin": 24609,
											"end": 24634,
											"name": "DUP2"
										},
										{
											"begin": 24609,
											"end": 24634,
											"name": "SWAP1"
										},
										{
											"begin": 24609,
											"end": 24634,
											"name": "SSTORE"
										},
										{
											"begin": 24609,
											"end": 24634,
											"name": "POP"
										},
										{
											"begin": 24282,
											"end": 24641,
											"name": "POP"
										},
										{
											"begin": 24282,
											"end": 24641,
											"name": "POP"
										},
										{
											"begin": 24282,
											"end": 24641,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "JUMPDEST"
										},
										{
											"begin": 3131,
											"end": 3138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH [tag]",
											"value": "438"
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "DUP4"
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "DUP4"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MLOAD"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP1"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ADD"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP1"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP2"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ADD"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP2"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "POP"
										},
										{
											"begin": 3157,
											"end": 3160,
											"name": "PUSH [tag]",
											"value": "439"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "tag",
											"value": "438"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "JUMPDEST"
										},
										{
											"begin": 3150,
											"end": 3196,
											"name": "SWAP1"
										},
										{
											"begin": 3150,
											"end": 3196,
											"name": "POP"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "SWAP3"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "SWAP2"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "POP"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "POP"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 705,
											"end": 1231,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 705,
											"end": 1231,
											"name": "JUMPDEST"
										},
										{
											"begin": 816,
											"end": 817,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 810,
											"end": 812,
											"name": "DUP2"
										},
										{
											"begin": 810,
											"end": 817,
											"name": "EQ"
										},
										{
											"begin": 810,
											"end": 817,
											"name": "ISZERO"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "PUSH [tag]",
											"value": "441"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "JUMPI"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "MLOAD"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "MSTORE"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "DUP3"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "SUB"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "DUP3"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "MSTORE"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "MSTORE"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "PUSH",
											"value": "73686F756C642062652067726561746572207468616E20300000000000000000"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "MSTORE"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "POP"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "ADD"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "SWAP2"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "POP"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "POP"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "MLOAD"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "SWAP2"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "SUB"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "SWAP1"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "REVERT"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "tag",
											"value": "441"
										},
										{
											"begin": 802,
											"end": 846,
											"name": "JUMPDEST"
										},
										{
											"begin": 884,
											"end": 908,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 917,
											"name": "PUSH [tag]",
											"value": "442"
										},
										{
											"begin": 911,
											"end": 915,
											"name": "PUSH [tag]",
											"value": "443"
										},
										{
											"begin": 911,
											"end": 917,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 917,
											"name": "tag",
											"value": "442"
										},
										{
											"begin": 911,
											"end": 917,
											"name": "JUMPDEST"
										},
										{
											"begin": 884,
											"end": 917,
											"name": "SWAP1"
										},
										{
											"begin": 884,
											"end": 917,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 950,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 931,
											"end": 935,
											"name": "DUP6"
										},
										{
											"begin": 931,
											"end": 945,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 931,
											"end": 945,
											"name": "ADD"
										},
										{
											"begin": 931,
											"end": 945,
											"name": "SLOAD"
										},
										{
											"begin": 931,
											"end": 950,
											"name": "EQ"
										},
										{
											"begin": 927,
											"end": 1137,
											"name": "ISZERO"
										},
										{
											"begin": 927,
											"end": 1137,
											"name": "PUSH [tag]",
											"value": "444"
										},
										{
											"begin": 927,
											"end": 1137,
											"name": "JUMPI"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "MSTORE"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 990,
											"end": 992,
											"name": "DUP6"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "MSTORE"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 994,
											"end": 996,
											"name": "DUP5"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "MSTORE"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 998,
											"end": 1000,
											"name": "DUP4"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "MSTORE"
										},
										{
											"begin": 983,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 970,
											"name": "DUP6"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 966,
											"end": 980,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "SSTORE"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "SSTORE"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "DUP3"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "SSTORE"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "SWAP1"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 966,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 927,
											"end": 1137,
											"name": "PUSH [tag]",
											"value": "445"
										},
										{
											"begin": 927,
											"end": 1137,
											"name": "JUMP"
										},
										{
											"begin": 927,
											"end": 1137,
											"name": "tag",
											"value": "444"
										},
										{
											"begin": 927,
											"end": 1137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1041,
											"end": 1079,
											"name": "PUSH [tag]",
											"value": "446"
										},
										{
											"begin": 338,
											"end": 344,
											"name": "PUSH",
											"value": "93A80"
										},
										{
											"begin": 1041,
											"end": 1045,
											"name": "DUP7"
										},
										{
											"begin": 1041,
											"end": 1055,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1041,
											"end": 1055,
											"name": "ADD"
										},
										{
											"begin": 1041,
											"end": 1055,
											"name": "SLOAD"
										},
										{
											"begin": 1041,
											"end": 1059,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 1041,
											"end": 1059,
											"name": "SWAP1"
										},
										{
											"begin": 1041,
											"end": 1079,
											"name": "SWAP2"
										},
										{
											"begin": 1041,
											"end": 1079,
											"name": "SWAP1"
										},
										{
											"begin": 1041,
											"end": 1079,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1041,
											"end": 1079,
											"name": "AND"
										},
										{
											"begin": 1041,
											"end": 1079,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1041,
											"end": 1079,
											"name": "tag",
											"value": "446"
										},
										{
											"begin": 1041,
											"end": 1079,
											"name": "JUMPDEST"
										},
										{
											"begin": 1022,
											"end": 1038,
											"name": "DUP2"
										},
										{
											"begin": 1022,
											"end": 1079,
											"name": "GT"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "ISZERO"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "PUSH [tag]",
											"value": "447"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "JUMPI"
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "DUP5"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1112,
											"end": 1126,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1099,
											"name": "DUP6"
										},
										{
											"begin": 1095,
											"end": 1109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1109,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SLOAD"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SSTORE"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SLOAD"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SSTORE"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SLOAD"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SSTORE"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1126,
											"name": "POP"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "tag",
											"value": "447"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "JUMPDEST"
										},
										{
											"begin": 927,
											"end": 1137,
											"name": "tag",
											"value": "445"
										},
										{
											"begin": 927,
											"end": 1137,
											"name": "JUMPDEST"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "MLOAD"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP1"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "MSTORE"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP1"
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "DUP6"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP2"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "MSTORE"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD"
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "DUP5"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP2"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "MSTORE"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "ADD"
										},
										{
											"begin": 1178,
											"end": 1180,
											"name": "DUP4"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "DUP2"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "MSTORE"
										},
										{
											"begin": 1163,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1146,
											"end": 1150,
											"name": "DUP6"
										},
										{
											"begin": 1146,
											"end": 1160,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1146,
											"end": 1160,
											"name": "ADD"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "DUP3"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "ADD"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "MLOAD"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "DUP2"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "ADD"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "SSTORE"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "DUP3"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "ADD"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "MLOAD"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "DUP2"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "ADD"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "SSTORE"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "DUP3"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "ADD"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "MLOAD"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "DUP2"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "ADD"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "SSTORE"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "SWAP1"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1146,
											"end": 1181,
											"name": "POP"
										},
										{
											"begin": 1208,
											"end": 1224,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "DUP6"
										},
										{
											"begin": 1191,
											"end": 1205,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1191,
											"end": 1205,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1224,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1224,
											"name": "SWAP1"
										},
										{
											"begin": 1191,
											"end": 1224,
											"name": "SSTORE"
										},
										{
											"begin": 1191,
											"end": 1224,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 1231,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 1231,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 1231,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 1231,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 1231,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 1231,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24722,
											"end": 24909,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 24722,
											"end": 24909,
											"name": "JUMPDEST"
										},
										{
											"begin": 24798,
											"end": 24805,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24824,
											"end": 24866,
											"name": "PUSH [tag]",
											"value": "449"
										},
										{
											"begin": 24849,
											"end": 24855,
											"name": "DUP3"
										},
										{
											"begin": 24849,
											"end": 24865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24849,
											"end": 24865,
											"name": "ADD"
										},
										{
											"begin": 24849,
											"end": 24865,
											"name": "MLOAD"
										},
										{
											"begin": 24824,
											"end": 24848,
											"name": "PUSH [tag]",
											"value": "338"
										},
										{
											"begin": 24824,
											"end": 24866,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24824,
											"end": 24866,
											"name": "tag",
											"value": "449"
										},
										{
											"begin": 24824,
											"end": 24866,
											"name": "JUMPDEST"
										},
										{
											"begin": 24824,
											"end": 24902,
											"name": "PUSH [tag]",
											"value": "450"
										},
										{
											"begin": 24824,
											"end": 24902,
											"name": "JUMPI"
										},
										{
											"begin": 24887,
											"end": 24893,
											"name": "DUP2"
										},
										{
											"begin": 24887,
											"end": 24902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24887,
											"end": 24902,
											"name": "ADD"
										},
										{
											"begin": 24887,
											"end": 24902,
											"name": "MLOAD"
										},
										{
											"begin": 24824,
											"end": 24902,
											"name": "PUSH [tag]",
											"value": "451"
										},
										{
											"begin": 24824,
											"end": 24902,
											"name": "JUMP"
										},
										{
											"begin": 24824,
											"end": 24902,
											"name": "tag",
											"value": "450"
										},
										{
											"begin": 24824,
											"end": 24902,
											"name": "JUMPDEST"
										},
										{
											"begin": 24869,
											"end": 24875,
											"name": "DUP2"
										},
										{
											"begin": 24869,
											"end": 24884,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24869,
											"end": 24884,
											"name": "ADD"
										},
										{
											"begin": 24869,
											"end": 24884,
											"name": "MLOAD"
										},
										{
											"begin": 24824,
											"end": 24902,
											"name": "tag",
											"value": "451"
										},
										{
											"begin": 24824,
											"end": 24902,
											"name": "JUMPDEST"
										},
										{
											"begin": 24817,
											"end": 24902,
											"name": "SWAP1"
										},
										{
											"begin": 24817,
											"end": 24902,
											"name": "POP"
										},
										{
											"begin": 24722,
											"end": 24909,
											"name": "SWAP2"
										},
										{
											"begin": 24722,
											"end": 24909,
											"name": "SWAP1"
										},
										{
											"begin": 24722,
											"end": 24909,
											"name": "POP"
										},
										{
											"begin": 24722,
											"end": 24909,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1707,
											"end": 2004,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 1707,
											"end": 2004,
											"name": "JUMPDEST"
										},
										{
											"begin": 1780,
											"end": 1787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1800,
											"end": 1809,
											"name": "DUP1"
										},
										{
											"begin": 1811,
											"end": 1819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "DUP1"
										},
										{
											"begin": 1834,
											"end": 1853,
											"name": "PUSH [tag]",
											"value": "453"
										},
										{
											"begin": 1848,
											"end": 1852,
											"name": "DUP7"
										},
										{
											"begin": 1834,
											"end": 1847,
											"name": "PUSH [tag]",
											"value": "251"
										},
										{
											"begin": 1834,
											"end": 1853,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1834,
											"end": 1853,
											"name": "tag",
											"value": "453"
										},
										{
											"begin": 1834,
											"end": 1853,
											"name": "JUMPDEST"
										},
										{
											"begin": 1799,
											"end": 1853,
											"name": "SWAP3"
										},
										{
											"begin": 1799,
											"end": 1853,
											"name": "POP"
										},
										{
											"begin": 1799,
											"end": 1853,
											"name": "SWAP3"
										},
										{
											"begin": 1799,
											"end": 1853,
											"name": "POP"
										},
										{
											"begin": 1799,
											"end": 1853,
											"name": "SWAP3"
										},
										{
											"begin": 1799,
											"end": 1853,
											"name": "POP"
										},
										{
											"begin": 1863,
											"end": 1871,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "DUP3"
										},
										{
											"begin": 1874,
											"end": 1876,
											"name": "DUP7"
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "SUB"
										},
										{
											"begin": 1863,
											"end": 1880,
											"name": "SWAP1"
										},
										{
											"begin": 1863,
											"end": 1880,
											"name": "POP"
										},
										{
											"begin": 1898,
											"end": 1899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1895,
											"name": "DUP2"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "SLT"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "ISZERO"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH [tag]",
											"value": "454"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "JUMPI"
										},
										{
											"begin": 1908,
											"end": 1909,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1909,
											"name": "SWAP5"
										},
										{
											"begin": 1901,
											"end": 1909,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 1909,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 1909,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 1909,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 1909,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 1909,
											"name": "PUSH [tag]",
											"value": "452"
										},
										{
											"begin": 1901,
											"end": 1909,
											"name": "JUMP"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "tag",
											"value": "454"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "JUMPDEST"
										},
										{
											"begin": 1919,
											"end": 1929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "DUP2"
										},
										{
											"begin": 1919,
											"end": 1942,
											"name": "SWAP1"
										},
										{
											"begin": 1919,
											"end": 1942,
											"name": "POP"
										},
										{
											"begin": 1959,
											"end": 1997,
											"name": "PUSH [tag]",
											"value": "455"
										},
										{
											"begin": 1973,
											"end": 1996,
											"name": "PUSH [tag]",
											"value": "456"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "PUSH [tag]",
											"value": "457"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "DUP6"
										},
										{
											"begin": 1973,
											"end": 1982,
											"name": "PUSH [tag]",
											"value": "458"
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "DUP6"
										},
										{
											"begin": 1973,
											"end": 1980,
											"name": "PUSH [tag]",
											"value": "459"
										},
										{
											"begin": 1973,
											"end": 1982,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1973,
											"end": 1982,
											"name": "tag",
											"value": "458"
										},
										{
											"begin": 1973,
											"end": 1982,
											"name": "JUMPDEST"
										},
										{
											"begin": 1973,
											"end": 1986,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 1973,
											"end": 1986,
											"name": "SWAP1"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "SWAP2"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "SWAP1"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "AND"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "tag",
											"value": "457"
										},
										{
											"begin": 1973,
											"end": 1989,
											"name": "JUMPDEST"
										},
										{
											"begin": 1973,
											"end": 1994,
											"name": "PUSH [tag]",
											"value": "460"
										},
										{
											"begin": 1973,
											"end": 1996,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1973,
											"end": 1996,
											"name": "tag",
											"value": "456"
										},
										{
											"begin": 1973,
											"end": 1996,
											"name": "JUMPDEST"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "PUSH [tag]",
											"value": "461"
										},
										{
											"begin": 1965,
											"end": 1967,
											"name": "DUP4"
										},
										{
											"begin": 1959,
											"end": 1960,
											"name": "DUP9"
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "PUSH [tag]",
											"value": "231"
										},
										{
											"begin": 1959,
											"end": 1964,
											"name": "SWAP1"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "SWAP2"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "SWAP1"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "AND"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "tag",
											"value": "461"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "JUMPDEST"
										},
										{
											"begin": 1959,
											"end": 1972,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 1959,
											"end": 1972,
											"name": "SWAP1"
										},
										{
											"begin": 1959,
											"end": 1997,
											"name": "SWAP2"
										},
										{
											"begin": 1959,
											"end": 1997,
											"name": "SWAP1"
										},
										{
											"begin": 1959,
											"end": 1997,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1959,
											"end": 1997,
											"name": "AND"
										},
										{
											"begin": 1959,
											"end": 1997,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1959,
											"end": 1997,
											"name": "tag",
											"value": "455"
										},
										{
											"begin": 1959,
											"end": 1997,
											"name": "JUMPDEST"
										},
										{
											"begin": 1952,
											"end": 1997,
											"name": "SWAP6"
										},
										{
											"begin": 1952,
											"end": 1997,
											"name": "POP"
										},
										{
											"begin": 1952,
											"end": 1997,
											"name": "POP"
										},
										{
											"begin": 1952,
											"end": 1997,
											"name": "POP"
										},
										{
											"begin": 1952,
											"end": 1997,
											"name": "POP"
										},
										{
											"begin": 1952,
											"end": 1997,
											"name": "POP"
										},
										{
											"begin": 1952,
											"end": 1997,
											"name": "POP"
										},
										{
											"begin": 1707,
											"end": 2004,
											"name": "tag",
											"value": "452"
										},
										{
											"begin": 1707,
											"end": 2004,
											"name": "JUMPDEST"
										},
										{
											"begin": 1707,
											"end": 2004,
											"name": "SWAP3"
										},
										{
											"begin": 1707,
											"end": 2004,
											"name": "SWAP2"
										},
										{
											"begin": 1707,
											"end": 2004,
											"name": "POP"
										},
										{
											"begin": 1707,
											"end": 2004,
											"name": "POP"
										},
										{
											"begin": 1707,
											"end": 2004,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "tag",
											"value": "231"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "JUMPDEST"
										},
										{
											"begin": 2217,
											"end": 2224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2464,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2459,
											"name": "DUP4"
										},
										{
											"begin": 2458,
											"end": 2464,
											"name": "EQ"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "ISZERO"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH [tag]",
											"value": "463"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "JUMPI"
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2488,
											"name": "SWAP1"
										},
										{
											"begin": 2480,
											"end": 2488,
											"name": "POP"
										},
										{
											"begin": 2480,
											"end": 2488,
											"name": "PUSH [tag]",
											"value": "462"
										},
										{
											"begin": 2480,
											"end": 2488,
											"name": "JUMP"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "tag",
											"value": "463"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "JUMPDEST"
										},
										{
											"begin": 2509,
											"end": 2518,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2526,
											"name": "DUP3"
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "DUP5"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "MUL"
										},
										{
											"begin": 2509,
											"end": 2526,
											"name": "SWAP1"
										},
										{
											"begin": 2509,
											"end": 2526,
											"name": "POP"
										},
										{
											"begin": 2553,
											"end": 2554,
											"name": "DUP3"
										},
										{
											"begin": 2548,
											"end": 2549,
											"name": "DUP5"
										},
										{
											"begin": 2544,
											"end": 2545,
											"name": "DUP3"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "PUSH [tag]",
											"value": "464"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "JUMPI"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "INVALID"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "tag",
											"value": "464"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "JUMPDEST"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "DIV"
										},
										{
											"begin": 2544,
											"end": 2554,
											"name": "EQ"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH [tag]",
											"value": "465"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "JUMPI"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MLOAD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP3"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SUB"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP3"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH data",
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "CODECOPY"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MLOAD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SUB"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "REVERT"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "tag",
											"value": "465"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "JUMPDEST"
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "DUP1"
										},
										{
											"begin": 2603,
											"end": 2611,
											"name": "SWAP2"
										},
										{
											"begin": 2603,
											"end": 2611,
											"name": "POP"
										},
										{
											"begin": 2603,
											"end": 2611,
											"name": "POP"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "tag",
											"value": "462"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "JUMPDEST"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "SWAP3"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "SWAP2"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "POP"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "POP"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1287,
											"end": 1624,
											"name": "tag",
											"value": "251"
										},
										{
											"begin": 1287,
											"end": 1624,
											"name": "JUMPDEST"
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1368,
											"name": "DUP1"
										},
										{
											"begin": 1370,
											"end": 1377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1403,
											"name": "DUP1"
										},
										{
											"begin": 1415,
											"end": 1453,
											"name": "PUSH [tag]",
											"value": "467"
										},
										{
											"begin": 338,
											"end": 344,
											"name": "PUSH",
											"value": "93A80"
										},
										{
											"begin": 1415,
											"end": 1419,
											"name": "DUP7"
										},
										{
											"begin": 1415,
											"end": 1429,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1415,
											"end": 1429,
											"name": "ADD"
										},
										{
											"begin": 1415,
											"end": 1429,
											"name": "SLOAD"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 1415,
											"end": 1433,
											"name": "SWAP1"
										},
										{
											"begin": 1415,
											"end": 1453,
											"name": "SWAP2"
										},
										{
											"begin": 1415,
											"end": 1453,
											"name": "SWAP1"
										},
										{
											"begin": 1415,
											"end": 1453,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1415,
											"end": 1453,
											"name": "AND"
										},
										{
											"begin": 1415,
											"end": 1453,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1415,
											"end": 1453,
											"name": "tag",
											"value": "467"
										},
										{
											"begin": 1415,
											"end": 1453,
											"name": "JUMPDEST"
										},
										{
											"begin": 1406,
											"end": 1412,
											"name": "PUSH [tag]",
											"value": "468"
										},
										{
											"begin": 1406,
											"end": 1410,
											"name": "PUSH [tag]",
											"value": "443"
										},
										{
											"begin": 1406,
											"end": 1412,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1406,
											"end": 1412,
											"name": "tag",
											"value": "468"
										},
										{
											"begin": 1406,
											"end": 1412,
											"name": "JUMPDEST"
										},
										{
											"begin": 1406,
											"end": 1453,
											"name": "GT"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "SWAP1"
										},
										{
											"begin": 1389,
											"end": 1453,
											"name": "POP"
										},
										{
											"begin": 1470,
											"end": 1479,
											"name": "DUP1"
										},
										{
											"begin": 1470,
											"end": 1617,
											"name": "PUSH [tag]",
											"value": "469"
										},
										{
											"begin": 1470,
											"end": 1617,
											"name": "JUMPI"
										},
										{
											"begin": 1564,
											"end": 1568,
											"name": "DUP5"
										},
										{
											"begin": 1564,
											"end": 1578,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1578,
											"name": "ADD"
										},
										{
											"begin": 1564,
											"end": 1580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1580,
											"name": "ADD"
										},
										{
											"begin": 1564,
											"end": 1580,
											"name": "SLOAD"
										},
										{
											"begin": 1582,
											"end": 1586,
											"name": "DUP6"
										},
										{
											"begin": 1582,
											"end": 1596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1596,
											"name": "ADD"
										},
										{
											"begin": 1582,
											"end": 1598,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1582,
											"end": 1598,
											"name": "ADD"
										},
										{
											"begin": 1582,
											"end": 1598,
											"name": "SLOAD"
										},
										{
											"begin": 1600,
											"end": 1604,
											"name": "DUP7"
										},
										{
											"begin": 1600,
											"end": 1614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1614,
											"name": "ADD"
										},
										{
											"begin": 1600,
											"end": 1616,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1600,
											"end": 1616,
											"name": "ADD"
										},
										{
											"begin": 1600,
											"end": 1616,
											"name": "SLOAD"
										},
										{
											"begin": 1470,
											"end": 1617,
											"name": "PUSH [tag]",
											"value": "470"
										},
										{
											"begin": 1470,
											"end": 1617,
											"name": "JUMP"
										},
										{
											"begin": 1470,
											"end": 1617,
											"name": "tag",
											"value": "469"
										},
										{
											"begin": 1470,
											"end": 1617,
											"name": "JUMPDEST"
										},
										{
											"begin": 1495,
											"end": 1499,
											"name": "DUP5"
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1495,
											"end": 1509,
											"name": "ADD"
										},
										{
											"begin": 1495,
											"end": 1511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1511,
											"name": "ADD"
										},
										{
											"begin": 1495,
											"end": 1511,
											"name": "SLOAD"
										},
										{
											"begin": 1513,
											"end": 1517,
											"name": "DUP6"
										},
										{
											"begin": 1513,
											"end": 1527,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1513,
											"end": 1527,
											"name": "ADD"
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "ADD"
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "SLOAD"
										},
										{
											"begin": 1531,
											"end": 1535,
											"name": "DUP7"
										},
										{
											"begin": 1531,
											"end": 1545,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1531,
											"end": 1545,
											"name": "ADD"
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "ADD"
										},
										{
											"begin": 1531,
											"end": 1547,
											"name": "SLOAD"
										},
										{
											"begin": 1470,
											"end": 1617,
											"name": "tag",
											"value": "470"
										},
										{
											"begin": 1470,
											"end": 1617,
											"name": "JUMPDEST"
										},
										{
											"begin": 1463,
											"end": 1617,
											"name": "SWAP4"
										},
										{
											"begin": 1463,
											"end": 1617,
											"name": "POP"
										},
										{
											"begin": 1463,
											"end": 1617,
											"name": "SWAP4"
										},
										{
											"begin": 1463,
											"end": 1617,
											"name": "POP"
										},
										{
											"begin": 1463,
											"end": 1617,
											"name": "SWAP4"
										},
										{
											"begin": 1463,
											"end": 1617,
											"name": "POP"
										},
										{
											"begin": 1463,
											"end": 1617,
											"name": "POP"
										},
										{
											"begin": 1287,
											"end": 1624,
											"name": "SWAP2"
										},
										{
											"begin": 1287,
											"end": 1624,
											"name": "SWAP4"
										},
										{
											"begin": 1287,
											"end": 1624,
											"name": "SWAP1"
										},
										{
											"begin": 1287,
											"end": 1624,
											"name": "SWAP3"
										},
										{
											"begin": 1287,
											"end": 1624,
											"name": "POP"
										},
										{
											"begin": 1287,
											"end": 1624,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "JUMPDEST"
										},
										{
											"begin": 1456,
											"end": 1460,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1809,
											"name": "DUP1"
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "ADDRESS"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "SWAP1"
										},
										{
											"begin": 1797,
											"end": 1825,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1880,
											"name": "DUP2"
										},
										{
											"begin": 1864,
											"end": 1881,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1858,
											"end": 1881,
											"name": "SWAP1"
										},
										{
											"begin": 1858,
											"end": 1881,
											"name": "POP"
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "DUP2"
										},
										{
											"begin": 1895,
											"end": 1902,
											"name": "EQ"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP3"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "SWAP1"
										},
										{
											"begin": 1409,
											"end": 1907,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 867,
											"end": 963,
											"name": "tag",
											"value": "284"
										},
										{
											"begin": 867,
											"end": 963,
											"name": "JUMPDEST"
										},
										{
											"begin": 912,
											"end": 927,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 946,
											"end": 956,
											"name": "CALLER"
										},
										{
											"begin": 939,
											"end": 956,
											"name": "SWAP1"
										},
										{
											"begin": 939,
											"end": 956,
											"name": "POP"
										},
										{
											"begin": 867,
											"end": 963,
											"name": "SWAP1"
										},
										{
											"begin": 867,
											"end": 963,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "tag",
											"value": "318"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMPDEST"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "PUSH [tag]",
											"value": "474"
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP4"
										},
										{
											"begin": 793,
											"end": 798,
											"name": "DUP5"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "AND"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "SWAP1"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "SHL"
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP5"
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP5"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP4"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "NOT"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 744,
											"end": 762,
											"name": "PUSH [tag]",
											"value": "475"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "tag",
											"value": "474"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMPDEST"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 20923,
											"end": 21595,
											"name": "tag",
											"value": "323"
										},
										{
											"begin": 20923,
											"end": 21595,
											"name": "JUMPDEST"
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1392,
											"end": 1405,
											"name": "PUSH",
											"value": "66"
										},
										{
											"begin": 1392,
											"end": 1405,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "DUP3"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "DUP3"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "SLOAD"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "SWAP3"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "POP"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "POP"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "SWAP1"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "SSTORE"
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "POP"
										},
										{
											"begin": 1420,
											"end": 1440,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1456,
											"name": "PUSH",
											"value": "66"
										},
										{
											"begin": 1443,
											"end": 1456,
											"name": "SLOAD"
										},
										{
											"begin": 1420,
											"end": 1456,
											"name": "SWAP1"
										},
										{
											"begin": 1420,
											"end": 1456,
											"name": "POP"
										},
										{
											"begin": 21038,
											"end": 21039,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21028,
											"end": 21035,
											"name": "DUP3"
										},
										{
											"begin": 21028,
											"end": 21039,
											"name": "GT"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "PUSH [tag]",
											"value": "478"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "JUMPI"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "MLOAD"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "DUP2"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "MSTORE"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "ADD"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "DUP1"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "DUP1"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "ADD"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "DUP3"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "DUP2"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "SUB"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "DUP3"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "MSTORE"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "DUP2"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "MSTORE"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "ADD"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "DUP1"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "PUSH data",
											"value": "335651F95752B5B2F9E6F772A51EA21EC319E6D88B710D1D6B6AED8232257902"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "SWAP2"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "CODECOPY"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "ADD"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "SWAP2"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "POP"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "POP"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "MLOAD"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "DUP1"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "SWAP2"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "SUB"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "SWAP1"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "REVERT"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "tag",
											"value": "478"
										},
										{
											"begin": 21020,
											"end": 21080,
											"name": "JUMPDEST"
										},
										{
											"begin": 21091,
											"end": 21112,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21118,
											"end": 21140,
											"name": "PUSH [tag]",
											"value": "479"
										},
										{
											"begin": 21118,
											"end": 21138,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 21118,
											"end": 21140,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21118,
											"end": 21140,
											"name": "tag",
											"value": "479"
										},
										{
											"begin": 21118,
											"end": 21140,
											"name": "JUMPDEST"
										},
										{
											"begin": 21090,
											"end": 21140,
											"name": "POP"
										},
										{
											"begin": 21090,
											"end": 21140,
											"name": "POP"
										},
										{
											"begin": 21090,
											"end": 21140,
											"name": "SWAP1"
										},
										{
											"begin": 21090,
											"end": 21140,
											"name": "POP"
										},
										{
											"begin": 21171,
											"end": 21172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21154,
											"end": 21167,
											"name": "DUP2"
										},
										{
											"begin": 21154,
											"end": 21172,
											"name": "EQ"
										},
										{
											"begin": 21154,
											"end": 21200,
											"name": "DUP1"
										},
										{
											"begin": 21154,
											"end": 21200,
											"name": "ISZERO"
										},
										{
											"begin": 21154,
											"end": 21200,
											"name": "PUSH [tag]",
											"value": "480"
										},
										{
											"begin": 21154,
											"end": 21200,
											"name": "JUMPI"
										},
										{
											"begin": 21154,
											"end": 21200,
											"name": "POP"
										},
										{
											"begin": 21199,
											"end": 21200,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21176,
											"end": 21195,
											"name": "PUSH [tag]",
											"value": "481"
										},
										{
											"begin": 21176,
											"end": 21193,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 21176,
											"end": 21195,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21176,
											"end": 21195,
											"name": "tag",
											"value": "481"
										},
										{
											"begin": 21176,
											"end": 21195,
											"name": "JUMPDEST"
										},
										{
											"begin": 21176,
											"end": 21200,
											"name": "EQ"
										},
										{
											"begin": 21154,
											"end": 21200,
											"name": "tag",
											"value": "480"
										},
										{
											"begin": 21154,
											"end": 21200,
											"name": "JUMPDEST"
										},
										{
											"begin": 21150,
											"end": 21228,
											"name": "ISZERO"
										},
										{
											"begin": 21150,
											"end": 21228,
											"name": "PUSH [tag]",
											"value": "482"
										},
										{
											"begin": 21150,
											"end": 21228,
											"name": "JUMPI"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "MLOAD"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "DUP2"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "MSTORE"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "ADD"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "DUP1"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "DUP1"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "ADD"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "DUP3"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "DUP2"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "SUB"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "DUP3"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "MSTORE"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "DUP2"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "MSTORE"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "ADD"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "DUP1"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "PUSH",
											"value": "656D697373696F6E2073746F7070656400000000000000000000000000000000"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "DUP2"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "MSTORE"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "POP"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "ADD"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "SWAP2"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "POP"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "POP"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "MLOAD"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "DUP1"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "SWAP2"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "SUB"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "SWAP1"
										},
										{
											"begin": 21202,
											"end": 21228,
											"name": "REVERT"
										},
										{
											"begin": 21150,
											"end": 21228,
											"name": "tag",
											"value": "482"
										},
										{
											"begin": 21150,
											"end": 21228,
											"name": "JUMPDEST"
										},
										{
											"begin": 21239,
											"end": 21256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21258,
											"end": 21276,
											"name": "DUP1"
										},
										{
											"begin": 21280,
											"end": 21302,
											"name": "PUSH [tag]",
											"value": "483"
										},
										{
											"begin": 21286,
											"end": 21293,
											"name": "DUP8"
										},
										{
											"begin": 21295,
											"end": 21298,
											"name": "DUP8"
										},
										{
											"begin": 21300,
											"end": 21301,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21280,
											"end": 21285,
											"name": "PUSH [tag]",
											"value": "409"
										},
										{
											"begin": 21280,
											"end": 21302,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21280,
											"end": 21302,
											"name": "tag",
											"value": "483"
										},
										{
											"begin": 21280,
											"end": 21302,
											"name": "JUMPDEST"
										},
										{
											"begin": 21238,
											"end": 21302,
											"name": "SWAP2"
										},
										{
											"begin": 21238,
											"end": 21302,
											"name": "POP"
										},
										{
											"begin": 21238,
											"end": 21302,
											"name": "SWAP2"
										},
										{
											"begin": 21238,
											"end": 21302,
											"name": "POP"
										},
										{
											"begin": 21312,
											"end": 21330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21333,
											"end": 21368,
											"name": "PUSH [tag]",
											"value": "484"
										},
										{
											"begin": 21360,
											"end": 21367,
											"name": "DUP7"
										},
										{
											"begin": 21333,
											"end": 21341,
											"name": "PUSH",
											"value": "AC"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21342,
											"end": 21349,
											"name": "DUP12"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "AND"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "AND"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "DUP2"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "MSTORE"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "ADD"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "SWAP1"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "DUP2"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "MSTORE"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "ADD"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21333,
											"end": 21350,
											"name": "KECCAK256"
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21351,
											"end": 21354,
											"name": "DUP11"
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "DUP2"
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "MSTORE"
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "ADD"
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "SWAP1"
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "DUP2"
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "MSTORE"
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "ADD"
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "KECCAK256"
										},
										{
											"begin": 21333,
											"end": 21355,
											"name": "SLOAD"
										},
										{
											"begin": 21333,
											"end": 21359,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 21333,
											"end": 21359,
											"name": "SWAP1"
										},
										{
											"begin": 21333,
											"end": 21368,
											"name": "SWAP2"
										},
										{
											"begin": 21333,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21333,
											"end": 21368,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 21333,
											"end": 21368,
											"name": "AND"
										},
										{
											"begin": 21333,
											"end": 21368,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21333,
											"end": 21368,
											"name": "tag",
											"value": "484"
										},
										{
											"begin": 21333,
											"end": 21368,
											"name": "JUMPDEST"
										},
										{
											"begin": 21312,
											"end": 21368,
											"name": "SWAP1"
										},
										{
											"begin": 21312,
											"end": 21368,
											"name": "POP"
										},
										{
											"begin": 21403,
											"end": 21413,
											"name": "DUP1"
										},
										{
											"begin": 21378,
											"end": 21386,
											"name": "PUSH",
											"value": "AC"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21387,
											"end": 21394,
											"name": "DUP11"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "AND"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "AND"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "DUP2"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "MSTORE"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "ADD"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "SWAP1"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "DUP2"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "MSTORE"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "ADD"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21378,
											"end": 21395,
											"name": "KECCAK256"
										},
										{
											"begin": 21378,
											"end": 21400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21396,
											"end": 21399,
											"name": "DUP10"
										},
										{
											"begin": 21378,
											"end": 21400,
											"name": "DUP2"
										},
										{
											"begin": 21378,
											"end": 21400,
											"name": "MSTORE"
										},
										{
											"begin": 21378,
											"end": 21400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21378,
											"end": 21400,
											"name": "ADD"
										},
										{
											"begin": 21378,
											"end": 21400,
											"name": "SWAP1"
										},
										{
											"begin": 21378,
											"end": 21400,
											"name": "DUP2"
										},
										{
											"begin": 21378,
											"end": 21400,
											"name": "MSTORE"
										},
										{
											"begin": 21378,
											"end": 21400,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21378,
											"end": 21400,
											"name": "ADD"
										},
										{
											"begin": 21378,
											"end": 21400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21378,
											"end": 21400,
											"name": "KECCAK256"
										},
										{
											"begin": 21378,
											"end": 21413,
											"name": "DUP2"
										},
										{
											"begin": 21378,
											"end": 21413,
											"name": "SWAP1"
										},
										{
											"begin": 21378,
											"end": 21413,
											"name": "SSTORE"
										},
										{
											"begin": 21378,
											"end": 21413,
											"name": "POP"
										},
										{
											"begin": 21437,
											"end": 21461,
											"name": "PUSH [tag]",
											"value": "485"
										},
										{
											"begin": 21453,
											"end": 21460,
											"name": "DUP7"
										},
										{
											"begin": 21437,
											"end": 21448,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": 21437,
											"end": 21448,
											"name": "SLOAD"
										},
										{
											"begin": 21437,
											"end": 21452,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 21437,
											"end": 21452,
											"name": "SWAP1"
										},
										{
											"begin": 21437,
											"end": 21461,
											"name": "SWAP2"
										},
										{
											"begin": 21437,
											"end": 21461,
											"name": "SWAP1"
										},
										{
											"begin": 21437,
											"end": 21461,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 21437,
											"end": 21461,
											"name": "AND"
										},
										{
											"begin": 21437,
											"end": 21461,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21437,
											"end": 21461,
											"name": "tag",
											"value": "485"
										},
										{
											"begin": 21437,
											"end": 21461,
											"name": "JUMPDEST"
										},
										{
											"begin": 21423,
											"end": 21434,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": 21423,
											"end": 21461,
											"name": "DUP2"
										},
										{
											"begin": 21423,
											"end": 21461,
											"name": "SWAP1"
										},
										{
											"begin": 21423,
											"end": 21461,
											"name": "SSTORE"
										},
										{
											"begin": 21423,
											"end": 21461,
											"name": "POP"
										},
										{
											"begin": 21500,
											"end": 21506,
											"name": "PUSH [tag]",
											"value": "486"
										},
										{
											"begin": 21500,
											"end": 21504,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 21500,
											"end": 21506,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 21500,
											"end": 21506,
											"name": "tag",
											"value": "486"
										},
										{
											"begin": 21500,
											"end": 21506,
											"name": "JUMPDEST"
										},
										{
											"begin": 21471,
											"end": 21483,
											"name": "PUSH",
											"value": "AD"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21484,
											"end": 21491,
											"name": "DUP11"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "AND"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "AND"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "DUP2"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "MSTORE"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "ADD"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "SWAP1"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "DUP2"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "MSTORE"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "ADD"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21471,
											"end": 21492,
											"name": "KECCAK256"
										},
										{
											"begin": 21471,
											"end": 21497,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21493,
											"end": 21496,
											"name": "DUP10"
										},
										{
											"begin": 21471,
											"end": 21497,
											"name": "DUP2"
										},
										{
											"begin": 21471,
											"end": 21497,
											"name": "MSTORE"
										},
										{
											"begin": 21471,
											"end": 21497,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21471,
											"end": 21497,
											"name": "ADD"
										},
										{
											"begin": 21471,
											"end": 21497,
											"name": "SWAP1"
										},
										{
											"begin": 21471,
											"end": 21497,
											"name": "DUP2"
										},
										{
											"begin": 21471,
											"end": 21497,
											"name": "MSTORE"
										},
										{
											"begin": 21471,
											"end": 21497,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21471,
											"end": 21497,
											"name": "ADD"
										},
										{
											"begin": 21471,
											"end": 21497,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 21471,
											"end": 21497,
											"name": "KECCAK256"
										},
										{
											"begin": 21471,
											"end": 21506,
											"name": "DUP2"
										},
										{
											"begin": 21471,
											"end": 21506,
											"name": "SWAP1"
										},
										{
											"begin": 21471,
											"end": 21506,
											"name": "SSTORE"
										},
										{
											"begin": 21471,
											"end": 21506,
											"name": "POP"
										},
										{
											"begin": 21540,
											"end": 21543,
											"name": "DUP7"
										},
										{
											"begin": 21531,
											"end": 21538,
											"name": "DUP9"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "AND"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "PUSH",
											"value": "A5C854539F6E93FCD4A8397BFAE8BDB751B4E819840F1C8681E6AD7FF19C5B5"
										},
										{
											"begin": 21545,
											"end": 21552,
											"name": "DUP9"
										},
										{
											"begin": 21554,
											"end": 21564,
											"name": "DUP5"
										},
										{
											"begin": 21566,
											"end": 21575,
											"name": "DUP8"
										},
										{
											"begin": 21577,
											"end": 21587,
											"name": "DUP8"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "MLOAD"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "DUP1"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "DUP6"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "DUP2"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "MSTORE"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "ADD"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "DUP5"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "DUP2"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "MSTORE"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "ADD"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "DUP4"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "DUP2"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "MSTORE"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "ADD"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "DUP3"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "DUP2"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "MSTORE"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "ADD"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "SWAP5"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "POP"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "POP"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "POP"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "POP"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "POP"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "MLOAD"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "DUP1"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "SWAP2"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "SUB"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "SWAP1"
										},
										{
											"begin": 21521,
											"end": 21588,
											"name": "LOG3"
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "POP"
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "PUSH",
											"value": "66"
										},
										{
											"begin": 1501,
											"end": 1514,
											"name": "SLOAD"
										},
										{
											"begin": 1485,
											"end": 1497,
											"name": "DUP2"
										},
										{
											"begin": 1485,
											"end": 1514,
											"name": "EQ"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH [tag]",
											"value": "487"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "JUMPI"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "MLOAD"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP2"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "MSTORE"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "ADD"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP1"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP1"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "ADD"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP3"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP2"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "SUB"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP3"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "MSTORE"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP2"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "MSTORE"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "ADD"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP1"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP2"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "MSTORE"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "POP"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "ADD"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "SWAP2"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "POP"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "POP"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "MLOAD"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "DUP1"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "SWAP2"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "SUB"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "SWAP1"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "REVERT"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "tag",
											"value": "487"
										},
										{
											"begin": 1477,
											"end": 1550,
											"name": "JUMPDEST"
										},
										{
											"begin": 20923,
											"end": 21595,
											"name": "POP"
										},
										{
											"begin": 20923,
											"end": 21595,
											"name": "POP"
										},
										{
											"begin": 20923,
											"end": 21595,
											"name": "POP"
										},
										{
											"begin": 20923,
											"end": 21595,
											"name": "POP"
										},
										{
											"begin": 20923,
											"end": 21595,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 24990,
											"end": 25150,
											"name": "tag",
											"value": "338"
										},
										{
											"begin": 24990,
											"end": 25150,
											"name": "JUMPDEST"
										},
										{
											"begin": 25072,
											"end": 25076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25104,
											"end": 25143,
											"name": "PUSH [tag]",
											"value": "489"
										},
										{
											"begin": 4629,
											"end": 4635,
											"name": "PUSH",
											"value": "93A80"
										},
										{
											"begin": 25104,
											"end": 25119,
											"name": "DUP4"
										},
										{
											"begin": 25104,
											"end": 25123,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 25104,
											"end": 25123,
											"name": "SWAP1"
										},
										{
											"begin": 25104,
											"end": 25143,
											"name": "SWAP2"
										},
										{
											"begin": 25104,
											"end": 25143,
											"name": "SWAP1"
										},
										{
											"begin": 25104,
											"end": 25143,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25104,
											"end": 25143,
											"name": "AND"
										},
										{
											"begin": 25104,
											"end": 25143,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25104,
											"end": 25143,
											"name": "tag",
											"value": "489"
										},
										{
											"begin": 25104,
											"end": 25143,
											"name": "JUMPDEST"
										},
										{
											"begin": 25095,
											"end": 25101,
											"name": "PUSH [tag]",
											"value": "490"
										},
										{
											"begin": 25095,
											"end": 25099,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 25095,
											"end": 25101,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25095,
											"end": 25101,
											"name": "tag",
											"value": "490"
										},
										{
											"begin": 25095,
											"end": 25101,
											"name": "JUMPDEST"
										},
										{
											"begin": 25095,
											"end": 25143,
											"name": "GT"
										},
										{
											"begin": 25088,
											"end": 25143,
											"name": "SWAP1"
										},
										{
											"begin": 25088,
											"end": 25143,
											"name": "POP"
										},
										{
											"begin": 24990,
											"end": 25150,
											"name": "SWAP2"
										},
										{
											"begin": 24990,
											"end": 25150,
											"name": "SWAP1"
										},
										{
											"begin": 24990,
											"end": 25150,
											"name": "POP"
										},
										{
											"begin": 24990,
											"end": 25150,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "tag",
											"value": "350"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "JUMPDEST"
										},
										{
											"begin": 746,
											"end": 750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "DUP1"
										},
										{
											"begin": 1030,
											"end": 1049,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1118,
											"name": "PUSH",
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "SHL"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "SWAP1"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1226,
											"name": "DUP4"
										},
										{
											"begin": 1207,
											"end": 1227,
											"name": "EXTCODEHASH"
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "SWAP2"
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1269,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "DUP3"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "EQ"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "492"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "JUMPI"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1285,
											"end": 1288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "SHL"
										},
										{
											"begin": 1273,
											"end": 1281,
											"name": "DUP3"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "EQ"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "tag",
											"value": "492"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "SWAP3"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "SWAP2"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "SWAP1"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25217,
											"end": 25293,
											"name": "tag",
											"value": "382"
										},
										{
											"begin": 25217,
											"end": 25293,
											"name": "JUMPDEST"
										},
										{
											"begin": 25279,
											"end": 25286,
											"name": "DUP1"
										},
										{
											"begin": 25270,
											"end": 25276,
											"name": "PUSH",
											"value": "B1"
										},
										{
											"begin": 25270,
											"end": 25276,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "EXP"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "DUP2"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "SLOAD"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "DUP2"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "MUL"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "NOT"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "AND"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "SWAP1"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "DUP4"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "ISZERO"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "ISZERO"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "MUL"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "OR"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "SWAP1"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "SSTORE"
										},
										{
											"begin": 25270,
											"end": 25286,
											"name": "POP"
										},
										{
											"begin": 25217,
											"end": 25293,
											"name": "POP"
										},
										{
											"begin": 25217,
											"end": 25293,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2240,
											"end": 2465,
											"name": "tag",
											"value": "393"
										},
										{
											"begin": 2240,
											"end": 2465,
											"name": "JUMPDEST"
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "AND"
										},
										{
											"begin": 2313,
											"end": 2321,
											"name": "DUP2"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "AND"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "EQ"
										},
										{
											"begin": 2313,
											"end": 2335,
											"name": "ISZERO"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH [tag]",
											"value": "495"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "JUMPI"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "MLOAD"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "MSTORE"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP3"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "SUB"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP3"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "MSTORE"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "MSTORE"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "SWAP2"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "CODECOPY"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "SWAP2"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "MLOAD"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "SWAP2"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "SUB"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "SWAP1"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "REVERT"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "tag",
											"value": "495"
										},
										{
											"begin": 2305,
											"end": 2378,
											"name": "JUMPDEST"
										},
										{
											"begin": 2422,
											"end": 2430,
											"name": "DUP1"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "AND"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "SWAP1"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "SLOAD"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "SWAP1"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "EXP"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "SWAP1"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DIV"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "AND"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "AND"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "MLOAD"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "MLOAD"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "DUP1"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "SWAP2"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "SUB"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "SWAP1"
										},
										{
											"begin": 2393,
											"end": 2431,
											"name": "LOG3"
										},
										{
											"begin": 2450,
											"end": 2458,
											"name": "DUP1"
										},
										{
											"begin": 2441,
											"end": 2447,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 2441,
											"end": 2447,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "EXP"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "DUP2"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "SLOAD"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "DUP2"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "MUL"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "NOT"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "AND"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "SWAP1"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "DUP4"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "AND"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "MUL"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "OR"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "SWAP1"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "SSTORE"
										},
										{
											"begin": 2441,
											"end": 2458,
											"name": "POP"
										},
										{
											"begin": 2240,
											"end": 2465,
											"name": "POP"
										},
										{
											"begin": 2240,
											"end": 2465,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "tag",
											"value": "397"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1818,
											"end": 1825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1851,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1846,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "GT"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "ISZERO"
										},
										{
											"begin": 1853,
											"end": 1865,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "497"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "498"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "500"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "498"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "500"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "501"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "EXP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "NOT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "501"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "REVERT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "497"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1876,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP4"
										},
										{
											"begin": 1888,
											"end": 1889,
											"name": "DUP6"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "SUB"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "DUP1"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "SWAP2"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP4"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP3"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 23525,
											"end": 24176,
											"name": "tag",
											"value": "409"
										},
										{
											"begin": 23525,
											"end": 24176,
											"name": "JUMPDEST"
										},
										{
											"begin": 23603,
											"end": 23610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23612,
											"end": 23619,
											"name": "DUP1"
										},
										{
											"begin": 23631,
											"end": 23653,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23656,
											"end": 23664,
											"name": "PUSH",
											"value": "AC"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23665,
											"end": 23670,
											"name": "DUP8"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "AND"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "AND"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "DUP2"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "MSTORE"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "ADD"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "SWAP1"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "DUP2"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "MSTORE"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "ADD"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23656,
											"end": 23671,
											"name": "KECCAK256"
										},
										{
											"begin": 23656,
											"end": 23676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23672,
											"end": 23675,
											"name": "DUP7"
										},
										{
											"begin": 23656,
											"end": 23676,
											"name": "DUP2"
										},
										{
											"begin": 23656,
											"end": 23676,
											"name": "MSTORE"
										},
										{
											"begin": 23656,
											"end": 23676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23656,
											"end": 23676,
											"name": "ADD"
										},
										{
											"begin": 23656,
											"end": 23676,
											"name": "SWAP1"
										},
										{
											"begin": 23656,
											"end": 23676,
											"name": "DUP2"
										},
										{
											"begin": 23656,
											"end": 23676,
											"name": "MSTORE"
										},
										{
											"begin": 23656,
											"end": 23676,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23656,
											"end": 23676,
											"name": "ADD"
										},
										{
											"begin": 23656,
											"end": 23676,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23656,
											"end": 23676,
											"name": "KECCAK256"
										},
										{
											"begin": 23656,
											"end": 23676,
											"name": "SLOAD"
										},
										{
											"begin": 23631,
											"end": 23676,
											"name": "SWAP1"
										},
										{
											"begin": 23631,
											"end": 23676,
											"name": "POP"
										},
										{
											"begin": 23686,
											"end": 23700,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23714,
											"end": 23715,
											"name": "DUP1"
										},
										{
											"begin": 23703,
											"end": 23710,
											"name": "DUP6"
										},
										{
											"begin": 23703,
											"end": 23715,
											"name": "EQ"
										},
										{
											"begin": 23703,
											"end": 23742,
											"name": "PUSH [tag]",
											"value": "503"
										},
										{
											"begin": 23703,
											"end": 23742,
											"name": "JUMPI"
										},
										{
											"begin": 23735,
											"end": 23742,
											"name": "DUP5"
										},
										{
											"begin": 23703,
											"end": 23742,
											"name": "PUSH [tag]",
											"value": "504"
										},
										{
											"begin": 23703,
											"end": 23742,
											"name": "JUMP"
										},
										{
											"begin": 23703,
											"end": 23742,
											"name": "tag",
											"value": "503"
										},
										{
											"begin": 23703,
											"end": 23742,
											"name": "JUMPDEST"
										},
										{
											"begin": 23718,
											"end": 23732,
											"name": "DUP2"
										},
										{
											"begin": 23703,
											"end": 23742,
											"name": "tag",
											"value": "504"
										},
										{
											"begin": 23703,
											"end": 23742,
											"name": "JUMPDEST"
										},
										{
											"begin": 23686,
											"end": 23742,
											"name": "SWAP1"
										},
										{
											"begin": 23686,
											"end": 23742,
											"name": "POP"
										},
										{
											"begin": 23753,
											"end": 23766,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23768,
											"end": 23785,
											"name": "DUP1"
										},
										{
											"begin": 23787,
											"end": 23805,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23809,
											"end": 23861,
											"name": "PUSH [tag]",
											"value": "505"
										},
										{
											"begin": 23828,
											"end": 23840,
											"name": "PUSH",
											"value": "AD"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23841,
											"end": 23846,
											"name": "DUP13"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "AND"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "AND"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "DUP2"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "MSTORE"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "ADD"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "SWAP1"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "DUP2"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "MSTORE"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "ADD"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23828,
											"end": 23847,
											"name": "KECCAK256"
										},
										{
											"begin": 23828,
											"end": 23852,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23848,
											"end": 23851,
											"name": "DUP12"
										},
										{
											"begin": 23828,
											"end": 23852,
											"name": "DUP2"
										},
										{
											"begin": 23828,
											"end": 23852,
											"name": "MSTORE"
										},
										{
											"begin": 23828,
											"end": 23852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23828,
											"end": 23852,
											"name": "ADD"
										},
										{
											"begin": 23828,
											"end": 23852,
											"name": "SWAP1"
										},
										{
											"begin": 23828,
											"end": 23852,
											"name": "DUP2"
										},
										{
											"begin": 23828,
											"end": 23852,
											"name": "MSTORE"
										},
										{
											"begin": 23828,
											"end": 23852,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23828,
											"end": 23852,
											"name": "ADD"
										},
										{
											"begin": 23828,
											"end": 23852,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23828,
											"end": 23852,
											"name": "KECCAK256"
										},
										{
											"begin": 23828,
											"end": 23852,
											"name": "SLOAD"
										},
										{
											"begin": 23854,
											"end": 23860,
											"name": "DUP6"
										},
										{
											"begin": 23809,
											"end": 23827,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 23809,
											"end": 23861,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23809,
											"end": 23861,
											"name": "tag",
											"value": "505"
										},
										{
											"begin": 23809,
											"end": 23861,
											"name": "JUMPDEST"
										},
										{
											"begin": 23752,
											"end": 23861,
											"name": "SWAP3"
										},
										{
											"begin": 23752,
											"end": 23861,
											"name": "POP"
										},
										{
											"begin": 23752,
											"end": 23861,
											"name": "SWAP3"
										},
										{
											"begin": 23752,
											"end": 23861,
											"name": "POP"
										},
										{
											"begin": 23752,
											"end": 23861,
											"name": "SWAP3"
										},
										{
											"begin": 23752,
											"end": 23861,
											"name": "POP"
										},
										{
											"begin": 23883,
											"end": 23884,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23875,
											"end": 23880,
											"name": "DUP4"
										},
										{
											"begin": 23875,
											"end": 23884,
											"name": "GT"
										},
										{
											"begin": 23871,
											"end": 24130,
											"name": "ISZERO"
										},
										{
											"begin": 23871,
											"end": 24130,
											"name": "PUSH [tag]",
											"value": "506"
										},
										{
											"begin": 23871,
											"end": 24130,
											"name": "JUMPI"
										},
										{
											"begin": 23923,
											"end": 23952,
											"name": "PUSH [tag]",
											"value": "507"
										},
										{
											"begin": 23942,
											"end": 23951,
											"name": "DUP3"
										},
										{
											"begin": 23923,
											"end": 23937,
											"name": "DUP7"
										},
										{
											"begin": 23923,
											"end": 23941,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 23923,
											"end": 23941,
											"name": "SWAP1"
										},
										{
											"begin": 23923,
											"end": 23952,
											"name": "SWAP2"
										},
										{
											"begin": 23923,
											"end": 23952,
											"name": "SWAP1"
										},
										{
											"begin": 23923,
											"end": 23952,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 23923,
											"end": 23952,
											"name": "AND"
										},
										{
											"begin": 23923,
											"end": 23952,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23923,
											"end": 23952,
											"name": "tag",
											"value": "507"
										},
										{
											"begin": 23923,
											"end": 23952,
											"name": "JUMPDEST"
										},
										{
											"begin": 23900,
											"end": 23908,
											"name": "PUSH",
											"value": "AC"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23909,
											"end": 23914,
											"name": "DUP13"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "AND"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "AND"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "DUP2"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "MSTORE"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "ADD"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "SWAP1"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "DUP2"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "MSTORE"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "ADD"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23900,
											"end": 23915,
											"name": "KECCAK256"
										},
										{
											"begin": 23900,
											"end": 23920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23916,
											"end": 23919,
											"name": "DUP12"
										},
										{
											"begin": 23900,
											"end": 23920,
											"name": "DUP2"
										},
										{
											"begin": 23900,
											"end": 23920,
											"name": "MSTORE"
										},
										{
											"begin": 23900,
											"end": 23920,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23900,
											"end": 23920,
											"name": "ADD"
										},
										{
											"begin": 23900,
											"end": 23920,
											"name": "SWAP1"
										},
										{
											"begin": 23900,
											"end": 23920,
											"name": "DUP2"
										},
										{
											"begin": 23900,
											"end": 23920,
											"name": "MSTORE"
										},
										{
											"begin": 23900,
											"end": 23920,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 23900,
											"end": 23920,
											"name": "ADD"
										},
										{
											"begin": 23900,
											"end": 23920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 23900,
											"end": 23920,
											"name": "KECCAK256"
										},
										{
											"begin": 23900,
											"end": 23952,
											"name": "DUP2"
										},
										{
											"begin": 23900,
											"end": 23952,
											"name": "SWAP1"
										},
										{
											"begin": 23900,
											"end": 23952,
											"name": "SSTORE"
										},
										{
											"begin": 23900,
											"end": 23952,
											"name": "POP"
										},
										{
											"begin": 23980,
											"end": 24006,
											"name": "PUSH [tag]",
											"value": "508"
										},
										{
											"begin": 23996,
											"end": 24005,
											"name": "DUP3"
										},
										{
											"begin": 23980,
											"end": 23991,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": 23980,
											"end": 23991,
											"name": "SLOAD"
										},
										{
											"begin": 23980,
											"end": 23995,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 23980,
											"end": 23995,
											"name": "SWAP1"
										},
										{
											"begin": 23980,
											"end": 24006,
											"name": "SWAP2"
										},
										{
											"begin": 23980,
											"end": 24006,
											"name": "SWAP1"
										},
										{
											"begin": 23980,
											"end": 24006,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 23980,
											"end": 24006,
											"name": "AND"
										},
										{
											"begin": 23980,
											"end": 24006,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 23980,
											"end": 24006,
											"name": "tag",
											"value": "508"
										},
										{
											"begin": 23980,
											"end": 24006,
											"name": "JUMPDEST"
										},
										{
											"begin": 23966,
											"end": 23977,
											"name": "PUSH",
											"value": "B0"
										},
										{
											"begin": 23966,
											"end": 24006,
											"name": "DUP2"
										},
										{
											"begin": 23966,
											"end": 24006,
											"name": "SWAP1"
										},
										{
											"begin": 23966,
											"end": 24006,
											"name": "SSTORE"
										},
										{
											"begin": 23966,
											"end": 24006,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24033,
											"name": "PUSH",
											"value": "99"
										},
										{
											"begin": 24028,
											"end": 24033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24028,
											"end": 24033,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24033,
											"name": "SLOAD"
										},
										{
											"begin": 24028,
											"end": 24033,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24033,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 24028,
											"end": 24033,
											"name": "EXP"
										},
										{
											"begin": 24028,
											"end": 24033,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24033,
											"name": "DIV"
										},
										{
											"begin": 24028,
											"end": 24033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24028,
											"end": 24033,
											"name": "AND"
										},
										{
											"begin": 24028,
											"end": 24042,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24028,
											"end": 24042,
											"name": "AND"
										},
										{
											"begin": 24028,
											"end": 24042,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 24043,
											"end": 24076,
											"name": "PUSH [tag]",
											"value": "509"
										},
										{
											"begin": 24043,
											"end": 24074,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 24043,
											"end": 24076,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24043,
											"end": 24076,
											"name": "tag",
											"value": "509"
										},
										{
											"begin": 24043,
											"end": 24076,
											"name": "JUMPDEST"
										},
										{
											"begin": 24078,
											"end": 24098,
											"name": "PUSH [tag]",
											"value": "510"
										},
										{
											"begin": 24088,
											"end": 24097,
											"name": "DUP6"
										},
										{
											"begin": 24078,
											"end": 24083,
											"name": "DUP8"
										},
										{
											"begin": 24078,
											"end": 24087,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 24078,
											"end": 24087,
											"name": "SWAP1"
										},
										{
											"begin": 24078,
											"end": 24098,
											"name": "SWAP2"
										},
										{
											"begin": 24078,
											"end": 24098,
											"name": "SWAP1"
										},
										{
											"begin": 24078,
											"end": 24098,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24078,
											"end": 24098,
											"name": "AND"
										},
										{
											"begin": 24078,
											"end": 24098,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 24078,
											"end": 24098,
											"name": "tag",
											"value": "510"
										},
										{
											"begin": 24078,
											"end": 24098,
											"name": "JUMPDEST"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "MLOAD"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP4"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "AND"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "SHL"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP2"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "MSTORE"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "ADD"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP1"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP4"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "AND"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "AND"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP2"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "MSTORE"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "ADD"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP3"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP2"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "MSTORE"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "ADD"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "SWAP3"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "MLOAD"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP1"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP4"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "SUB"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP2"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP8"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP1"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "511"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "511"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "GAS"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "CALL"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "512"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "512"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "MLOAD"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "513"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "513"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP2"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "ADD"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP1"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "DUP1"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "MLOAD"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "ADD"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "SWAP3"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "SWAP2"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "SWAP1"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "POP"
										},
										{
											"begin": 24028,
											"end": 24099,
											"name": "POP"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "PUSH [tag]",
											"value": "514"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "JUMPI"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "MLOAD"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "DUP2"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "MSTORE"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "ADD"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "DUP1"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "DUP1"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "ADD"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "DUP3"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "DUP2"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "SUB"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "DUP3"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "MSTORE"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "DUP2"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "MSTORE"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "ADD"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "DUP1"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "PUSH",
											"value": "7472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "DUP2"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "MSTORE"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "POP"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "ADD"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "SWAP2"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "POP"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "POP"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "MLOAD"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "DUP1"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "SWAP2"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "SUB"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "SWAP1"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "REVERT"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "tag",
											"value": "514"
										},
										{
											"begin": 24020,
											"end": 24119,
											"name": "JUMPDEST"
										},
										{
											"begin": 23871,
											"end": 24130,
											"name": "tag",
											"value": "506"
										},
										{
											"begin": 23871,
											"end": 24130,
											"name": "JUMPDEST"
										},
										{
											"begin": 24147,
											"end": 24156,
											"name": "DUP2"
										},
										{
											"begin": 24158,
											"end": 24168,
											"name": "DUP2"
										},
										{
											"begin": 24139,
											"end": 24169,
											"name": "SWAP7"
										},
										{
											"begin": 24139,
											"end": 24169,
											"name": "POP"
										},
										{
											"begin": 24139,
											"end": 24169,
											"name": "SWAP7"
										},
										{
											"begin": 24139,
											"end": 24169,
											"name": "POP"
										},
										{
											"begin": 24139,
											"end": 24169,
											"name": "POP"
										},
										{
											"begin": 24139,
											"end": 24169,
											"name": "POP"
										},
										{
											"begin": 24139,
											"end": 24169,
											"name": "POP"
										},
										{
											"begin": 24139,
											"end": 24169,
											"name": "POP"
										},
										{
											"begin": 24139,
											"end": 24169,
											"name": "POP"
										},
										{
											"begin": 23525,
											"end": 24176,
											"name": "SWAP4"
										},
										{
											"begin": 23525,
											"end": 24176,
											"name": "POP"
										},
										{
											"begin": 23525,
											"end": 24176,
											"name": "SWAP4"
										},
										{
											"begin": 23525,
											"end": 24176,
											"name": "SWAP2"
										},
										{
											"begin": 23525,
											"end": 24176,
											"name": "POP"
										},
										{
											"begin": 23525,
											"end": 24176,
											"name": "POP"
										},
										{
											"begin": 23525,
											"end": 24176,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "tag",
											"value": "439"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "JUMPDEST"
										},
										{
											"begin": 3804,
											"end": 3811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3902,
											"name": "DUP1"
										},
										{
											"begin": 3897,
											"end": 3898,
											"name": "DUP4"
										},
										{
											"begin": 3897,
											"end": 3902,
											"name": "GT"
										},
										{
											"begin": 3904,
											"end": 3916,
											"name": "DUP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH [tag]",
											"value": "516"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "JUMPI"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SUB"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "517"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "519"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "517"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "519"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "AND"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ISZERO"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH [tag]",
											"value": "520"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "JUMPI"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SUB"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SUB"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "EXP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SUB"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "NOT"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "AND"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "tag",
											"value": "520"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "JUMPDEST"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SUB"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "REVERT"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "tag",
											"value": "516"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "JUMPDEST"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3927,
											"end": 3936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3944,
											"name": "DUP4"
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "DUP6"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "DUP2"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "PUSH [tag]",
											"value": "521"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "JUMPI"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "INVALID"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "tag",
											"value": "521"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "JUMPDEST"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "DIV"
										},
										{
											"begin": 3927,
											"end": 3944,
											"name": "SWAP1"
										},
										{
											"begin": 3927,
											"end": 3944,
											"name": "POP"
										},
										{
											"begin": 4048,
											"end": 4049,
											"name": "DUP1"
										},
										{
											"begin": 4041,
											"end": 4049,
											"name": "SWAP2"
										},
										{
											"begin": 4041,
											"end": 4049,
											"name": "POP"
										},
										{
											"begin": 4041,
											"end": 4049,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "SWAP4"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "SWAP3"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2068,
											"end": 2368,
											"name": "tag",
											"value": "443"
										},
										{
											"begin": 2068,
											"end": 2368,
											"name": "JUMPDEST"
										},
										{
											"begin": 2107,
											"end": 2114,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2312,
											"name": "TIMESTAMP"
										},
										{
											"begin": 2302,
											"end": 2312,
											"name": "SWAP1"
										},
										{
											"begin": 2302,
											"end": 2312,
											"name": "POP"
										},
										{
											"begin": 2068,
											"end": 2368,
											"name": "SWAP1"
										},
										{
											"begin": 2068,
											"end": 2368,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 125,
											"end": 352,
											"name": "tag",
											"value": "459"
										},
										{
											"begin": 125,
											"end": 352,
											"name": "JUMPDEST"
										},
										{
											"begin": 173,
											"end": 180,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 201,
											"end": 202,
											"name": "DUP1"
										},
										{
											"begin": 196,
											"end": 197,
											"name": "DUP3"
										},
										{
											"begin": 196,
											"end": 202,
											"name": "EQ"
										},
										{
											"begin": 192,
											"end": 237,
											"name": "ISZERO"
										},
										{
											"begin": 192,
											"end": 237,
											"name": "PUSH [tag]",
											"value": "524"
										},
										{
											"begin": 192,
											"end": 237,
											"name": "JUMPI"
										},
										{
											"begin": 225,
											"end": 226,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 218,
											"end": 226,
											"name": "SWAP1"
										},
										{
											"begin": 218,
											"end": 226,
											"name": "POP"
										},
										{
											"begin": 218,
											"end": 226,
											"name": "PUSH [tag]",
											"value": "523"
										},
										{
											"begin": 218,
											"end": 226,
											"name": "JUMP"
										},
										{
											"begin": 192,
											"end": 237,
											"name": "tag",
											"value": "524"
										},
										{
											"begin": 192,
											"end": 237,
											"name": "JUMPDEST"
										},
										{
											"begin": 246,
											"end": 255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 262,
											"end": 263,
											"name": "DUP3"
										},
										{
											"begin": 258,
											"end": 259,
											"name": "DUP4"
										},
										{
											"begin": 258,
											"end": 263,
											"name": "MUL"
										},
										{
											"begin": 246,
											"end": 263,
											"name": "SWAP1"
										},
										{
											"begin": 246,
											"end": 263,
											"name": "POP"
										},
										{
											"begin": 290,
											"end": 291,
											"name": "DUP3"
										},
										{
											"begin": 285,
											"end": 286,
											"name": "DUP4"
										},
										{
											"begin": 281,
											"end": 282,
											"name": "DUP3"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "PUSH [tag]",
											"value": "525"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "JUMPI"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "INVALID"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "tag",
											"value": "525"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "JUMPDEST"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "DIV"
										},
										{
											"begin": 281,
											"end": 291,
											"name": "EQ"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "PUSH [tag]",
											"value": "526"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "JUMPI"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "MLOAD"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "DUP2"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "MSTORE"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "ADD"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "DUP1"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "DUP1"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "ADD"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "DUP3"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "DUP2"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "SUB"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "DUP3"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "MSTORE"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "DUP2"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "MSTORE"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "ADD"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "DUP1"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "PUSH",
											"value": "457874656E6465644D6174683A207371756172696E67206F766572666C6F7700"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "DUP2"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "MSTORE"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "POP"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "ADD"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "SWAP2"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "POP"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "POP"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "MLOAD"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "DUP1"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "SWAP2"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "SUB"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "SWAP1"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "REVERT"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "tag",
											"value": "526"
										},
										{
											"begin": 273,
											"end": 327,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 337,
											"end": 345,
											"name": "SWAP2"
										},
										{
											"begin": 337,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 337,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 125,
											"end": 352,
											"name": "tag",
											"value": "523"
										},
										{
											"begin": 125,
											"end": 352,
											"name": "JUMPDEST"
										},
										{
											"begin": 125,
											"end": 352,
											"name": "SWAP2"
										},
										{
											"begin": 125,
											"end": 352,
											"name": "SWAP1"
										},
										{
											"begin": 125,
											"end": 352,
											"name": "POP"
										},
										{
											"begin": 125,
											"end": 352,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 425,
											"end": 717,
											"name": "tag",
											"value": "460"
										},
										{
											"begin": 425,
											"end": 717,
											"name": "JUMPDEST"
										},
										{
											"begin": 470,
											"end": 476,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 496,
											"end": 497,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 492,
											"end": 493,
											"name": "DUP3"
										},
										{
											"begin": 492,
											"end": 497,
											"name": "GT"
										},
										{
											"begin": 488,
											"end": 711,
											"name": "ISZERO"
										},
										{
											"begin": 488,
											"end": 711,
											"name": "PUSH [tag]",
											"value": "528"
										},
										{
											"begin": 488,
											"end": 711,
											"name": "JUMPI"
										},
										{
											"begin": 517,
											"end": 518,
											"name": "DUP2"
										},
										{
											"begin": 513,
											"end": 518,
											"name": "SWAP1"
										},
										{
											"begin": 513,
											"end": 518,
											"name": "POP"
										},
										{
											"begin": 532,
											"end": 538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 545,
											"end": 546,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 541,
											"end": 542,
											"name": "DUP5"
										},
										{
											"begin": 541,
											"end": 546,
											"name": "DUP2"
										},
										{
											"begin": 541,
											"end": 546,
											"name": "PUSH [tag]",
											"value": "529"
										},
										{
											"begin": 541,
											"end": 546,
											"name": "JUMPI"
										},
										{
											"begin": 541,
											"end": 546,
											"name": "INVALID"
										},
										{
											"begin": 541,
											"end": 546,
											"name": "tag",
											"value": "529"
										},
										{
											"begin": 541,
											"end": 546,
											"name": "JUMPDEST"
										},
										{
											"begin": 541,
											"end": 546,
											"name": "DIV"
										},
										{
											"begin": 541,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 532,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 532,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "tag",
											"value": "530"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "JUMPDEST"
										},
										{
											"begin": 575,
											"end": 576,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 572,
											"name": "DUP2"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "LT"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "ISZERO"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "PUSH [tag]",
											"value": "531"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "JUMPI"
										},
										{
											"begin": 600,
											"end": 601,
											"name": "DUP1"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "SWAP2"
										},
										{
											"begin": 596,
											"end": 601,
											"name": "POP"
										},
										{
											"begin": 637,
											"end": 638,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 632,
											"end": 633,
											"name": "DUP2"
										},
										{
											"begin": 628,
											"end": 629,
											"name": "DUP3"
										},
										{
											"begin": 624,
											"end": 625,
											"name": "DUP6"
										},
										{
											"begin": 624,
											"end": 629,
											"name": "DUP2"
										},
										{
											"begin": 624,
											"end": 629,
											"name": "PUSH [tag]",
											"value": "532"
										},
										{
											"begin": 624,
											"end": 629,
											"name": "JUMPI"
										},
										{
											"begin": 624,
											"end": 629,
											"name": "INVALID"
										},
										{
											"begin": 624,
											"end": 629,
											"name": "tag",
											"value": "532"
										},
										{
											"begin": 624,
											"end": 629,
											"name": "JUMPDEST"
										},
										{
											"begin": 624,
											"end": 629,
											"name": "DIV"
										},
										{
											"begin": 624,
											"end": 633,
											"name": "ADD"
										},
										{
											"begin": 623,
											"end": 638,
											"name": "DUP2"
										},
										{
											"begin": 623,
											"end": 638,
											"name": "PUSH [tag]",
											"value": "533"
										},
										{
											"begin": 623,
											"end": 638,
											"name": "JUMPI"
										},
										{
											"begin": 623,
											"end": 638,
											"name": "INVALID"
										},
										{
											"begin": 623,
											"end": 638,
											"name": "tag",
											"value": "533"
										},
										{
											"begin": 623,
											"end": 638,
											"name": "JUMPDEST"
										},
										{
											"begin": 623,
											"end": 638,
											"name": "DIV"
										},
										{
											"begin": 619,
											"end": 638,
											"name": "SWAP1"
										},
										{
											"begin": 619,
											"end": 638,
											"name": "POP"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "PUSH [tag]",
											"value": "530"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "JUMP"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "tag",
											"value": "531"
										},
										{
											"begin": 564,
											"end": 653,
											"name": "JUMPDEST"
										},
										{
											"begin": 488,
											"end": 711,
											"name": "POP"
										},
										{
											"begin": 488,
											"end": 711,
											"name": "PUSH [tag]",
											"value": "534"
										},
										{
											"begin": 488,
											"end": 711,
											"name": "JUMP"
										},
										{
											"begin": 488,
											"end": 711,
											"name": "tag",
											"value": "528"
										},
										{
											"begin": 488,
											"end": 711,
											"name": "JUMPDEST"
										},
										{
											"begin": 678,
											"end": 679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 673,
											"end": 674,
											"name": "DUP3"
										},
										{
											"begin": 673,
											"end": 679,
											"name": "EQ"
										},
										{
											"begin": 669,
											"end": 711,
											"name": "PUSH [tag]",
											"value": "535"
										},
										{
											"begin": 669,
											"end": 711,
											"name": "JUMPI"
										},
										{
											"begin": 699,
											"end": 700,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 695,
											"end": 700,
											"name": "SWAP1"
										},
										{
											"begin": 695,
											"end": 700,
											"name": "POP"
										},
										{
											"begin": 669,
											"end": 711,
											"name": "tag",
											"value": "535"
										},
										{
											"begin": 669,
											"end": 711,
											"name": "JUMPDEST"
										},
										{
											"begin": 488,
											"end": 711,
											"name": "tag",
											"value": "534"
										},
										{
											"begin": 488,
											"end": 711,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 717,
											"name": "SWAP2"
										},
										{
											"begin": 425,
											"end": 717,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 717,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 717,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "tag",
											"value": "475"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "JUMPDEST"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "PUSH [tag]",
											"value": "537"
										},
										{
											"begin": 3269,
											"end": 3274,
											"name": "DUP3"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "AND"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "PUSH [tag]",
											"value": "350"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "tag",
											"value": "537"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "JUMPDEST"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH [tag]",
											"value": "538"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "JUMPI"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MLOAD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SUB"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "POP"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "POP"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "POP"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MLOAD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SUB"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "REVERT"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "tag",
											"value": "538"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "JUMPDEST"
										},
										{
											"begin": 3395,
											"end": 3407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3432,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3455,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3436,
											"end": 3455,
											"name": "AND"
										},
										{
											"begin": 3456,
											"end": 3460,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP3"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "539"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "541"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "539"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "541"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SUB"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP7"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "GAS"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "CALL"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "543"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "542"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "543"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "542"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3479,
											"end": 3486,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH [tag]",
											"value": "544"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPI"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MLOAD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SUB"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MLOAD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SUB"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "REVERT"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "tag",
											"value": "544"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPDEST"
										},
										{
											"begin": 3558,
											"end": 3559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3548,
											"name": "DUP2"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "MLOAD"
										},
										{
											"begin": 3538,
											"end": 3559,
											"name": "GT"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "ISZERO"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "PUSH [tag]",
											"value": "545"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "JUMPI"
										},
										{
											"begin": 3678,
											"end": 3688,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "546"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "546"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP2"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "MLOAD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP3"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP2"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "POP"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "POP"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH [tag]",
											"value": "547"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "JUMPI"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MLOAD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP3"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SUB"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP3"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH data",
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "CODECOPY"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MLOAD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SUB"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "REVERT"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "tag",
											"value": "547"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "JUMPDEST"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "tag",
											"value": "545"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "JUMPDEST"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "tag",
											"value": "303"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH #[$]",
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH [$]",
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP4"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "CODECOPY"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "ADD"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "SWAP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "tag",
											"value": "336"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "MLOAD"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "ADD"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "MSTORE"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "AND"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "MSTORE"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "ADD"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "AND"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "MSTORE"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "ADD"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "DUP2"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "MSTORE"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "POP"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "SWAP1"
										},
										{
											"begin": 722,
											"end": 25659,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"0": {
											".code": [
												{
													"begin": 25,
													"end": 148,
													"name": "PUSH",
													"value": "80"
												},
												{
													"begin": 25,
													"end": 148,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 25,
													"end": 148,
													"name": "MSTORE"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "MLOAD"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "PUSHSIZE"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "CODESIZE"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "SUB"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "DUP1"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "PUSHSIZE"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "DUP4"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "CODECOPY"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "DUP2"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "DUP2"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "ADD"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "PUSH",
													"value": "40"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "MSTORE"
												},
												{
													"begin": 13,
													"end": 15,
													"name": "PUSH",
													"value": "20"
												},
												{
													"begin": 8,
													"end": 11,
													"name": "DUP2"
												},
												{
													"begin": 5,
													"end": 16,
													"name": "LT"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "ISZERO"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "PUSH [tag]",
													"value": "1"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "JUMPI"
												},
												{
													"begin": 29,
													"end": 30,
													"name": "PUSH",
													"value": "0"
												},
												{
													"begin": 26,
													"end": 27,
													"name": "DUP1"
												},
												{
													"begin": 19,
													"end": 31,
													"name": "REVERT"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "tag",
													"value": "1"
												},
												{
													"begin": 2,
													"end": 4,
													"name": "JUMPDEST"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "DUP2"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "ADD"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "SWAP1"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "DUP1"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "DUP1"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "MLOAD"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "SWAP1"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "PUSH",
													"value": "20"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "ADD"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "SWAP1"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "SWAP3"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "SWAP2"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "SWAP1"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "POP"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "POP"
												},
												{
													"begin": 50,
													"end": 146,
													"name": "POP"
												},
												{
													"begin": 128,
													"end": 138,
													"name": "DUP1"
												},
												{
													"begin": 115,
													"end": 139,
													"name": "PUSH",
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 115,
													"end": 139,
													"name": "AND"
												},
												{
													"begin": 115,
													"end": 139,
													"name": "SELFDESTRUCT"
												}
											],
											".data": {
												"0": {
													".auxdata": "a265627a7a72315820fa7381e6703ef56b704590ce5a7a747a56f52dd2b8bfc55043a9a06f8744231c64736f6c63430005100032",
													".code": [
														{
															"begin": 25,
															"end": 148,
															"name": "PUSH",
															"value": "80"
														},
														{
															"begin": 25,
															"end": 148,
															"name": "PUSH",
															"value": "40"
														},
														{
															"begin": 25,
															"end": 148,
															"name": "MSTORE"
														},
														{
															"begin": 25,
															"end": 148,
															"name": "PUSH",
															"value": "0"
														},
														{
															"begin": 25,
															"end": 148,
															"name": "DUP1"
														},
														{
															"begin": 25,
															"end": 148,
															"name": "REVERT"
														}
													]
												}
											}
										},
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"335651F95752B5B2F9E6F772A51EA21EC319E6D88B710D1D6B6AED8232257902": "6465706f73697420616d6f756e742073686f756c64206265206d6f7265207468616e2030",
										"4998DFCCF9AEBF799608E8ABB3A4403D6D01BDD7D35C16885304D7B267AA9576": "73686f756c64206265206c657373207468616e206f7220657175616c20746f20612068616c66206f6620746865206d6178696d756d20656d697373696f6e2072617465",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
										"A232E1F8B28A085F31F602663A0343288B51E95E524FA8082D77230266997C5C": "63616e206e6f7420776974686472617720647572696e6720696e697469616c206c6f636b20706572696f64",
										"DF908F90CDD1684DFAA27AAE3563B8FC031D301853C805A295067181CD132D8D": "73686f756c64206265206c657373207468616e206f7220657175616c20746f2031206574686572",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"EFCC4C1BF2D1D2579B900A9DF600F3C0D822D0A6E5EF236F035BFCE4F914EBF5": "73686f756c646e27742062652067726561746572207468616e2033302064617973"
									}
								}
							}
						},
						"methodIdentifiers": {
							"MAX_EMISSION_RATE()": "436cc3d6",
							"PARAM_UPDATE_DELAY()": "db51ef92",
							"balances(address,uint256)": "cbf1304d",
							"claimTokens(address,address,uint256)": "9fc314c8",
							"deposit(uint256)": "b6b55f25",
							"deposit(uint256,uint256)": "e2bbb158",
							"depositDates(address,uint256)": "8b53ccb3",
							"fee()": "ddca3f43",
							"feeParam()": "47e318de",
							"getAccruedEmission(uint256,uint256)": "60d4ffb0",
							"getSigmoidParameters()": "75fa901b",
							"getSupplyBasedEmissionRate()": "8235c378",
							"initialize()": "8129fc1c",
							"initialize(address)": "c4d66de8",
							"initialize(address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,int256,uint256)": "ca758993",
							"isOwner()": "8f32d59b",
							"lastDepositIds(address)": "c3bd8fd0",
							"liquidityProvidersRewardAddress()": "c5401ce3",
							"liquidityProvidersRewardAddressParam()": "18194359",
							"lockAfterStakeDuration()": "97559cdc",
							"lockAfterStakeDurationParam()": "03d6d343",
							"lockAfterStakeDurationPassed(address,uint256)": "0e559215",
							"makeForcedWithdrawal(uint256,uint256)": "94967fa1",
							"makeRequestedWithdrawal(uint256,uint256)": "18cca7a6",
							"onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"requestWithdrawal(uint256)": "9ee679e8",
							"setFee(uint256)": "69fe0e2d",
							"setLiquidityProvidersRewardAddress(address)": "d6463151",
							"setLockAfterStakeDuration(uint256)": "74949b6d",
							"setSigmoidParameters(uint256,int256,uint256)": "294a5b04",
							"setTotalSupplyFactor(uint256)": "41682990",
							"setWithdrawalLockDuration(uint256)": "224313fa",
							"setWithdrawalUnlockDuration(uint256)": "868867b5",
							"token()": "fc0c546a",
							"totalStaked()": "817b1cd2",
							"totalSupplyFactor()": "522ea5e2",
							"totalSupplyFactorParam()": "b4a86c48",
							"transferOwnership(address)": "f2fde38b",
							"withdrawalLockDuration()": "60c251c1",
							"withdrawalLockDurationParam()": "2c3144da",
							"withdrawalRequestsDates(address,uint256)": "e0648a28",
							"withdrawalUnlockDuration()": "8df67680",
							"withdrawalUnlockDurationParam()": "5e9e230d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accruedEmission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevDepositDuration\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"FeeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"LiquidityProvidersRewardAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"LockAfterStakeDurationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"b\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SigmoidParametersSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"TotalSupplyFactorSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"WithdrawalLockDurationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"WithdrawalRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"WithdrawalUnlockDurationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accruedEmission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastDepositDuration\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_EMISSION_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PARAM_UPDATE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"depositDates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"feeParam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getAccruedEmission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timePassed\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSigmoidParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"b\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSupplyBasedEmissionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidityProvidersRewardAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawalLockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawalUnlockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockAfterStakeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupplyFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sigmoidParamA\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"_sigmoidParamB\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_sigmoidParamC\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastDepositIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"liquidityProvidersRewardAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"liquidityProvidersRewardAddressParam\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"oldValue\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newValue\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockAfterStakeDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockAfterStakeDurationParam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"lockAfterStakeDurationPassed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"makeForcedWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"makeRequestedWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositId\",\"type\":\"uint256\"}],\"name\":\"requestWithdrawal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setLiquidityProvidersRewardAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setLockAfterStakeDuration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"_b\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_c\",\"type\":\"uint256\"}],\"name\":\"setSigmoidParameters\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setTotalSupplyFactor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setWithdrawalLockDuration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setWithdrawalUnlockDuration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Mintable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupplyFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupplyFactorParam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawalLockDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawalLockDurationParam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdrawalRequestsDates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawalUnlockDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawalUnlockDurationParam\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"claimTokens(address,address,uint256)\":{\"details\":\"This method is used to claim unsupported tokens accidentally sent to the contract. It can only be called by the owner.\",\"params\":{\"_amount\":\"Amount to claim.\",\"_to\":\"The address of the tokens/coins receiver.\",\"_token\":\"The address of the token contract (zero address for claiming native coins).\"}},\"deposit(uint256)\":{\"details\":\"This method is used to deposit tokens to a new deposit. It generates a new deposit ID and calls another public \\\"deposit\\\" method. See its description.\",\"params\":{\"_amount\":\"The amount to deposit.\"}},\"deposit(uint256,uint256)\":{\"details\":\"This method is used to deposit tokens to the deposit opened before. It calls the internal \\\"_deposit\\\" method and transfers tokens from sender to contract. Sender must approve tokens first.     * Instead this, user can use the simple \\\"transfer\\\" method of STAKE token contract to make a deposit. Sender's approval is not needed in this case.     * Note: each call updates the deposit date so be careful if you want to make a long staking.\",\"params\":{\"_amount\":\"The amount to deposit.\",\"_depositId\":\"User's unique deposit ID.\"}},\"fee()\":{\"return\":\"Returns current fee.\"},\"getAccruedEmission(uint256,uint256)\":{\"params\":{\"_amount\":\"Amount based on which emission is calculated and accrued.\",\"_depositDate\":\"Deposit date.\"},\"return\":\"Total accrued emission (for the user and Liquidity Providers), user share, and seconds passed since the previous deposit started.\"},\"getSigmoidParameters()\":{\"return\":\"Sigmoid parameters.\"},\"getSupplyBasedEmissionRate()\":{\"return\":\"Emission rate based on the ratio of total staked to total supply.\"},\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"initialize(address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,int256,uint256)\":{\"details\":\"Initializes the contract.\",\"params\":{\"_fee\":\"The fee of the forced withdrawal (in percentage).\",\"_liquidityProvidersRewardAddress\":\"The address for the Liquidity Providers reward.\",\"_owner\":\"The owner of the contract.\",\"_sigmoidParamA\":\"Sigmoid parameter A.\",\"_sigmoidParamB\":\"Sigmoid parameter B.\",\"_sigmoidParamC\":\"Sigmoid parameter C.\",\"_tokenAddress\":\"The address of the STAKE token contract.\",\"_totalSupplyFactor\":\"Total supply factor for calculating emission rate (in percentage).\",\"_withdrawalLockDuration\":\"The time from the request after which the withdrawal will be available (in seconds).\",\"_withdrawalUnlockDuration\":\"The time during which the withdrawal will be available from the moment of unlocking (in seconds).\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"liquidityProvidersRewardAddress()\":{\"return\":\"Returns current liquidity providers reward address.\"},\"lockAfterStakeDuration()\":{\"return\":\"Returns current lock after stake duration.\"},\"makeForcedWithdrawal(uint256,uint256)\":{\"details\":\"This method is used to make a forced withdrawal with a fee. It calls the internal \\\"_withdraw\\\" method.\",\"params\":{\"_amount\":\"The amount to withdraw (0 - to withdraw all).\",\"_depositId\":\"User's unique deposit ID.\"}},\"makeRequestedWithdrawal(uint256,uint256)\":{\"details\":\"This method is used to make a requested withdrawal. It calls the internal \\\"_withdraw\\\" method and resets the date of the request.     * If sender didn't call this method during the unlock period (if timestamp >= lockEnd + withdrawalUnlockDuration) they have to call \\\"requestWithdrawal\\\" one more time.\",\"params\":{\"_amount\":\"The amount to withdraw (0 - to withdraw all).\",\"_depositId\":\"User's unique deposit ID.\"}},\"onTokenTransfer(address,uint256,bytes)\":{\"details\":\"This method is called when STAKE tokens are transferred to this contract. using \\\"transfer\\\", \\\"transferFrom\\\", or \\\"transferAndCall\\\" method of STAKE token contract. It generates a new deposit ID and calls the internal \\\"_deposit\\\" method.\",\"params\":{\"_amount\":\"The transferred amount.\",\"_sender\":\"The sender of tokens.\"},\"return\":\"true if successful\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"requestWithdrawal(uint256)\":{\"details\":\"This method is used to request a withdrawal without a fee. It sets the date of the request.     * Note: each call updates the date of the request so don't call this method twice during the lock.\",\"params\":{\"_depositId\":\"User's unique deposit ID.\"}},\"setFee(uint256)\":{\"details\":\"Sets the fee for forced withdrawals. Can only be called by owner.\",\"params\":{\"_value\":\"The new fee value (in percentage).\"}},\"setLiquidityProvidersRewardAddress(address)\":{\"details\":\"Sets the address for the Liquidity Providers reward. Can only be called by owner.\",\"params\":{\"_address\":\"The new address.\"}},\"setLockAfterStakeDuration(uint256)\":{\"details\":\"Sets the time from the initial stake after which withdrawals are allowed Can only be called by owner.\",\"params\":{\"_value\":\"The new duration value (in seconds).\"}},\"setSigmoidParameters(uint256,int256,uint256)\":{\"details\":\"Sets parameters of the sigmoid that is used to calculate the user's current emission rate. Can only be called by owner.\",\"params\":{\"_a\":\"Sigmoid parameter A. Unsigned integer.\",\"_b\":\"Sigmoid parameter B. Signed integer.\",\"_c\":\"Sigmoid parameter C. Unsigned integer. Cannot be zero.\"}},\"setTotalSupplyFactor(uint256)\":{\"details\":\"Sets total supply factor for calculating emission rate. Can only be called by owner.\",\"params\":{\"_value\":\"The new factor value (in percentage).\"}},\"setWithdrawalLockDuration(uint256)\":{\"details\":\"Sets the time from the request after which the withdrawal will be available. Can only be called by owner.\",\"params\":{\"_value\":\"The new duration value (in seconds).\"}},\"setWithdrawalUnlockDuration(uint256)\":{\"details\":\"Sets the time during which the withdrawal will be available from the moment of unlocking. Can only be called by owner.\",\"params\":{\"_value\":\"The new duration value (in seconds).\"}},\"totalSupplyFactor()\":{\"return\":\"Returns current total supply factor.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawalLockDuration()\":{\"return\":\"Returns current withdrawal lock duration.\"},\"withdrawalUnlockDuration()\":{\"return\":\"Returns current withdrawal unlock duration.\"}},\"title\":\"EasyStaking * Note: all percentage values are between 0 (0%) and 1 (100%) and represented as fixed point numbers containing 18 decimals like with Ether 100% == 1 ether\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/EasyStaking.sol\":\"EasyStaking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"contracts/EasyStaking.sol\":{\"keccak256\":\"0x3291b0bd76f7d01be259251c678256158b9129292e1dec3b60cc7c00591a5fbf\",\"urls\":[\"bzz-raw://857d33230ab12da9d955c04e94d6d2403927171ad049c740c55e72151f5bfe07\",\"dweb:/ipfs/Qmcr2DJT1wvY1YsuNEH3yxvL5fDzzpPQb343srXYBEewbH\"]},\"contracts/IERC20Mintable.sol\":{\"keccak256\":\"0xe91eea6c269b56838ee4125a599b00c92f3527a6f436a763f2f14bfcd868f0fe\",\"urls\":[\"bzz-raw://f071eb46eb8bf95bc7fd45e44033ff27aea9747463d2720c844b39514f731b12\",\"dweb:/ipfs/Qmah2QKciPxcjRk9r9kbduUTTim28341jdULHcJbBdWhhA\"]},\"contracts/Sacrifice.sol\":{\"keccak256\":\"0xb67c5bb9b4002d32f7c96c16b88a63dcdd3b259a9f5da911bee3b313596a91b1\",\"urls\":[\"bzz-raw://8c29c01c7c4a126054b8b706ee14c38737068646b87cfa2fa5a4831066e5b5f7\",\"dweb:/ipfs/QmXZTf7mkNSsfyQbH2Xt2W7xCPmr222k8DB1ugPznVfCru\"]},\"contracts/lib/ExtendedMath.sol\":{\"keccak256\":\"0x60d373c199714e80dc18be2bd1e10cb9cea898226449e934bd7f576f616da5e7\",\"urls\":[\"bzz-raw://e0546063959c3504f0adfb9a3603573146b9e5a1843a8a0c57802e6f71ae8424\",\"dweb:/ipfs/QmT9x1CHn3pWn2oRKNJyowccKD6oDFeRqoffxQxpC5FTPd\"]},\"contracts/lib/Sigmoid.sol\":{\"keccak256\":\"0xadd70b7cfd76ed034067dc2bec5a6fe3ffe4006eab936e2f30a7896e6f5cb6a4\",\"urls\":[\"bzz-raw://545c1bf171c2c11caebd127edaa54bc189eadfed610dba7dcbe4b92d9331d3c7\",\"dweb:/ipfs/QmaKyZzyTempgpyfDEwuCU2JBYF6kUZgPDDJqTS72MRxf6\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/IERC20Mintable.sol": {
				"IERC20Mintable": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20Mintable.sol\":\"IERC20Mintable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20Mintable.sol\":{\"keccak256\":\"0xe91eea6c269b56838ee4125a599b00c92f3527a6f436a763f2f14bfcd868f0fe\",\"urls\":[\"bzz-raw://f071eb46eb8bf95bc7fd45e44033ff27aea9747463d2720c844b39514f731b12\",\"dweb:/ipfs/Qmah2QKciPxcjRk9r9kbduUTTim28341jdULHcJbBdWhhA\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/Sacrifice.sol": {
				"Sacrifice": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_recipient",
									"type": "address"
								}
							],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Sacrifice.sol\":25:148  contract Sacrifice {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Sacrifice.sol\":50:146  constructor(address payable _recipient) public payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/Sacrifice.sol\":50:146  constructor(address payable _recipient) public payable {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/Sacrifice.sol\":128:138  _recipient */\n  dup1\n    /* \"contracts/Sacrifice.sol\":115:139  selfdestruct(_recipient) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  selfdestruct\nstop\n\nsub_0: assembly {\n        /* \"contracts/Sacrifice.sol\":25:148  contract Sacrifice {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820fa7381e6703ef56b704590ce5a7a747a56f52dd2b8bfc55043a9a06f8744231c64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052604051604e380380604e83398181016040526020811015602357600080fd5b81019080805190602001909291905050508073ffffffffffffffffffffffffffffffffffffffff16fffe",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x4E CODESIZE SUB DUP1 PUSH1 0x4E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH1 0x23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT INVALID ",
							"sourceMap": "25:123:10:-;;;50:96;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;50:96:10;;;;;;;;;;;;;;;;128:10;115:24;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea265627a7a72315820fa7381e6703ef56b704590ce5a7a747a56f52dd2b8bfc55043a9a06f8744231c64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 STATICCALL PUSH20 0x81E6703EF56B704590CE5A7A747A56F52DD2B8BF 0xC5 POP NUMBER 0xA9 LOG0 PUSH16 0x8744231C64736F6C6343000510003200 ",
							"sourceMap": "25:123:10:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 148,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 148,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 148,
									"name": "MSTORE"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "MLOAD"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "PUSHSIZE"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "CODESIZE"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "SUB"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "DUP1"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "PUSHSIZE"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "DUP4"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "CODECOPY"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "DUP2"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "DUP2"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "ADD"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "DUP2"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "ADD"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "SWAP1"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "DUP1"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "DUP1"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "MLOAD"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "SWAP1"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "ADD"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "SWAP1"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "SWAP3"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "SWAP2"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "SWAP1"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "POP"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "POP"
								},
								{
									"begin": 50,
									"end": 146,
									"name": "POP"
								},
								{
									"begin": 128,
									"end": 138,
									"name": "DUP1"
								},
								{
									"begin": 115,
									"end": 139,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 115,
									"end": 139,
									"name": "AND"
								},
								{
									"begin": 115,
									"end": 139,
									"name": "SELFDESTRUCT"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820fa7381e6703ef56b704590ce5a7a747a56f52dd2b8bfc55043a9a06f8744231c64736f6c63430005100032",
									".code": [
										{
											"begin": 25,
											"end": 148,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 148,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 148,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 148,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 148,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Sacrifice.sol\":\"Sacrifice\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Sacrifice.sol\":{\"keccak256\":\"0xb67c5bb9b4002d32f7c96c16b88a63dcdd3b259a9f5da911bee3b313596a91b1\",\"urls\":[\"bzz-raw://8c29c01c7c4a126054b8b706ee14c38737068646b87cfa2fa5a4831066e5b5f7\",\"dweb:/ipfs/QmXZTf7mkNSsfyQbH2Xt2W7xCPmr222k8DB1ugPznVfCru\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/lib/ExtendedMath.sol": {
				"ExtendedMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/ExtendedMath.sol\":25:719  library ExtendedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/ExtendedMath.sol\":25:719  library ExtendedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820402aa9aa0e33d72e4de307f5b4a58fb0bfe42e425b8c5617e2a53f606d47731564736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820402aa9aa0e33d72e4de307f5b4a58fb0bfe42e425b8c5617e2a53f606d47731564736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 BLOCKHASH 0x2A 0xA9 0xAA 0xE CALLER 0xD7 0x2E 0x4D 0xE3 SMOD CREATE2 0xB4 0xA5 DUP16 0xB0 0xBF 0xE4 0x2E TIMESTAMP JUMPDEST DUP13 JUMP OR 0xE2 0xA5 EXTCODEHASH PUSH1 0x6D SELFBALANCE PUSH20 0x1564736F6C634300051000320000000000000000 ",
							"sourceMap": "25:694:11:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820402aa9aa0e33d72e4de307f5b4a58fb0bfe42e425b8c5617e2a53f606d47731564736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 BLOCKHASH 0x2A 0xA9 0xAA 0xE CALLER 0xD7 0x2E 0x4D 0xE3 SMOD CREATE2 0xB4 0xA5 DUP16 0xB0 0xBF 0xE4 0x2E TIMESTAMP JUMPDEST DUP13 JUMP OR 0xE2 0xA5 EXTCODEHASH PUSH1 0x6D SELFBALANCE PUSH20 0x1564736F6C634300051000320000000000000000 ",
							"sourceMap": "25:694:11:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"pow2(uint256)": "infinite",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 719,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 719,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820402aa9aa0e33d72e4de307f5b4a58fb0bfe42e425b8c5617e2a53f606d47731564736f6c63430005100032",
									".code": [
										{
											"begin": 25,
											"end": 719,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 25,
											"end": 719,
											"name": "ADDRESS"
										},
										{
											"begin": 25,
											"end": 719,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 719,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 719,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 719,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 719,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 719,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 719,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/lib/ExtendedMath.sol\":\"ExtendedMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lib/ExtendedMath.sol\":{\"keccak256\":\"0x60d373c199714e80dc18be2bd1e10cb9cea898226449e934bd7f576f616da5e7\",\"urls\":[\"bzz-raw://e0546063959c3504f0adfb9a3603573146b9e5a1843a8a0c57802e6f71ae8424\",\"dweb:/ipfs/QmT9x1CHn3pWn2oRKNJyowccKD6oDFeRqoffxQxpC5FTPd\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/lib/Sigmoid.sol": {
				"Sigmoid": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "PARAM_UPDATE_DELAY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/lib/Sigmoid.sol\":134:2370  library Sigmoid {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lib/Sigmoid.sol\":134:2370  library Sigmoid {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xdb51ef92\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/lib/Sigmoid.sol\":293:344  uint256 public constant PARAM_UPDATE_DELAY = 7 days */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_4:\n        /* \"contracts/lib/Sigmoid.sol\":338:344  7 days */\n      0x093a80\n        /* \"contracts/lib/Sigmoid.sol\":293:344  uint256 public constant PARAM_UPDATE_DELAY = 7 days */\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820859a2c56a7bb7e2092a915ed3e57ff2ff1062f154e02d59e7abee939d8bfbf6264736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6090610024600b82828239805160001a607314601757fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063db51ef92146038575b600080fd5b603e6054565b6040518082815260200191505060405180910390f35b62093a808156fea265627a7a72315820859a2c56a7bb7e2092a915ed3e57ff2ff1062f154e02d59e7abee939d8bfbf6264736f6c63430005100032",
							"opcodes": "PUSH1 0x90 PUSH2 0x24 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x17 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDB51EF92 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x93A80 DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP6 SWAP11 0x2C JUMP 0xA7 0xBB PUSH31 0x2092A915ED3E57FF2FF1062F154E02D59E7ABEE939D8BFBF6264736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "134:2236:12:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063db51ef92146038575b600080fd5b603e6054565b6040518082815260200191505060405180910390f35b62093a808156fea265627a7a72315820859a2c56a7bb7e2092a915ed3e57ff2ff1062f154e02d59e7abee939d8bfbf6264736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xDB51EF92 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x93A80 DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 DUP6 SWAP11 0x2C JUMP 0xA7 0xBB PUSH31 0x2092A915ED3E57FF2FF1062F154E02D59E7ABEE939D8BFBF6264736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "134:2236:12:-;;;;;;;;;;;;;;;;;;;;;;;;293:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;338:6;293:51;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "28800",
								"executionCost": "106",
								"totalCost": "28906"
							},
							"external": {
								"PARAM_UPDATE_DELAY()": "167"
							},
							"internal": {
								"_now()": "infinite",
								"calculate(struct Sigmoid.State storage pointer,int256)": "infinite",
								"getParameters(struct Sigmoid.State storage pointer)": "infinite",
								"setParameters(struct Sigmoid.State storage pointer,uint256,int256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 134,
									"end": 2370,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 134,
									"end": 2370,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820859a2c56a7bb7e2092a915ed3e57ff2ff1062f154e02d59e7abee939d8bfbf6264736f6c63430005100032",
									".code": [
										{
											"begin": 134,
											"end": 2370,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "ADDRESS"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "EQ"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "MSTORE"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "LT"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "JUMPI"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "SHR"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "DUP1"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "PUSH",
											"value": "DB51EF92"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "EQ"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "JUMPI"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "JUMPDEST"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "DUP1"
										},
										{
											"begin": 134,
											"end": 2370,
											"name": "REVERT"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "JUMPDEST"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "JUMPDEST"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "MLOAD"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "DUP3"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "DUP2"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "MSTORE"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "ADD"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "SWAP2"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "POP"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "MLOAD"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "DUP1"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "SWAP2"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "SUB"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "SWAP1"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "RETURN"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "JUMPDEST"
										},
										{
											"begin": 338,
											"end": 344,
											"name": "PUSH",
											"value": "93A80"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "DUP2"
										},
										{
											"begin": 293,
											"end": 344,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"PARAM_UPDATE_DELAY()": "db51ef92"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"PARAM_UPDATE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/lib/Sigmoid.sol\":\"Sigmoid\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"contracts/lib/ExtendedMath.sol\":{\"keccak256\":\"0x60d373c199714e80dc18be2bd1e10cb9cea898226449e934bd7f576f616da5e7\",\"urls\":[\"bzz-raw://e0546063959c3504f0adfb9a3603573146b9e5a1843a8a0c57802e6f71ae8424\",\"dweb:/ipfs/QmT9x1CHn3pWn2oRKNJyowccKD6oDFeRqoffxQxpC5FTPd\"]},\"contracts/lib/Sigmoid.sol\":{\"keccak256\":\"0xadd70b7cfd76ed034067dc2bec5a6fe3ffe4006eab936e2f30a7896e6f5cb6a4\",\"urls\":[\"bzz-raw://545c1bf171c2c11caebd127edaa54bc189eadfed610dba7dcbe4b92d9331d3c7\",\"dweb:/ipfs/QmaKyZzyTempgpyfDEwuCU2JBYF6kUZgPDDJqTS72MRxf6\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							29
						]
					},
					"id": 30,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
							"file": "@openzeppelin/upgrades/contracts/Initializable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 30,
							"sourceUnit": 815,
							"src": "25:60:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 3,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 814,
										"src": "607:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$814",
											"typeString": "contract Initializable"
										}
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "607:13:0"
								}
							],
							"contractDependencies": [
								814
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29,
								814
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 7,
										"nodeType": "Block",
										"src": "805:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 8,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "793:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:0:0"
									},
									"scope": 29,
									"src": "781:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "929:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 13,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2742,
														"src": "946:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "946:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 12,
												"id": 15,
												"nodeType": "Return",
												"src": "939:17:0"
											}
										]
									},
									"documentation": null,
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "886:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "912:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "912:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "911:17:0"
									},
									"scope": 29,
									"src": "867:96:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "1026:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 22,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2758,
													"src": "1036:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$29",
														"typeString": "contract Context"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "1036:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 24,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2742,
														"src": "1176:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1176:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 21,
												"id": 26,
												"nodeType": "Return",
												"src": "1169:15:0"
											}
										]
									},
									"documentation": null,
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1012:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 19,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1012:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1011:14:0"
									},
									"scope": 29,
									"src": "969:222:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 30,
							"src": "587:606:0"
						}
					],
					"src": "0:1194:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							216
						]
					},
					"id": 217,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 31,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 216,
							"linearizedBaseContracts": [
								216
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "901:109:1",
										"statements": [
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 55,
														"src": "911:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 40,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 45,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 42,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "923:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 43,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "927:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 47,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "946:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 48,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "951:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 46,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "938:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "938:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 53,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 41,
													"src": "1002:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 39,
												"id": 54,
												"nodeType": "Return",
												"src": "995:8:1"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "847:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "858:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:1"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "892:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:1"
									},
									"scope": 216,
									"src": "834:176:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1341:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 66,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "1362:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 67,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "1365:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 65,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															72,
															99
														],
														"referencedDeclaration": 99,
														"src": "1358:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 64,
												"id": 70,
												"nodeType": "Return",
												"src": "1351:50:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1287:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1298:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:1"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1332:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:1"
									},
									"scope": 216,
									"src": "1274:134:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "1827:92:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 84,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "1845:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1850:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1845:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 87,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "1853:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "1837:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1837:29:1"
											},
											{
												"assignments": [
													91
												],
												"declarations": [
													{
														"constant": false,
														"id": 91,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 98,
														"src": "1876:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 90,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1876:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 95,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 92,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1888:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 93,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "1892:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1888:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1876:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 96,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "1911:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 82,
												"id": 97,
												"nodeType": "Return",
												"src": "1904:8:1"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.\n     * _Available since v2.4.0._",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1745:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1756:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1767:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 77,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1744:50:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1818:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1817:9:1"
									},
									"scope": 216,
									"src": "1732:187:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "2226:392:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 108,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2458:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2463:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 114,
												"nodeType": "IfStatement",
												"src": "2454:45:1",
												"trueBody": {
													"id": 113,
													"nodeType": "Block",
													"src": "2466:33:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2487:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 107,
															"id": 112,
															"nodeType": "Return",
															"src": "2480:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													116
												],
												"declarations": [
													{
														"constant": false,
														"id": 116,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "2509:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2509:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 117,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2521:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 118,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2525:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2521:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2509:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 122,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "2544:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 123,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "2548:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2544:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 125,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "2553:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2544:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2556:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "2536:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "2536:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 130,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 116,
													"src": "2610:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 107,
												"id": 131,
												"nodeType": "Return",
												"src": "2603:8:1"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "2172:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "2183:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2171:22:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "2217:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:9:1"
									},
									"scope": 216,
									"src": "2159:459:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "3140:63:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 143,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "3161:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 144,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "3164:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3167:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 142,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															149,
															176
														],
														"referencedDeclaration": 176,
														"src": "3157:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 141,
												"id": 147,
												"nodeType": "Return",
												"src": "3150:46:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3086:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3097:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3085:22:1"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3131:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3130:9:1"
									},
									"scope": 216,
									"src": "3073:130:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "3813:243:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 161,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "3897:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3901:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3897:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 164,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "3904:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 160,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "3889:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3889:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "3889:28:1"
											},
											{
												"assignments": [
													168
												],
												"declarations": [
													{
														"constant": false,
														"id": 168,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 175,
														"src": "3927:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3927:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 172,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 169,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "3939:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 170,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "3943:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3939:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3927:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 173,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 168,
													"src": "4048:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 159,
												"id": 174,
												"nodeType": "Return",
												"src": "4041:8:1"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3731:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3742:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3753:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 154,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3753:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3730:50:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3804:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3803:9:1"
									},
									"scope": 216,
									"src": "3718:338:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "4567:61:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 186,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "4588:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 187,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "4591:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4594:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 185,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															192,
															215
														],
														"referencedDeclaration": 215,
														"src": "4584:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4584:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 190,
												"nodeType": "Return",
												"src": "4577:44:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4513:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4524:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4524:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4512:22:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "4558:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4557:9:1"
									},
									"scope": 216,
									"src": "4500:128:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "5227:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 204,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "5245:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5250:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5245:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 207,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5253:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "5237:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5237:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 210,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5283:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 211,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "5287:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5283:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 202,
												"id": 213,
												"nodeType": "Return",
												"src": "5276:12:1"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5145:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5156:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5156:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5167:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 197,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5167:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5144:50:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5218:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5217:9:1"
									},
									"scope": 216,
									"src": "5132:163:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 217,
							"src": "589:4708:1"
						}
					],
					"src": "0:5298:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							340
						]
					},
					"id": 341,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 218,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
							"file": "@openzeppelin/upgrades/contracts/Initializable.sol",
							"id": 219,
							"nodeType": "ImportDirective",
							"scope": 341,
							"sourceUnit": 815,
							"src": "25:60:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 220,
							"nodeType": "ImportDirective",
							"scope": 341,
							"sourceUnit": 30,
							"src": "87:28:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 221,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 814,
										"src": "497:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$814",
											"typeString": "contract Initializable"
										}
									},
									"id": 222,
									"nodeType": "InheritanceSpecifier",
									"src": "497:13:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 223,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 29,
										"src": "512:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$29",
											"typeString": "contract Context"
										}
									},
									"id": 224,
									"nodeType": "InheritanceSpecifier",
									"src": "512:7:2"
								}
							],
							"contractDependencies": [
								29,
								814
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be aplied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 340,
							"linearizedBaseContracts": [
								340,
								29,
								814
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 226,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "526:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 225,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "526:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 232,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "582:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "613:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "581:57:2"
									},
									"src": "555:84:2"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "796:87:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 239,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "806:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 240,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "815:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "806:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "806:15:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "865:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "857:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "857:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 247,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "869:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 243,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "836:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "836:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "EmitStatement",
												"src": "831:45:2"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 237,
											"modifierName": {
												"argumentTypes": null,
												"id": 236,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 789,
												"src": "784:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "784:11:2"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "761:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "760:16:2"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:0:2"
									},
									"scope": 340,
									"src": "741:142:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "1006:30:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 256,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 226,
													"src": "1023:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 255,
												"id": 257,
												"nodeType": "Return",
												"src": "1016:13:2"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "973:2:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "997:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "996:9:2"
									},
									"scope": 340,
									"src": "959:77:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1145:82:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 262,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "1163:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1163:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1174:34:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "1155:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1155:54:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "1155:54:2"
											},
											{
												"id": 267,
												"nodeType": "PlaceholderStatement",
												"src": "1219:1:2"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 269,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1142:2:2"
									},
									"src": "1124:103:2",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "1356:46:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 274,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1373:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1373:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 276,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1389:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1373:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 273,
												"id": 278,
												"nodeType": "Return",
												"src": "1366:29:2"
											}
										]
									},
									"documentation": "@dev Returns true if the caller is the current owner.",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1326:2:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1350:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1350:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1349:6:2"
									},
									"scope": 340,
									"src": "1310:92:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "1792:91:2",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 286,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "1828:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1844:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1836:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1836:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 285,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "1807:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1807:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "EmitStatement",
												"src": "1802:45:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 292,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1857:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1866:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1857:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "1857:19:2"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n     * > Note: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 283,
											"modifierName": {
												"argumentTypes": null,
												"id": 282,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 269,
												"src": "1782:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1782:9:2"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1772:2:2"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:2"
									},
									"scope": 340,
									"src": "1746:137:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "2094:45:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 307,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "2123:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 306,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "2104:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2104:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "2104:28:2"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 304,
											"modifierName": {
												"argumentTypes": null,
												"id": 303,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 269,
												"src": "2084:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2084:9:2"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "2059:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2058:18:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2094:0:2"
									},
									"scope": 340,
									"src": "2032:107:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "2295:170:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 317,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "2313:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2333:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2325:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2325:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2313:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2337:40:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "2305:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2305:73:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "2305:73:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 326,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "2414:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 327,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "2422:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 325,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2393:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2393:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "EmitStatement",
												"src": "2388:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 330,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2441:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 331,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "2450:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2441:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2441:17:2"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2268:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2267:18:2"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2295:0:2"
									},
									"scope": 340,
									"src": "2240:225:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 339,
									"name": "______gap",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "2471:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 336,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2471:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 338,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 337,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2479:2:2",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "2471:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 341,
							"src": "477:2026:2"
						}
					],
					"src": "0:2504:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							409
						]
					},
					"id": 410,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 342,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {ERC20Detailed}.",
							"fullyImplemented": false,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:3"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "316:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:9:3"
									},
									"scope": 409,
									"src": "270:55:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "427:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:17:3"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "467:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "466:9:3"
									},
									"scope": 409,
									"src": "408:68:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "714:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "733:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:35:3"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "767:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:6:3"
									},
									"scope": 409,
									"src": "696:77:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called.",
									"id": 372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1067:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1082:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:32:3"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1122:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1121:9:3"
									},
									"scope": 409,
									"src": "1048:83:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event.",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1801:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1818:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1800:33:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1852:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1852:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1851:6:3"
									},
									"scope": 409,
									"src": "1784:74:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2187:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2187:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2203:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2222:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2186:51:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2256:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2256:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:6:3"
									},
									"scope": 409,
									"src": "2165:97:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 400,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2446:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2468:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2488:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2445:57:3"
									},
									"src": "2431:72:3"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 408,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2677:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2700:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2725:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2676:63:3"
									},
									"src": "2662:78:3"
								}
							],
							"scope": 410,
							"src": "176:2566:3"
						}
					],
					"src": "0:2743:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							629
						]
					},
					"id": 630,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 412,
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 410,
							"src": "25:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 413,
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 217,
							"src": "48:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 414,
							"nodeType": "ImportDirective",
							"scope": 630,
							"sourceUnit": 705,
							"src": "82:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
							"fullyImplemented": true,
							"id": 629,
							"linearizedBaseContracts": [
								629
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 417,
									"libraryName": {
										"contractScope": null,
										"id": 415,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 216,
										"src": "604:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$216",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "598:27:4",
									"typeName": {
										"id": 416,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "617:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 420,
									"libraryName": {
										"contractScope": null,
										"id": 418,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 704,
										"src": "636:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$704",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "630:26:4",
									"typeName": {
										"id": 419,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "648:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "734:102:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 430,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 433,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 422,
																			"src": "793:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 363,
																		"src": "793:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "793:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 436,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "818:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 437,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "822:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 431,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2729,
																	"src": "770:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "770:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "770:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 429,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "744:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:85:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "744:85:4"
											}
										]
									},
									"documentation": null,
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "684:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 421,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 409,
													"src": "684:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "698:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "710:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "683:41:4"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:0:4"
									},
									"scope": 629,
									"src": "662:174:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "932:112:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 454,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "961:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 457,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 444,
																			"src": "991:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 392,
																		"src": "991:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "991:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 460,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "1020:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 461,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 448,
																	"src": "1026:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 462,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "1030:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 455,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2729,
																	"src": "968:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "968:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "968:68:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 453,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "942:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:95:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "942:95:4"
											}
										]
									},
									"documentation": null,
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "868:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 443,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 409,
													"src": "868:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "882:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "896:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "908:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "867:55:4"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:0:4"
									},
									"scope": 629,
									"src": "842:202:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "1126:536:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 477,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 473,
																			"src": "1415:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1424:1:4",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1415:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 480,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1414:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 484,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2768,
																							"src": "1455:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$629",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$629",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 483,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1447:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 485,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1447:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 486,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 471,
																					"src": "1462:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 481,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 469,
																					"src": "1431:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$409",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 372,
																				"src": "1431:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1431:39:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1474:1:4",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1431:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 490,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1430:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1414:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1490:56:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 476,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "1406:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1406:150:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "1406:150:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 496,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "1585:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 499,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 469,
																			"src": "1615:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 381,
																		"src": "1615:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1615:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 502,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "1639:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 503,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 473,
																	"src": "1648:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 497,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2729,
																	"src": "1592:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1592:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1592:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 495,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "1566:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1566:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "1566:89:4"
											}
										]
									},
									"documentation": null,
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1071:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 468,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 409,
													"src": "1071:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1085:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1102:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1070:46:4"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:0:4"
									},
									"scope": 629,
									"src": "1050:612:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "1754:196:4",
										"statements": [
											{
												"assignments": [
													518
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 542,
														"src": "1764:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 517,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1764:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 529,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 527,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "1831:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 522,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2768,
																			"src": "1811:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$629",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$629",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1803:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1803:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 524,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "1818:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 519,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "1787:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 372,
																"src": "1787:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 56,
														"src": "1787:43:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1787:50:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1764:73:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 531,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "1866:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 534,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 510,
																			"src": "1896:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 381,
																		"src": "1896:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1896:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 537,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "1920:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 538,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "1929:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 532,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2729,
																	"src": "1873:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1873:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1873:69:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 530,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "1847:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:96:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "1847:96:4"
											}
										]
									},
									"documentation": null,
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1699:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 509,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 409,
													"src": "1699:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1713:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1730:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1698:46:4"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:0:4"
									},
									"scope": 629,
									"src": "1668:282:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "2042:241:4",
										"statements": [
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 578,
														"src": "2052:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2052:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 565,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 562,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "2119:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2126:43:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 557,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2768,
																			"src": "2099:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$629",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$629",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2091:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2091:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 559,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "2106:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 554,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "2075:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 372,
																"src": "2075:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2075:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 99,
														"src": "2075:43:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:95:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2052:118:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 567,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2199:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 570,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 545,
																			"src": "2229:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 381,
																		"src": "2229:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2229:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "2253:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 574,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "2262:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 568,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2729,
																	"src": "2206:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2206:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2206:69:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$409",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 566,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "2180:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2180:96:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "2180:96:4"
											}
										]
									},
									"documentation": null,
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1987:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 544,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 409,
													"src": "1987:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2001:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2018:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1986:46:4"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:4"
									},
									"scope": 629,
									"src": "1956:327:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "2735:1026:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 588,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "3269:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3261:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3261:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 656,
																"src": "3261:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3261:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3290:33:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															},
															"value": "SafeERC20: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															}
														],
														"id": 586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "3253:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:71:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "3253:71:4"
											},
											{
												"assignments": [
													596,
													598
												],
												"declarations": [
													{
														"constant": false,
														"id": 596,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "3395:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 595,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3395:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 598,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "3409:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 597,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3409:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 603,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "3456:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 600,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "3444:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3436:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3436:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3436:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3436:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3394:67:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 607,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "3479:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3488:34:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 606,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "3471:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3471:52:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "ExpressionStatement",
												"src": "3471:52:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 611,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "3538:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3538:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3558:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3538:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 626,
												"nodeType": "IfStatement",
												"src": "3534:221:4",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "3561:194:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 618,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "3678:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 619,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3691:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": "bool"
																					}
																				],
																				"id": 620,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3690:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 616,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2729,
																				"src": "3667:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3667:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3667:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3699:44:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 615,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2745,
																		2746
																	],
																	"referencedDeclaration": 2746,
																	"src": "3659:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3659:85:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "3659:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).",
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "2694:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$409",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 580,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 409,
													"src": "2694:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$409",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "2708:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2708:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2693:33:4"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2735:0:4"
									},
									"scope": 629,
									"src": "2666:1095:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 630,
							"src": "574:3189:4"
						}
					],
					"src": "0:3764:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							704
						]
					},
					"id": 705,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 631,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Collection of functions related to the address type",
							"fullyImplemented": true,
							"id": 704,
							"linearizedBaseContracts": [
								704
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "752:544:5",
										"statements": [
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "1004:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 638,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1004:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 640,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1004:16:5"
											},
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"scope": 655,
														"src": "1030:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 641,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1030:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 644,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1052:66:5",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1030:88:5"
											},
											{
												"externalReferences": [
													{
														"account": {
															"declaration": 633,
															"isOffset": false,
															"isSlot": false,
															"src": "1219:7:5",
															"valueSize": 1
														}
													},
													{
														"codehash": {
															"declaration": 639,
															"isOffset": false,
															"isSlot": false,
															"src": "1195:8:5",
															"valueSize": 1
														}
													}
												],
												"id": 645,
												"nodeType": "InlineAssembly",
												"operations": "{\n    codehash := extcodehash(account)\n}",
												"src": "1184:45:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 646,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "1246:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 647,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 642,
																	"src": "1258:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1246:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 649,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "1273:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:3:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1273:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1246:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 653,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1245:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 637,
												"id": 654,
												"nodeType": "Return",
												"src": "1238:51:5"
											}
										]
									},
									"documentation": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following \ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n====",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "706:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:17:5"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "746:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "746:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:6:5"
									},
									"scope": 704,
									"src": "686:610:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "1581:49:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 665,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "1614:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1606:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": "uint160"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1606:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1598:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1598:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 662,
												"id": 668,
												"nodeType": "Return",
												"src": "1591:32:5"
											}
										]
									},
									"documentation": "@dev Converts an `address` into `address payable`. Note that this is\nsimply a type cast: the actual underlying value is not changed.\n     * _Available since v2.4.0._",
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toPayable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1524:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1523:17:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "1564:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1563:17:5"
									},
									"scope": 704,
									"src": "1505:125:5",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "2658:294:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 679,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2766,
																			"src": "2684:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$704",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$704",
																				"typeString": "library Address"
																			}
																		],
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2676:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2676:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2676:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 682,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "2701:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2709:31:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "2668:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2668:73:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "2668:73:5"
											},
											{
												"assignments": [
													688,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 702,
														"src": "2807:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 687,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2807:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 696,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2854:2:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"arguments": [
															{
																"argumentTypes": null,
																"id": 692,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "2846:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 689,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "2825:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2825:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2825:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
																"typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2825:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2825:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2806:51:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 698,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "2875:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2884:60:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "2867:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2867:78:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "2867:78:5"
											}
										]
									},
									"documentation": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     * _Available since v2.4.0._",
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2606:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2606:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "2633:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2605:43:5"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2658:0:5"
									},
									"scope": 704,
									"src": "2587:365:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 705,
							"src": "93:2861:5"
						}
					],
					"src": "0:2955:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							745
						]
					},
					"id": 746,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 706,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
							"file": "@openzeppelin/upgrades/contracts/Initializable.sol",
							"id": 707,
							"nodeType": "ImportDirective",
							"scope": 746,
							"sourceUnit": 815,
							"src": "25:60:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 708,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 814,
										"src": "647:13:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$814",
											"typeString": "contract Initializable"
										}
									},
									"id": 709,
									"nodeType": "InheritanceSpecifier",
									"src": "647:13:6"
								}
							],
							"contractDependencies": [
								814
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module that helps prevent reentrant calls to a function.\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\navailable, which can be applied to functions to make sure there are no nested\n(reentrant) calls to them.\n * Note that because there is a single `nonReentrant` guard, functions marked as\n`nonReentrant` may not call one another. This can be worked around by making\nthose functions `private`, and then adding `external` `nonReentrant` entry\npoints to them.",
							"fullyImplemented": true,
							"id": 745,
							"linearizedBaseContracts": [
								745,
								814
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 711,
									"name": "_guardCounter",
									"nodeType": "VariableDeclaration",
									"scope": 745,
									"src": "733:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 710,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "733:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "810:173:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 716,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "959:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "975:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "959:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "959:17:6"
											}
										]
									},
									"documentation": null,
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 714,
											"modifierName": {
												"argumentTypes": null,
												"id": 713,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 789,
												"src": "798:11:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "798:11:6"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:6"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "810:0:6"
									},
									"scope": 745,
									"src": "769:214:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "1382:175:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 723,
														"name": "_guardCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "1392:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1409:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1392:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "1392:18:6"
											},
											{
												"assignments": [
													728
												],
												"declarations": [
													{
														"constant": false,
														"id": 728,
														"name": "localCounter",
														"nodeType": "VariableDeclaration",
														"scope": 739,
														"src": "1420:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 727,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1420:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 730,
												"initialValue": {
													"argumentTypes": null,
													"id": 729,
													"name": "_guardCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 711,
													"src": "1443:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1420:36:6"
											},
											{
												"id": 731,
												"nodeType": "PlaceholderStatement",
												"src": "1466:1:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 733,
																"name": "localCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "1485:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 734,
																"name": "_guardCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 711,
																"src": "1501:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1485:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1516:33:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "1477:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1477:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "1477:73:6"
											}
										]
									},
									"documentation": "@dev Prevents a contract from calling itself, directly or indirectly.\nCalling a `nonReentrant` function from another `nonReentrant`\nfunction is not supported. It is possible to prevent this from happening\nby making the `nonReentrant` function external, and make it call a\n`private` function that does the actual work.",
									"id": 740,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:6"
									},
									"src": "1358:199:6",
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 744,
									"name": "______gap",
									"nodeType": "VariableDeclaration",
									"scope": 745,
									"src": "1563:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 741,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1563:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 743,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 742,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1571:2:6",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1563:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 746,
							"src": "619:976:6"
						}
					],
					"src": "0:1596:6"
				},
				"id": 6
			},
			"@openzeppelin/upgrades/contracts/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							814
						]
					},
					"id": 815,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 747,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Initializable\n * @dev Helper contract to support initializer functions. To use it, replace\nthe constructor with a function that has the `initializer` modifier.\nWARNING: Unlike constructors, initializer functions must be manually\ninvoked. This applies both to deploying an Initializable contract, as well\nas extending an Initializable contract via inheritance.\nWARNING: When used with inheritance, manual care must be taken to not invoke\na parent initializer twice, or ensure that all initializers are idempotent,\nbecause this is not dealt with automatically as with constructors.",
							"fullyImplemented": true,
							"id": 814,
							"linearizedBaseContracts": [
								814
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 749,
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"scope": 814,
									"src": "757:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 748,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "757:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 751,
									"name": "initializing",
									"nodeType": "VariableDeclaration",
									"scope": 814,
									"src": "876:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 750,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "876:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "1010:313:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 754,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "1024:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 755,
																		"name": "isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "1040:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1040:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1024:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1059:12:7",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 758,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "1060:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1024:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1073:48:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															},
															"value": "Contract instance has already been initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															}
														],
														"id": 753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "1016:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1016:106:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "1016:106:7"
											},
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"scope": 788,
														"src": "1129:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 764,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1129:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"argumentTypes": null,
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1151:13:7",
													"subExpression": {
														"argumentTypes": null,
														"id": 766,
														"name": "initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "1152:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1129:35:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 769,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "1174:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 779,
												"nodeType": "IfStatement",
												"src": "1170:80:7",
												"trueBody": {
													"id": 778,
													"nodeType": "Block",
													"src": "1190:60:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 770,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "1198:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1213:4:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1198:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 773,
															"nodeType": "ExpressionStatement",
															"src": "1198:19:7"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 774,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "1225:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1239:4:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1225:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 777,
															"nodeType": "ExpressionStatement",
															"src": "1225:18:7"
														}
													]
												}
											},
											{
												"id": 780,
												"nodeType": "PlaceholderStatement",
												"src": "1256:1:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 781,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 765,
													"src": "1268:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 787,
												"nodeType": "IfStatement",
												"src": "1264:55:7",
												"trueBody": {
													"id": 786,
													"nodeType": "Block",
													"src": "1284:35:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 782,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "1292:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1307:5:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1292:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 785,
															"nodeType": "ExpressionStatement",
															"src": "1292:20:7"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Modifier to use in the initializer function of a contract.",
									"id": 789,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:2:7"
									},
									"src": "987:336:7",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "1462:445:7",
										"statements": [
											{
												"assignments": [
													795
												],
												"declarations": [
													{
														"constant": false,
														"id": 795,
														"name": "self",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "1797:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 794,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1797:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 799,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 797,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2756,
															"src": "1820:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Initializable_$814",
																"typeString": "contract Initializable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Initializable_$814",
																"typeString": "contract Initializable"
															}
														],
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1812:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1812:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1797:28:7"
											},
											{
												"assignments": [
													801
												],
												"declarations": [
													{
														"constant": false,
														"id": 801,
														"name": "cs",
														"nodeType": "VariableDeclaration",
														"scope": 808,
														"src": "1831:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1831:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 802,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1831:10:7"
											},
											{
												"externalReferences": [
													{
														"self": {
															"declaration": 795,
															"isOffset": false,
															"isSlot": false,
															"src": "1876:4:7",
															"valueSize": 1
														}
													},
													{
														"cs": {
															"declaration": 801,
															"isOffset": false,
															"isSlot": false,
															"src": "1858:2:7",
															"valueSize": 1
														}
													}
												],
												"id": 803,
												"nodeType": "InlineAssembly",
												"operations": "{ cs := extcodesize(self) }",
												"src": "1847:36:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 804,
														"name": "cs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "1895:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1901:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1895:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 793,
												"id": 807,
												"nodeType": "Return",
												"src": "1888:14:7"
											}
										]
									},
									"documentation": "@dev Returns true if and only if the function is running in the constructor",
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isConstructor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1431:2:7"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "1456:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 791,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1456:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1455:6:7"
									},
									"scope": 814,
									"src": "1409:498:7",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 813,
									"name": "______gap",
									"nodeType": "VariableDeclaration",
									"scope": 814,
									"src": "1982:29:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 810,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1982:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 812,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 811,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1990:2:7",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1982:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 815,
							"src": "657:1357:7"
						}
					],
					"src": "0:2015:7"
				},
				"id": 7
			},
			"contracts/EasyStaking.sol": {
				"ast": {
					"absolutePath": "contracts/EasyStaking.sol",
					"exportedSymbols": {
						"EasyStaking": [
							2374
						]
					},
					"id": 2375,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 816,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
							"file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
							"id": 817,
							"nodeType": "ImportDirective",
							"scope": 2375,
							"sourceUnit": 341,
							"src": "25:82:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol",
							"id": 818,
							"nodeType": "ImportDirective",
							"scope": 2375,
							"sourceUnit": 705,
							"src": "108:78:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
							"id": 819,
							"nodeType": "ImportDirective",
							"scope": 2375,
							"sourceUnit": 217,
							"src": "187:78:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol",
							"file": "@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol",
							"id": 820,
							"nodeType": "ImportDirective",
							"scope": 2375,
							"sourceUnit": 630,
							"src": "266:86:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol",
							"id": 821,
							"nodeType": "ImportDirective",
							"scope": 2375,
							"sourceUnit": 746,
							"src": "353:86:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC20Mintable.sol",
							"file": "./IERC20Mintable.sol",
							"id": 822,
							"nodeType": "ImportDirective",
							"scope": 2375,
							"sourceUnit": 2419,
							"src": "440:30:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Sacrifice.sol",
							"file": "./Sacrifice.sol",
							"id": 823,
							"nodeType": "ImportDirective",
							"scope": 2375,
							"sourceUnit": 2432,
							"src": "471:25:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/Sigmoid.sol",
							"file": "./lib/Sigmoid.sol",
							"id": 824,
							"nodeType": "ImportDirective",
							"scope": 2375,
							"sourceUnit": 2728,
							"src": "497:27:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 825,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 340,
										"src": "746:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$340",
											"typeString": "contract Ownable"
										}
									},
									"id": 826,
									"nodeType": "InheritanceSpecifier",
									"src": "746:7:8"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 827,
										"name": "ReentrancyGuard",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 745,
										"src": "755:15:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ReentrancyGuard_$745",
											"typeString": "contract ReentrancyGuard"
										}
									},
									"id": 828,
									"nodeType": "InheritanceSpecifier",
									"src": "755:15:8"
								}
							],
							"contractDependencies": [
								29,
								340,
								745,
								814,
								2431
							],
							"contractKind": "contract",
							"documentation": "@title EasyStaking\n * Note: all percentage values are between 0 (0%) and 1 (100%)\nand represented as fixed point numbers containing 18 decimals like with Ether\n100% == 1 ether",
							"fullyImplemented": true,
							"id": 2374,
							"linearizedBaseContracts": [
								2374,
								745,
								340,
								29,
								814
							],
							"name": "EasyStaking",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 831,
									"libraryName": {
										"contractScope": null,
										"id": 829,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 704,
										"src": "783:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$704",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "777:26:8",
									"typeName": {
										"id": 830,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "795:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 834,
									"libraryName": {
										"contractScope": null,
										"id": 832,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 216,
										"src": "814:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$216",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "808:27:8",
									"typeName": {
										"id": 833,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "827:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 837,
									"libraryName": {
										"contractScope": null,
										"id": 835,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 629,
										"src": "846:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$629",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "840:27:8",
									"typeName": {
										"contractScope": null,
										"id": 836,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 409,
										"src": "860:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$409",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 840,
									"libraryName": {
										"contractScope": null,
										"id": 838,
										"name": "Sigmoid",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2727,
										"src": "878:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Sigmoid_$2727",
											"typeString": "library Sigmoid"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "872:32:8",
									"typeName": {
										"contractScope": null,
										"id": 839,
										"name": "Sigmoid.State",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2547,
										"src": "890:13:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
											"typeString": "struct Sigmoid.State"
										}
									}
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when a user deposits tokens.\n@param sender User address.\n@param id User's unique deposit ID.\n@param amount The amount of deposited tokens.\n@param balance Current user balance.\n@param accruedEmission User's accrued emission.\n@param prevDepositDuration Duration of the previous deposit in seconds.",
									"id": 854,
									"name": "Deposited",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1309:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"indexed": true,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1341:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1369:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"indexed": false,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1393:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"indexed": false,
												"name": "accruedEmission",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1418:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"indexed": false,
												"name": "prevDepositDuration",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1451:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1299:185:8"
									},
									"src": "1284:201:8"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when a user requests withdrawal.\n@param sender User address.\n@param id User's unique deposit ID.",
									"id": 860,
									"name": "WithdrawalRequested",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1664:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"indexed": true,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1688:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1663:44:8"
									},
									"src": "1638:70:8"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when a user withdraws tokens.\n@param sender User address.\n@param id User's unique deposit ID.\n@param amount The amount of withdrawn tokens.\n@param fee The withdrawal fee.\n@param balance Current user balance.\n@param accruedEmission User's accrued emission.\n@param lastDepositDuration Duration of the last deposit in seconds.",
									"id": 876,
									"name": "Withdrawn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2148:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"indexed": true,
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2180:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2180:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"indexed": false,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2208:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"indexed": false,
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2232:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"indexed": false,
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2253:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2253:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": false,
												"name": "accruedEmission",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2278:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"name": "lastDepositDuration",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2311:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2311:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2138:206:8"
									},
									"src": "2123:222:8"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when a new fee value is set.\n@param value A new fee value.\n@param sender The owner address at the moment of fee changing.",
									"id": 882,
									"name": "FeeSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "2536:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2536:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"indexed": false,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "2551:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2551:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2535:31:8"
									},
									"src": "2523:44:8"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when a new withdrawal lock duration value is set.\n@param value A new withdrawal lock duration value.\n@param sender The owner address at the moment of value changing.",
									"id": 888,
									"name": "WithdrawalLockDurationSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2821:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"indexed": false,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "2836:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2820:31:8"
									},
									"src": "2789:63:8"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when a new withdrawal unlock duration value is set.\n@param value A new withdrawal unlock duration value.\n@param sender The owner address at the moment of value changing.",
									"id": 894,
									"name": "WithdrawalUnlockDurationSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "3112:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"indexed": false,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "3127:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3127:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3111:31:8"
									},
									"src": "3078:65:8"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when lock after duration value is set.\n@param value A new withdrawal lock duration value.\n@param sender The owner address at the moment of value changing.",
									"id": 900,
									"name": "LockAfterStakeDurationSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "3386:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": false,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "3401:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3401:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3385:31:8"
									},
									"src": "3354:63:8"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when a new total supply factor value is set.\n@param value A new total supply factor value.\n@param sender The owner address at the moment of value changing.",
									"id": 906,
									"name": "TotalSupplyFactorSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "3660:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3660:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"indexed": false,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "3675:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3675:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3659:31:8"
									},
									"src": "3633:58:8"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when new sigmoid parameters values are set.\n@param a A new parameter A value.\n@param b A new parameter B value.\n@param c A new parameter C value.\n@param sender The owner address at the moment of value changing.",
									"id": 916,
									"name": "SigmoidParametersSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"indexed": false,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3999:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3999:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"indexed": false,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "4010:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 909,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4010:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"indexed": false,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "4020:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4020:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"indexed": false,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "4031:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3998:48:8"
									},
									"src": "3972:75:8"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when a new Liquidity Providers Reward address value is set.\n@param value A new address value.\n@param sender The owner address at the moment of address changing.",
									"id": 922,
									"name": "LiquidityProvidersRewardAddressSet",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "4305:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4305:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"indexed": false,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "4320:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4320:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4304:31:8"
									},
									"src": "4264:72:8"
								},
								{
									"constant": true,
									"id": 925,
									"name": "YEAR",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "4342:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 923,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4342:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "333635",
										"id": 924,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4374:8:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 928,
									"name": "MAX_EMISSION_RATE",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "4437:54:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 926,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4437:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "313530",
										"id": 927,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4481:10:8",
										"subdenomination": "finney",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_150000000000000000_by_1",
											"typeString": "int_const 150000000000000000"
										},
										"value": "150"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 931,
									"name": "PARAM_UPDATE_DELAY",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "4584:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 929,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4584:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "37",
										"id": 930,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4629:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 933,
									"name": "token",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "4661:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
										"typeString": "contract IERC20Mintable"
									},
									"typeName": {
										"contractScope": null,
										"id": 932,
										"name": "IERC20Mintable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2418,
										"src": "4661:14:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
											"typeString": "contract IERC20Mintable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "EasyStaking.UintParam",
									"id": 940,
									"members": [
										{
											"constant": false,
											"id": 935,
											"name": "oldValue",
											"nodeType": "VariableDeclaration",
											"scope": 940,
											"src": "4722:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 934,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4722:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 937,
											"name": "newValue",
											"nodeType": "VariableDeclaration",
											"scope": 940,
											"src": "4748:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 936,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4748:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 939,
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 940,
											"src": "4774:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 938,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4774:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UintParam",
									"nodeType": "StructDefinition",
									"scope": 2374,
									"src": "4695:103:8",
									"visibility": "public"
								},
								{
									"canonicalName": "EasyStaking.AddressParam",
									"id": 947,
									"members": [
										{
											"constant": false,
											"id": 942,
											"name": "oldValue",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "4834:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 941,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4834:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 944,
											"name": "newValue",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "4860:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 943,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4860:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 946,
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 947,
											"src": "4886:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 945,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "4886:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AddressParam",
									"nodeType": "StructDefinition",
									"scope": 2374,
									"src": "4804:106:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 949,
									"name": "liquidityProvidersRewardAddressParam",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "4970:56:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressParam_$947_storage",
										"typeString": "struct EasyStaking.AddressParam"
									},
									"typeName": {
										"contractScope": null,
										"id": 948,
										"name": "AddressParam",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 947,
										"src": "4970:12:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressParam_$947_storage_ptr",
											"typeString": "struct EasyStaking.AddressParam"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 951,
									"name": "feeParam",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "5088:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UintParam_$940_storage",
										"typeString": "struct EasyStaking.UintParam"
									},
									"typeName": {
										"contractScope": null,
										"id": 950,
										"name": "UintParam",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 940,
										"src": "5088:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
											"typeString": "struct EasyStaking.UintParam"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 953,
									"name": "withdrawalLockDurationParam",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "5210:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UintParam_$940_storage",
										"typeString": "struct EasyStaking.UintParam"
									},
									"typeName": {
										"contractScope": null,
										"id": 952,
										"name": "UintParam",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 940,
										"src": "5210:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
											"typeString": "struct EasyStaking.UintParam"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 955,
									"name": "withdrawalUnlockDurationParam",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "5364:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UintParam_$940_storage",
										"typeString": "struct EasyStaking.UintParam"
									},
									"typeName": {
										"contractScope": null,
										"id": 954,
										"name": "UintParam",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 940,
										"src": "5364:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
											"typeString": "struct EasyStaking.UintParam"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 957,
									"name": "lockAfterStakeDurationParam",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "5492:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UintParam_$940_storage",
										"typeString": "struct EasyStaking.UintParam"
									},
									"typeName": {
										"contractScope": null,
										"id": 956,
										"name": "UintParam",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 940,
										"src": "5492:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
											"typeString": "struct EasyStaking.UintParam"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 959,
									"name": "totalSupplyFactorParam",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "5615:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UintParam_$940_storage",
										"typeString": "struct EasyStaking.UintParam"
									},
									"typeName": {
										"contractScope": null,
										"id": 958,
										"name": "UintParam",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 940,
										"src": "5615:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
											"typeString": "struct EasyStaking.UintParam"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 965,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "5698:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 964,
										"keyType": {
											"id": 960,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5707:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5698:49:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 963,
											"keyType": {
												"id": 961,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5727:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "5718:28:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 962,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5738:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 971,
									"name": "depositDates",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "5805:69:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 970,
										"keyType": {
											"id": 966,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5814:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5805:49:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 969,
											"keyType": {
												"id": 967,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5834:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "5825:28:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 968,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5845:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 977,
									"name": "withdrawalRequestsDates",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "5927:80:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 976,
										"keyType": {
											"id": 972,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5936:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5927:49:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 975,
											"keyType": {
												"id": 973,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5956:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "5947:28:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 974,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5967:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 981,
									"name": "lastDepositIds",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "6040:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 980,
										"keyType": {
											"id": 978,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "6049:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "6040:28:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 979,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6060:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 983,
									"name": "totalStaked",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "6127:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 982,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6127:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 985,
									"name": "locked",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "6232:19:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 984,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "6232:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 987,
									"name": "sigmoid",
									"nodeType": "VariableDeclaration",
									"scope": 2374,
									"src": "6331:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_State_$2547_storage",
										"typeString": "struct Sigmoid.State"
									},
									"typeName": {
										"contractScope": null,
										"id": 986,
										"name": "Sigmoid.State",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2547,
										"src": "6331:13:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
											"typeString": "struct Sigmoid.State"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "7643:713:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1015,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "7661:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7679:1:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7671:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7671:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7661:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7a65726f2061646472657373",
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7683:14:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
																"typeString": "literal_string \"zero address\""
															},
															"value": "zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
																"typeString": "literal_string \"zero address\""
															}
														],
														"id": 1014,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "7653:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7653:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "7653:45:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 1024,
																	"name": "_tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "7716:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 656,
																"src": "7716:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7716:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f74206120636f6e74726163742061646472657373",
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7744:24:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b77bcd2a825e52780e829ed8ff3b79f0c29b36ef736401a1c1184faec979973",
																"typeString": "literal_string \"not a contract address\""
															},
															"value": "not a contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b77bcd2a825e52780e829ed8ff3b79f0c29b36ef736401a1c1184faec979973",
																"typeString": "literal_string \"not a contract address\""
															}
														],
														"id": 1023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "7708:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7708:61:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "7708:61:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1033,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "7798:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7798:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1030,
															"name": "Ownable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "7779:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Ownable_$340_$",
																"typeString": "type(contract Ownable)"
															}
														},
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 251,
														"src": "7779:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7779:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "7779:30:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1037,
															"name": "ReentrancyGuard",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "7819:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ReentrancyGuard_$745_$",
																"typeString": "type(contract ReentrancyGuard)"
															}
														},
														"id": 1039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 721,
														"src": "7819:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7819:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "7819:28:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1042,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "7857:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
															"typeString": "contract IERC20Mintable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1044,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 991,
																"src": "7880:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1043,
															"name": "IERC20Mintable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2418,
															"src": "7865:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Mintable_$2418_$",
																"typeString": "type(contract IERC20Mintable)"
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7865:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
															"typeString": "contract IERC20Mintable"
														}
													},
													"src": "7857:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
														"typeString": "contract IERC20Mintable"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "7857:37:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1049,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "7911:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"name": "setFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "7904:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7904:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "7904:12:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1053,
															"name": "_withdrawalLockDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "7952:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1052,
														"name": "setWithdrawalLockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "7926:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7926:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "7926:50:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1057,
															"name": "_withdrawalUnlockDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "8014:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1056,
														"name": "setWithdrawalUnlockDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "7986:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7986:54:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "7986:54:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1061,
															"name": "_lockAfterStakeDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "8076:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1060,
														"name": "setLockAfterStakeDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "8050:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8050:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "8050:50:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1065,
															"name": "_totalSupplyFactor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "8131:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "setTotalSupplyFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "8110:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8110:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "8110:40:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1069,
															"name": "_sigmoidParamA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "8181:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1070,
															"name": "_sigmoidParamB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "8197:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1071,
															"name": "_sigmoidParamC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "8213:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1068,
														"name": "setSigmoidParameters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1571,
														"src": "8160:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_int256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,int256,uint256)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8160:68:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "8160:68:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1075,
															"name": "_liquidityProvidersRewardAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 993,
															"src": "8273:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1074,
														"name": "setLiquidityProvidersRewardAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "8238:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8238:68:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "8238:68:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1081,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "8342:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1078,
															"name": "Ownable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "8316:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Ownable_$340_$",
																"typeString": "type(contract Ownable)"
															}
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "8316:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8316:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "8316:33:8"
											}
										]
									},
									"documentation": "@dev Initializes the contract.\n@param _owner The owner of the contract.\n@param _tokenAddress The address of the STAKE token contract.\n@param _liquidityProvidersRewardAddress The address for the Liquidity Providers reward.\n@param _fee The fee of the forced withdrawal (in percentage).\n@param _withdrawalLockDuration The time from the request after which the withdrawal will be available (in seconds).\n@param _withdrawalUnlockDuration The time during which the withdrawal will be available from the moment of unlocking (in seconds).\n@param _totalSupplyFactor Total supply factor for calculating emission rate (in percentage).\n@param _sigmoidParamA Sigmoid parameter A.\n@param _sigmoidParamB Sigmoid parameter B.\n@param _sigmoidParamC Sigmoid parameter C.",
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1012,
											"modifierName": {
												"argumentTypes": null,
												"id": 1011,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 789,
												"src": "7631:11:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "7631:11:8"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "7242:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7242:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"name": "_tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "7266:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7266:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"name": "_liquidityProvidersRewardAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "7297:40:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7297:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "7347:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7347:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"name": "_withdrawalLockDuration",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "7369:31:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7369:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"name": "_withdrawalUnlockDuration",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "7410:33:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7410:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"name": "_lockAfterStakeDuration",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "7453:31:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7453:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"name": "_totalSupplyFactor",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "7494:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7494:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"name": "_sigmoidParamA",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "7530:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7530:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"name": "_sigmoidParamB",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "7562:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1006,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7562:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"name": "_sigmoidParamC",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "7593:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7593:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7232:389:8"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7643:0:8"
									},
									"scope": 2374,
									"src": "7213:1143:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "8635:63:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "8653:28:8",
															"subExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1091,
																	"name": "lastDepositIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "8655:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1094,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1092,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2742,
																		"src": "8670:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "8670:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8655:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1096,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "8683:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1090,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "8645:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8645:46:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "8645:46:8"
											}
										]
									},
									"documentation": "@dev This method is used to deposit tokens to a new deposit.\nIt generates a new deposit ID and calls another public \"deposit\" method. See its description.\n@param _amount The amount to deposit.",
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "8609:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8609:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8608:17:8"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8635:0:8"
									},
									"scope": 2374,
									"src": "8592:106:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "9369:300:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1108,
																	"name": "_depositId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "9387:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9400:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9387:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1111,
																	"name": "_depositId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "9405:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1112,
																		"name": "lastDepositIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "9419:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1115,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1113,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2742,
																			"src": "9434:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "9434:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9419:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9405:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9387:58:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77726f6e67206465706f736974206964",
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9447:18:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e67914a0bee98582863c2459075123e6da70d0a57b2feaff0cd3d2edd1a314c1",
																"typeString": "literal_string \"wrong deposit id\""
															},
															"value": "wrong deposit id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e67914a0bee98582863c2459075123e6da70d0a57b2feaff0cd3d2edd1a314c1",
																"typeString": "literal_string \"wrong deposit id\""
															}
														],
														"id": 1107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "9379:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9379:87:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "9379:87:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1122,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "9485:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9485:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1124,
															"name": "_depositId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "9497:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1125,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "9509:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1121,
														"name": "_deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2012,
														"src": "9476:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9476:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "9476:41:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9538:4:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1128,
														"name": "_setLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2365,
														"src": "9527:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9527:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "9527:16:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1135,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2742,
																		"src": "9580:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "9580:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1138,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2780,
																			"src": "9600:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EasyStaking_$2374",
																				"typeString": "contract EasyStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EasyStaking_$2374",
																				"typeString": "contract EasyStaking"
																			}
																		],
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9592:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9592:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1140,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "9607:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1133,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "9561:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
																		"typeString": "contract IERC20Mintable"
																	}
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2396,
																"src": "9561:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9561:54:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e73666572206661696c6564",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9617:17:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															},
															"value": "transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															}
														],
														"id": 1132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "9553:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9553:82:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "9553:82:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9656:5:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1145,
														"name": "_setLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2365,
														"src": "9645:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9645:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "9645:17:8"
											}
										]
									},
									"documentation": "@dev This method is used to deposit tokens to the deposit opened before.\nIt calls the internal \"_deposit\" method and transfers tokens from sender to contract.\nSender must approve tokens first.\n     * Instead this, user can use the simple \"transfer\" method of STAKE token contract to make a deposit.\nSender's approval is not needed in this case.\n     * Note: each call updates the deposit date so be careful if you want to make a long staking.\n     * @param _depositId User's unique deposit ID.\n@param _amount The amount to deposit.",
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"name": "_depositId",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "9325:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9325:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "9345:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9345:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9324:37:8"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9369:0:8"
									},
									"scope": 2374,
									"src": "9308:361:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "10173:209:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1162,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2742,
																	"src": "10191:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10191:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1165,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 933,
																		"src": "10213:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
																			"typeString": "contract IERC20Mintable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
																			"typeString": "contract IERC20Mintable"
																		}
																	],
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10205:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10205:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10191:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f6e6c7920746f6b656e20636f6e747261637420697320616c6c6f776564",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10221:32:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8836b45fd06937bfd1a3e0582ab20af04b501245525b4e38b3f1d4cde6154c25",
																"typeString": "literal_string \"only token contract is allowed\""
															},
															"value": "only token contract is allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8836b45fd06937bfd1a3e0582ab20af04b501245525b4e38b3f1d4cde6154c25",
																"typeString": "literal_string \"only token contract is allowed\""
															}
														],
														"id": 1161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "10183:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10183:71:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "10183:71:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10268:7:8",
													"subExpression": {
														"argumentTypes": null,
														"id": 1171,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "10269:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "10264:91:8",
												"trueBody": {
													"id": 1182,
													"nodeType": "Block",
													"src": "10277:78:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1174,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "10300:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": true,
																		"src": "10309:25:8",
																		"subExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1175,
																				"name": "lastDepositIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 981,
																				"src": "10311:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1177,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1176,
																				"name": "_sender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1152,
																				"src": "10326:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "10311:23:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1179,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "10336:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1173,
																	"name": "_deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "10291:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10291:53:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1181,
															"nodeType": "ExpressionStatement",
															"src": "10291:53:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10371:4:8",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1160,
												"id": 1185,
												"nodeType": "Return",
												"src": "10364:11:8"
											}
										]
									},
									"documentation": "@dev This method is called when STAKE tokens are transferred to this contract.\nusing \"transfer\", \"transferFrom\", or \"transferAndCall\" method of STAKE token contract.\nIt generates a new deposit ID and calls the internal \"_deposit\" method.\n@param _sender The sender of tokens.\n@param _amount The transferred amount.\n@return true if successful",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"name": "_sender",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "10099:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10099:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "10116:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10116:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "10133:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10133:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10098:50:8"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "10167:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10167:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10166:6:8"
									},
									"scope": 2374,
									"src": "10074:308:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "10720:65:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1195,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "10740:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10740:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1197,
															"name": "_depositId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "10752:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1198,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "10764:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10773:4:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1194,
														"name": "_withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "10730:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,uint256,bool)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10730:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "10730:48:8"
											}
										]
									},
									"documentation": "@dev This method is used to make a forced withdrawal with a fee.\nIt calls the internal \"_withdraw\" method.\n@param _depositId User's unique deposit ID.\n@param _amount The amount to withdraw (0 - to withdraw all).",
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeForcedWithdrawal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"name": "_depositId",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "10674:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10674:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "10694:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10694:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10673:37:8"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10720:0:8"
									},
									"scope": 2374,
									"src": "10644:141:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "11143:228:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1209,
																	"name": "_depositId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1205,
																	"src": "11161:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11174:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11161:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1212,
																	"name": "_depositId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1205,
																	"src": "11179:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1213,
																		"name": "lastDepositIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "11193:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1216,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1214,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2742,
																			"src": "11208:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "11208:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11193:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11179:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11161:58:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77726f6e67206465706f736974206964",
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11221:18:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e67914a0bee98582863c2459075123e6da70d0a57b2feaff0cd3d2edd1a314c1",
																"typeString": "literal_string \"wrong deposit id\""
															},
															"value": "wrong deposit id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e67914a0bee98582863c2459075123e6da70d0a57b2feaff0cd3d2edd1a314c1",
																"typeString": "literal_string \"wrong deposit id\""
															}
														],
														"id": 1208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "11153:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11153:87:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "11153:87:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1222,
																"name": "withdrawalRequestsDates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "11250:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1226,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1223,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2742,
																	"src": "11274:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11274:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11250:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1227,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1225,
															"name": "_depositId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "11286:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11250:47:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1228,
															"name": "_now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "11300:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11300:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11250:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "11250:56:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1233,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "11341:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11341:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1235,
															"name": "_depositId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "11353:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1232,
														"name": "WithdrawalRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "11321:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11321:43:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "EmitStatement",
												"src": "11316:48:8"
											}
										]
									},
									"documentation": "@dev This method is used to request a withdrawal without a fee.\nIt sets the date of the request.\n     * Note: each call updates the date of the request so don't call this method twice during the lock.\n     * @param _depositId User's unique deposit ID.",
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestWithdrawal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"name": "_depositId",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "11114:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11114:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11113:20:8"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11143:0:8"
									},
									"scope": 2374,
									"src": "11087:284:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "11932:510:8",
										"statements": [
											{
												"assignments": [
													1247
												],
												"declarations": [
													{
														"constant": false,
														"id": 1247,
														"name": "requestDate",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "11942:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11942:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1254,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1248,
															"name": "withdrawalRequestsDates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "11964:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1251,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1249,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "11988:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11988:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11964:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1253,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1252,
														"name": "_depositId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "12000:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11964:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11942:69:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1256,
																"name": "requestDate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "12029:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12043:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12029:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7769746864726177616c207761736e277420726571756573746564",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12046:29:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd56044e4c844e2ba3ca4540a1086fe562863d06a8139e8072e531d92401e567",
																"typeString": "literal_string \"withdrawal wasn't requested\""
															},
															"value": "withdrawal wasn't requested"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd56044e4c844e2ba3ca4540a1086fe562863d06a8139e8072e531d92401e567",
																"typeString": "literal_string \"withdrawal wasn't requested\""
															}
														],
														"id": 1255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "12021:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12021:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "12021:55:8"
											},
											{
												"assignments": [
													1263
												],
												"declarations": [
													{
														"constant": false,
														"id": 1263,
														"name": "timestamp",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "12086:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1262,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12086:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1266,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1264,
														"name": "_now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "12106:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12106:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12086:26:8"
											},
											{
												"assignments": [
													1268
												],
												"declarations": [
													{
														"constant": false,
														"id": 1268,
														"name": "lockEnd",
														"nodeType": "VariableDeclaration",
														"scope": 1310,
														"src": "12122:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1267,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12122:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1271,
																"name": "withdrawalLockDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "12156:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12156:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1269,
															"name": "requestDate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "12140:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 56,
														"src": "12140:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12140:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12122:59:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1276,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "12199:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1277,
																"name": "lockEnd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "12212:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12199:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "746f6f206561726c79",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12221:11:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d87d05e52726880c4bb1003e00ed00463d214b7b936d9983b909b11b18ccd468",
																"typeString": "literal_string \"too early\""
															},
															"value": "too early"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d87d05e52726880c4bb1003e00ed00463d214b7b936d9983b909b11b18ccd468",
																"typeString": "literal_string \"too early\""
															}
														],
														"id": 1275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "12191:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12191:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "12191:42:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1283,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "12251:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1286,
																			"name": "withdrawalUnlockDuration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1679,
																			"src": "12275:24:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12275:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1284,
																		"name": "lockEnd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1268,
																		"src": "12263:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 56,
																	"src": "12263:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12263:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12251:51:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "746f6f206c617465",
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12304:10:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9653d91002129bb8471bce01d6c8bb486aa66e48f407a0dd073e6b452e1b6e5",
																"typeString": "literal_string \"too late\""
															},
															"value": "too late"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9653d91002129bb8471bce01d6c8bb486aa66e48f407a0dd073e6b452e1b6e5",
																"typeString": "literal_string \"too late\""
															}
														],
														"id": 1282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "12243:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12243:72:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "12243:72:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1293,
																"name": "withdrawalRequestsDates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "12325:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1297,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1294,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2742,
																	"src": "12349:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "12349:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12325:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1298,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1296,
															"name": "_depositId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "12361:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12325:47:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12375:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12325:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "12325:51:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1303,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "12396:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12396:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1305,
															"name": "_depositId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "12408:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1306,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "12420:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "66616c7365",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12429:5:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1302,
														"name": "_withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2189,
														"src": "12386:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,uint256,bool)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12386:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "12386:49:8"
											}
										]
									},
									"documentation": "@dev This method is used to make a requested withdrawal.\nIt calls the internal \"_withdraw\" method and resets the date of the request.\n     * If sender didn't call this method during the unlock period (if timestamp >= lockEnd + withdrawalUnlockDuration)\nthey have to call \"requestWithdrawal\" one more time.\n     * @param _depositId User's unique deposit ID.\n@param _amount The amount to withdraw (0 - to withdraw all).",
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "makeRequestedWithdrawal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"name": "_depositId",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "11886:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11886:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "11906:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11885:37:8"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11932:0:8"
									},
									"scope": 2374,
									"src": "11853:589:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "12892:741:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1323,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "12910:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12925:1:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12917:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12917:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "12910:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1328,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "12931:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1330,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2780,
																			"src": "12946:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EasyStaking_$2374",
																				"typeString": "contract EasyStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EasyStaking_$2374",
																				"typeString": "contract EasyStaking"
																			}
																		],
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12938:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12938:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "12931:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "12910:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7420612076616c696420726563697069656e74",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12953:23:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96d834a81ddcbdaa877ffaac054ded446aee783ec256e0126518c844a5046ddb",
																"typeString": "literal_string \"not a valid recipient\""
															},
															"value": "not a valid recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96d834a81ddcbdaa877ffaac054ded446aee783ec256e0126518c844a5046ddb",
																"typeString": "literal_string \"not a valid recipient\""
															}
														],
														"id": 1322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "12902:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12902:75:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "12902:75:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1338,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1317,
																"src": "12995:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13005:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12995:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "616d6f756e742073686f756c642062652067726561746572207468616e2030",
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13008:33:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf61a39e1630036b71f28ed5a2a9ccdf861012ed2f49b534cd9eea01d0258437",
																"typeString": "literal_string \"amount should be greater than 0\""
															},
															"value": "amount should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf61a39e1630036b71f28ed5a2a9ccdf861012ed2f49b534cd9eea01d0258437",
																"typeString": "literal_string \"amount should be greater than 0\""
															}
														],
														"id": 1337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "12987:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12987:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "12987:55:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1344,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "13056:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13074:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13066:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13066:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "13056:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1366,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "13244:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1368,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "13262:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
																		"typeString": "contract IERC20Mintable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
																		"typeString": "contract IERC20Mintable"
																	}
																],
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13254:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13254:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "13244:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1413,
														"nodeType": "Block",
														"src": "13515:112:8",
														"statements": [
															{
																"assignments": [
																	1401
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1401,
																		"name": "customToken",
																		"nodeType": "VariableDeclaration",
																		"scope": 1413,
																		"src": "13529:18:8",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$409",
																			"typeString": "contract IERC20"
																		},
																		"typeName": {
																			"contractScope": null,
																			"id": 1400,
																			"name": "IERC20",
																			"nodeType": "UserDefinedTypeName",
																			"referencedDeclaration": 409,
																			"src": "13529:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 1405,
																"initialValue": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1403,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1313,
																			"src": "13557:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1402,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "13550:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$409_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13550:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$409",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "13529:35:8"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1409,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "13603:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1410,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1317,
																			"src": "13608:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1406,
																			"name": "customToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1401,
																			"src": "13578:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$409",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "safeTransfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 442,
																		"src": "13578:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$409_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$409_$",
																			"typeString": "function (contract IERC20,address,uint256)"
																		}
																	},
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13578:38:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1412,
																"nodeType": "ExpressionStatement",
																"src": "13578:38:8"
															}
														]
													},
													"id": 1414,
													"nodeType": "IfStatement",
													"src": "13240:387:8",
													"trueBody": {
														"id": 1399,
														"nodeType": "Block",
														"src": "13270:239:8",
														"statements": [
															{
																"assignments": [
																	1372
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1372,
																		"name": "availableAmount",
																		"nodeType": "VariableDeclaration",
																		"scope": 1399,
																		"src": "13284:23:8",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1371,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "13284:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 1382,
																"initialValue": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1380,
																			"name": "totalStaked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "13345:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1376,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2780,
																							"src": "13334:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_EasyStaking_$2374",
																								"typeString": "contract EasyStaking"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_EasyStaking_$2374",
																								"typeString": "contract EasyStaking"
																							}
																						],
																						"id": 1375,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "13326:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 1377,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13326:13:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1373,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 933,
																					"src": "13310:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
																						"typeString": "contract IERC20Mintable"
																					}
																				},
																				"id": 1374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2412,
																				"src": "13310:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 1378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13310:30:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 72,
																		"src": "13310:34:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13310:47:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "13284:73:8"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1384,
																				"name": "availableAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1372,
																				"src": "13379:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1385,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1317,
																				"src": "13398:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13379:26:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "696e73756666696369656e742066756e6473",
																			"id": 1387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13407:20:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																				"typeString": "literal_string \"insufficient funds\""
																			},
																			"value": "insufficient funds"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																				"typeString": "literal_string \"insufficient funds\""
																			}
																		],
																		"id": 1383,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2745,
																			2746
																		],
																		"referencedDeclaration": 2746,
																		"src": "13371:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13371:57:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1389,
																"nodeType": "ExpressionStatement",
																"src": "13371:57:8"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1393,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1315,
																					"src": "13465:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1394,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1317,
																					"src": "13470:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1391,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 933,
																					"src": "13450:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
																						"typeString": "contract IERC20Mintable"
																					}
																				},
																				"id": 1392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2385,
																				"src": "13450:14:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13450:28:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"hexValue": "7472616e73666572206661696c6564",
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13480:17:8",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																				"typeString": "literal_string \"transfer failed\""
																			},
																			"value": "transfer failed"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																				"typeString": "literal_string \"transfer failed\""
																			}
																		],
																		"id": 1390,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2745,
																			2746
																		],
																		"referencedDeclaration": 2746,
																		"src": "13442:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13442:56:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1398,
																"nodeType": "ExpressionStatement",
																"src": "13442:56:8"
															}
														]
													}
												},
												"id": 1415,
												"nodeType": "IfStatement",
												"src": "13052:575:8",
												"trueBody": {
													"id": 1365,
													"nodeType": "Block",
													"src": "13078:156:8",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "13096:18:8",
																"subExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1351,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1317,
																			"src": "13106:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1349,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "13097:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "send",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "13097:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (uint256) returns (bool)"
																		}
																	},
																	"id": 1352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13097:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1364,
															"nodeType": "IfStatement",
															"src": "13092:132:8",
															"trueBody": {
																"id": 1363,
																"nodeType": "Block",
																"src": "13116:108:8",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1360,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1315,
																					"src": "13205:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				],
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 1358,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1317,
																						"src": "13196:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"id": 1355,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "NewExpression",
																								"src": "13175:13:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_creation_payable$_t_address_payable_$returns$_t_contract$_Sacrifice_$2431_$",
																									"typeString": "function (address payable) payable returns (contract Sacrifice)"
																								},
																								"typeName": {
																									"contractScope": null,
																									"id": 1354,
																									"name": "Sacrifice",
																									"nodeType": "UserDefinedTypeName",
																									"referencedDeclaration": 2431,
																									"src": "13179:9:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_Sacrifice_$2431",
																										"typeString": "contract Sacrifice"
																									}
																								}
																							}
																						],
																						"id": 1356,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "13174:15:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_creation_payable$_t_address_payable_$returns$_t_contract$_Sacrifice_$2431_$",
																							"typeString": "function (address payable) payable returns (contract Sacrifice)"
																						}
																					},
																					"id": 1357,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "value",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "13174:21:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_creation_payable$_t_address_payable_$returns$_t_contract$_Sacrifice_$2431_$value_$",
																						"typeString": "function (uint256) pure returns (function (address payable) payable returns (contract Sacrifice))"
																					}
																				},
																				"id": 1359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13174:30:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_creation_payable$_t_address_payable_$returns$_t_contract$_Sacrifice_$2431_$value",
																					"typeString": "function (address payable) payable returns (contract Sacrifice)"
																				}
																			},
																			"id": 1361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13174:35:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Sacrifice_$2431",
																				"typeString": "contract Sacrifice"
																			}
																		},
																		"id": 1362,
																		"nodeType": "ExpressionStatement",
																		"src": "13174:35:8"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": "@dev This method is used to claim unsupported tokens accidentally sent to the contract.\nIt can only be called by the owner.\n@param _token The address of the token contract (zero address for claiming native coins).\n@param _to The address of the tokens/coins receiver.\n@param _amount Amount to claim.",
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1320,
											"modifierName": {
												"argumentTypes": null,
												"id": 1319,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 269,
												"src": "12882:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12882:9:8"
										}
									],
									"name": "claimTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "12819:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12819:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "12835:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12835:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "12856:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12856:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12818:54:8"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12892:0:8"
									},
									"scope": 2374,
									"src": "12798:835:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "13838:92:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1425,
															"name": "feeParam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "13865:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 1426,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "13875:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1424,
														"name": "_updateUintParam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2321,
														"src": "13848:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintParam_$940_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (struct EasyStaking.UintParam storage pointer,uint256)"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13848:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "13848:34:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1430,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "13904:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1431,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "13912:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13912:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1429,
														"name": "FeeSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "13897:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13897:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "EmitStatement",
												"src": "13892:31:8"
											}
										]
									},
									"documentation": "@dev Sets the fee for forced withdrawals. Can only be called by owner.\n@param _value The new fee value (in percentage).",
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1422,
											"modifierName": {
												"argumentTypes": null,
												"id": 1421,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 269,
												"src": "13828:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "13828:9:8"
										}
									],
									"name": "setFee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "13805:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13805:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13804:16:8"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13838:0:8"
									},
									"scope": 2374,
									"src": "13789:141:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "14203:203:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1444,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1438,
																"src": "14221:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3330",
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14231:7:8",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2592000_by_1",
																	"typeString": "int_const 2592000"
																},
																"value": "30"
															},
															"src": "14221:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73686f756c646e27742062652067726561746572207468616e2033302064617973",
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14240:35:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_efcc4c1bf2d1d2579b900a9df600f3c0d822d0a6e5ef236f035bfce4f914ebf5",
																"typeString": "literal_string \"shouldn't be greater than 30 days\""
															},
															"value": "shouldn't be greater than 30 days"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_efcc4c1bf2d1d2579b900a9df600f3c0d822d0a6e5ef236f035bfce4f914ebf5",
																"typeString": "literal_string \"shouldn't be greater than 30 days\""
															}
														],
														"id": 1443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "14213:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14213:63:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "14213:63:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1451,
															"name": "withdrawalLockDurationParam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "14303:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 1452,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "14332:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1450,
														"name": "_updateUintParam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2321,
														"src": "14286:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintParam_$940_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (struct EasyStaking.UintParam storage pointer,uint256)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14286:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "14286:53:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1456,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "14380:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1457,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "14388:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14388:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1455,
														"name": "WithdrawalLockDurationSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "14354:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14354:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "EmitStatement",
												"src": "14349:50:8"
											}
										]
									},
									"documentation": "@dev Sets the time from the request after which the withdrawal will be available.\nCan only be called by owner.\n@param _value The new duration value (in seconds).",
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1441,
											"modifierName": {
												"argumentTypes": null,
												"id": 1440,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 269,
												"src": "14193:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14193:9:8"
										}
									],
									"name": "setWithdrawalLockDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "14170:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14170:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14169:16:8"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14203:0:8"
									},
									"scope": 2374,
									"src": "14135:271:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "14694:203:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1470,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "14712:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14722:7:8",
																"subdenomination": "hours",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "1"
															},
															"src": "14712:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73686f756c646e2774206265206c657373207468616e203120686f7572",
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14731:31:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbb91d11d1d61b992a974b3f42cc58c6e433a27c308042445bea044433bbf6ee",
																"typeString": "literal_string \"shouldn't be less than 1 hour\""
															},
															"value": "shouldn't be less than 1 hour"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbb91d11d1d61b992a974b3f42cc58c6e433a27c308042445bea044433bbf6ee",
																"typeString": "literal_string \"shouldn't be less than 1 hour\""
															}
														],
														"id": 1469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "14704:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14704:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "14704:59:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1477,
															"name": "withdrawalUnlockDurationParam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "14790:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 1478,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "14821:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1476,
														"name": "_updateUintParam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2321,
														"src": "14773:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintParam_$940_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (struct EasyStaking.UintParam storage pointer,uint256)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14773:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "14773:55:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1482,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "14871:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1483,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "14879:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "14879:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1481,
														"name": "WithdrawalUnlockDurationSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "14843:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14843:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "EmitStatement",
												"src": "14838:52:8"
											}
										]
									},
									"documentation": "@dev Sets the time during which the withdrawal will be available from the moment of unlocking.\nCan only be called by owner.\n@param _value The new duration value (in seconds).",
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1467,
											"modifierName": {
												"argumentTypes": null,
												"id": 1466,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 269,
												"src": "14684:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "14684:9:8"
										}
									],
									"name": "setWithdrawalUnlockDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "14661:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14661:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14660:16:8"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14694:0:8"
									},
									"scope": 2374,
									"src": "14624:273:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "15166:130:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1496,
															"name": "lockAfterStakeDurationParam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "15193:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 1497,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "15222:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1495,
														"name": "_updateUintParam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2321,
														"src": "15176:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintParam_$940_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (struct EasyStaking.UintParam storage pointer,uint256)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15176:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "15176:53:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1501,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "15270:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1502,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "15278:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15278:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1500,
														"name": "LockAfterStakeDurationSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "15244:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15244:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "EmitStatement",
												"src": "15239:50:8"
											}
										]
									},
									"documentation": "@dev Sets the time from the initial stake after which withdrawals are allowed\nCan only be called by owner.\n@param _value The new duration value (in seconds).",
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1493,
											"modifierName": {
												"argumentTypes": null,
												"id": 1492,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 269,
												"src": "15156:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15156:9:8"
										}
									],
									"name": "setLockAfterStakeDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "15133:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15133:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15132:16:8"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15166:0:8"
									},
									"scope": 2374,
									"src": "15098:198:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "15544:199:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1515,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1509,
																"src": "15562:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15572:7:8",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "15562:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73686f756c64206265206c657373207468616e206f7220657175616c20746f2031206574686572",
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15581:41:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df908f90cdd1684dfaa27aae3563b8fc031d301853c805a295067181cd132d8d",
																"typeString": "literal_string \"should be less than or equal to 1 ether\""
															},
															"value": "should be less than or equal to 1 ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df908f90cdd1684dfaa27aae3563b8fc031d301853c805a295067181cd132d8d",
																"typeString": "literal_string \"should be less than or equal to 1 ether\""
															}
														],
														"id": 1514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "15554:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15554:69:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "15554:69:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1522,
															"name": "totalSupplyFactorParam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "15650:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 1523,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "15674:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1521,
														"name": "_updateUintParam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2321,
														"src": "15633:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintParam_$940_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (struct EasyStaking.UintParam storage pointer,uint256)"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15633:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1525,
												"nodeType": "ExpressionStatement",
												"src": "15633:48:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1527,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "15717:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "15725:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "15725:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1526,
														"name": "TotalSupplyFactorSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "15696:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15696:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "EmitStatement",
												"src": "15691:45:8"
											}
										]
									},
									"documentation": "@dev Sets total supply factor for calculating emission rate.\nCan only be called by owner.\n@param _value The new factor value (in percentage).",
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1512,
											"modifierName": {
												"argumentTypes": null,
												"id": 1511,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 269,
												"src": "15534:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15534:9:8"
										}
									],
									"name": "setTotalSupplyFactor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "15511:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15511:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15510:16:8"
									},
									"returnParameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15544:0:8"
									},
									"scope": 2374,
									"src": "15481:262:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "16168:229:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1545,
																"name": "_a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "16186:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16214:1:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 1546,
																		"name": "MAX_EMISSION_RATE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "16192:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 149,
																	"src": "16192:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16192:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16186:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73686f756c64206265206c657373207468616e206f7220657175616c20746f20612068616c66206f6620746865206d6178696d756d20656d697373696f6e2072617465",
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16218:69:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4998dfccf9aebf799608e8abb3a4403d6d01bdd7d35c16885304d7b267aa9576",
																"typeString": "literal_string \"should be less than or equal to a half of the maximum emission rate\""
															},
															"value": "should be less than or equal to a half of the maximum emission rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4998dfccf9aebf799608e8abb3a4403d6d01bdd7d35c16885304d7b267aa9576",
																"typeString": "literal_string \"should be less than or equal to a half of the maximum emission rate\""
															}
														],
														"id": 1544,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "16178:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16178:110:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "16178:110:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1557,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "16320:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1558,
															"name": "_b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "16324:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1559,
															"name": "_c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "16328:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1554,
															"name": "sigmoid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "16298:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$2547_storage",
																"typeString": "struct Sigmoid.State storage ref"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "setParameters",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2619,
														"src": "16298:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_State_$2547_storage_ptr_$_t_uint256_$_t_int256_$_t_uint256_$returns$__$bound_to$_t_struct$_State_$2547_storage_ptr_$",
															"typeString": "function (struct Sigmoid.State storage pointer,uint256,int256,uint256)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16298:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "16298:33:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1563,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "16367:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1564,
															"name": "_b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "16371:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1565,
															"name": "_c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "16375:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1566,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "16379:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "16379:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1562,
														"name": "SigmoidParametersSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "16346:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_int256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,int256,uint256,address)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16346:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1569,
												"nodeType": "EmitStatement",
												"src": "16341:49:8"
											}
										]
									},
									"documentation": "@dev Sets parameters of the sigmoid that is used to calculate the user's current emission rate.\nCan only be called by owner.\n@param _a Sigmoid parameter A. Unsigned integer.\n@param _b Sigmoid parameter B. Signed integer.\n@param _c Sigmoid parameter C. Unsigned integer. Cannot be zero.",
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1542,
											"modifierName": {
												"argumentTypes": null,
												"id": 1541,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 269,
												"src": "16158:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16158:9:8"
										}
									],
									"name": "setSigmoidParameters",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "16116:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16116:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"name": "_b",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "16128:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1536,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "16128:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"name": "_c",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "16139:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16139:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16115:35:8"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16168:0:8"
									},
									"scope": 2374,
									"src": "16086:311:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "16639:587:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1579,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "16657:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16677:1:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16669:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16669:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16657:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7a65726f2061646472657373",
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16681:14:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
																"typeString": "literal_string \"zero address\""
															},
															"value": "zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4b4461cfc9c1f0249c17896b005545dc5d1690f81d2023afc517b07ed3227a7",
																"typeString": "literal_string \"zero address\""
															}
														],
														"id": 1578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "16649:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16649:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "16649:47:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1588,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "16714:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1590,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2780,
																		"src": "16734:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_EasyStaking_$2374",
																			"typeString": "contract EasyStaking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_EasyStaking_$2374",
																			"typeString": "contract EasyStaking"
																		}
																	],
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16726:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16726:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "16714:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77726f6e672061646472657373",
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16741:15:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_249cb6d7826884e3fa7193476d27b8b2c2752e4d2d929a83544976513b524095",
																"typeString": "literal_string \"wrong address\""
															},
															"value": "wrong address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_249cb6d7826884e3fa7193476d27b8b2c2752e4d2d929a83544976513b524095",
																"typeString": "literal_string \"wrong address\""
															}
														],
														"id": 1587,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "16706:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16706:51:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "16706:51:8"
											},
											{
												"assignments": [
													1597
												],
												"declarations": [
													{
														"constant": false,
														"id": 1597,
														"name": "param",
														"nodeType": "VariableDeclaration",
														"scope": 1648,
														"src": "16767:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressParam_$947_memory_ptr",
															"typeString": "struct EasyStaking.AddressParam"
														},
														"typeName": {
															"contractScope": null,
															"id": 1596,
															"name": "AddressParam",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 947,
															"src": "16767:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressParam_$947_storage_ptr",
																"typeString": "struct EasyStaking.AddressParam"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1599,
												"initialValue": {
													"argumentTypes": null,
													"id": 1598,
													"name": "liquidityProvidersRewardAddressParam",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 949,
													"src": "16795:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressParam_$947_storage",
														"typeString": "struct EasyStaking.AddressParam storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16767:64:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1600,
															"name": "param",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "16845:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressParam_$947_memory_ptr",
																"typeString": "struct EasyStaking.AddressParam memory"
															}
														},
														"id": 1601,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "16845:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16864:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16845:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1612,
																	"name": "param",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "16952:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressParam_$947_memory_ptr",
																		"typeString": "struct EasyStaking.AddressParam memory"
																	}
																},
																"id": 1613,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 946,
																"src": "16952:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1611,
															"name": "_paramUpdateDelayElapsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "16927:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16927:41:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 1623,
													"nodeType": "IfStatement",
													"src": "16923:103:8",
													"trueBody": {
														"id": 1622,
														"nodeType": "Block",
														"src": "16970:56:8",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1615,
																			"name": "param",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1597,
																			"src": "16984:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressParam_$947_memory_ptr",
																				"typeString": "struct EasyStaking.AddressParam memory"
																			}
																		},
																		"id": 1617,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "oldValue",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 942,
																		"src": "16984:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1618,
																			"name": "param",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1597,
																			"src": "17001:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_AddressParam_$947_memory_ptr",
																				"typeString": "struct EasyStaking.AddressParam memory"
																			}
																		},
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "newValue",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "17001:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "16984:31:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1621,
																"nodeType": "ExpressionStatement",
																"src": "16984:31:8"
															}
														]
													}
												},
												"id": 1624,
												"nodeType": "IfStatement",
												"src": "16841:185:8",
												"trueBody": {
													"id": 1610,
													"nodeType": "Block",
													"src": "16867:50:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1604,
																		"name": "param",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "16881:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressParam_$947_memory_ptr",
																			"typeString": "struct EasyStaking.AddressParam memory"
																		}
																	},
																	"id": 1606,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "oldValue",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 942,
																	"src": "16881:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1607,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "16898:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "16881:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1609,
															"nodeType": "ExpressionStatement",
															"src": "16881:25:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1625,
															"name": "param",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "17035:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressParam_$947_memory_ptr",
																"typeString": "struct EasyStaking.AddressParam memory"
															}
														},
														"id": 1627,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "newValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "17035:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1628,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1573,
														"src": "17052:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17035:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "17035:25:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1631,
															"name": "param",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "17070:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressParam_$947_memory_ptr",
																"typeString": "struct EasyStaking.AddressParam memory"
															}
														},
														"id": 1633,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 946,
														"src": "17070:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1634,
															"name": "_now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "17088:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17088:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17070:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "17070:24:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1638,
														"name": "liquidityProvidersRewardAddressParam",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "17104:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressParam_$947_storage",
															"typeString": "struct EasyStaking.AddressParam storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1639,
														"name": "param",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "17143:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressParam_$947_memory_ptr",
															"typeString": "struct EasyStaking.AddressParam memory"
														}
													},
													"src": "17104:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressParam_$947_storage",
														"typeString": "struct EasyStaking.AddressParam storage ref"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "17104:44:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1643,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "17198:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1644,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2742,
																"src": "17208:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "17208:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1642,
														"name": "LiquidityProvidersRewardAddressSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "17163:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17163:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "EmitStatement",
												"src": "17158:61:8"
											}
										]
									},
									"documentation": "@dev Sets the address for the Liquidity Providers reward.\nCan only be called by owner.\n@param _address The new address.",
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1576,
											"modifierName": {
												"argumentTypes": null,
												"id": 1575,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 269,
												"src": "16629:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "16629:9:8"
										}
									],
									"name": "setLiquidityProvidersRewardAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "16604:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16604:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16603:18:8"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16639:0:8"
									},
									"scope": 2374,
									"src": "16560:666:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "17329:52:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1655,
															"name": "feeParam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "17365:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														],
														"id": 1654,
														"name": "_getUintParamValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "17346:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_UintParam_$940_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EasyStaking.UintParam memory) view returns (uint256)"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17346:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1653,
												"id": 1657,
												"nodeType": "Return",
												"src": "17339:35:8"
											}
										]
									},
									"documentation": "@return Returns current fee.",
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17296:2:8"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "17320:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17320:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17319:9:8"
									},
									"scope": 2374,
									"src": "17284:97:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "17524:71:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1665,
															"name": "withdrawalLockDurationParam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "17560:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														],
														"id": 1664,
														"name": "_getUintParamValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "17541:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_UintParam_$940_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EasyStaking.UintParam memory) view returns (uint256)"
														}
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17541:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1663,
												"id": 1667,
												"nodeType": "Return",
												"src": "17534:54:8"
											}
										]
									},
									"documentation": "@return Returns current withdrawal lock duration.",
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawalLockDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17491:2:8"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "17515:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17515:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17514:9:8"
									},
									"scope": 2374,
									"src": "17460:135:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "17742:73:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1675,
															"name": "withdrawalUnlockDurationParam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "17778:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														],
														"id": 1674,
														"name": "_getUintParamValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "17759:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_UintParam_$940_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EasyStaking.UintParam memory) view returns (uint256)"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17759:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1673,
												"id": 1677,
												"nodeType": "Return",
												"src": "17752:56:8"
											}
										]
									},
									"documentation": "@return Returns current withdrawal unlock duration.",
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawalUnlockDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17709:2:8"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "17733:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17733:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17732:9:8"
									},
									"scope": 2374,
									"src": "17676:139:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "17959:71:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1685,
															"name": "lockAfterStakeDurationParam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "17995:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														],
														"id": 1684,
														"name": "_getUintParamValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "17976:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_UintParam_$940_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EasyStaking.UintParam memory) view returns (uint256)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17976:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1683,
												"id": 1687,
												"nodeType": "Return",
												"src": "17969:54:8"
											}
										]
									},
									"documentation": "@return Returns current lock after stake duration.",
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lockAfterStakeDuration",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17926:2:8"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "17950:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17950:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17949:9:8"
									},
									"scope": 2374,
									"src": "17895:135:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "18131:131:8",
										"statements": [
											{
												"assignments": [
													1699
												],
												"declarations": [
													{
														"constant": false,
														"id": 1699,
														"name": "timePassed",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "18141:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1698,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18141:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1709,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1703,
																	"name": "depositDates",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "18173:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1705,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1704,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "18186:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "18173:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1707,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1706,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "18195:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18173:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1700,
																"name": "_now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "18162:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18162:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 72,
														"src": "18162:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18162:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18141:59:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1710,
														"name": "timePassed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "18217:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1711,
															"name": "lockAfterStakeDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1689,
															"src": "18231:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18231:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18217:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1697,
												"id": 1714,
												"nodeType": "Return",
												"src": "18210:45:8"
											}
										]
									},
									"documentation": null,
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lockAfterStakeDurationPassed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"name": "_sender",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "18074:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18074:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "18091:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18091:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18073:30:8"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "18125:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18125:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18124:6:8"
									},
									"scope": 2374,
									"src": "18036:226:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "18395:66:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1722,
															"name": "totalSupplyFactorParam",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "18431:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UintParam_$940_storage",
																"typeString": "struct EasyStaking.UintParam storage ref"
															}
														],
														"id": 1721,
														"name": "_getUintParamValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "18412:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_UintParam_$940_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EasyStaking.UintParam memory) view returns (uint256)"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18412:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1720,
												"id": 1724,
												"nodeType": "Return",
												"src": "18405:49:8"
											}
										]
									},
									"documentation": "@return Returns current total supply factor.",
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupplyFactor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18362:2:8"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "18386:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18386:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18385:9:8"
									},
									"scope": 2374,
									"src": "18336:125:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "18623:173:8",
										"statements": [
											{
												"assignments": [
													1732
												],
												"declarations": [
													{
														"constant": false,
														"id": 1732,
														"name": "param",
														"nodeType": "VariableDeclaration",
														"scope": 1745,
														"src": "18633:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressParam_$947_memory_ptr",
															"typeString": "struct EasyStaking.AddressParam"
														},
														"typeName": {
															"contractScope": null,
															"id": 1731,
															"name": "AddressParam",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 947,
															"src": "18633:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressParam_$947_storage_ptr",
																"typeString": "struct EasyStaking.AddressParam"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"argumentTypes": null,
													"id": 1733,
													"name": "liquidityProvidersRewardAddressParam",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 949,
													"src": "18661:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressParam_$947_storage",
														"typeString": "struct EasyStaking.AddressParam storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18633:64:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1736,
																	"name": "param",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1732,
																	"src": "18739:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AddressParam_$947_memory_ptr",
																		"typeString": "struct EasyStaking.AddressParam memory"
																	}
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 946,
																"src": "18739:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1735,
															"name": "_paramUpdateDelayElapsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "18714:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 1738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18714:41:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1741,
															"name": "param",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "18775:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressParam_$947_memory_ptr",
																"typeString": "struct EasyStaking.AddressParam memory"
															}
														},
														"id": 1742,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "oldValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 942,
														"src": "18775:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "18714:75:8",
													"trueExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1739,
															"name": "param",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "18758:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressParam_$947_memory_ptr",
																"typeString": "struct EasyStaking.AddressParam memory"
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "newValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "18758:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1730,
												"id": 1744,
												"nodeType": "Return",
												"src": "18707:82:8"
											}
										]
									},
									"documentation": "@return Returns current liquidity providers reward address.",
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "liquidityProvidersRewardAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18590:2:8"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "18614:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18614:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18613:9:8"
									},
									"scope": 2374,
									"src": "18550:246:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "18967:447:8",
										"statements": [
											{
												"assignments": [
													1752
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"name": "totalSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1800,
														"src": "18977:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18977:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1756,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1753,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "18999:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
																"typeString": "contract IERC20Mintable"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2417,
														"src": "18999:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18999:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18977:41:8"
											},
											{
												"assignments": [
													1758
												],
												"declarations": [
													{
														"constant": false,
														"id": 1758,
														"name": "factor",
														"nodeType": "VariableDeclaration",
														"scope": 1800,
														"src": "19028:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1757,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19028:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1761,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1759,
														"name": "totalSupplyFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "19045:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19045:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19028:36:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1762,
														"name": "factor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "19078:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19088:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19078:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1767,
												"nodeType": "IfStatement",
												"src": "19074:25:8",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19098:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1750,
													"id": 1766,
													"nodeType": "Return",
													"src": "19091:8:8"
												}
											},
											{
												"assignments": [
													1769
												],
												"declarations": [
													{
														"constant": false,
														"id": 1769,
														"name": "target",
														"nodeType": "VariableDeclaration",
														"scope": 1800,
														"src": "19109:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1768,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19109:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1777,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19154:7:8",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1772,
																	"name": "factor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1758,
																	"src": "19142:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1770,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1752,
																	"src": "19126:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 133,
																"src": "19126:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19126:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "19126:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19126:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19109:53:8"
											},
											{
												"assignments": [
													1779
												],
												"declarations": [
													{
														"constant": false,
														"id": 1779,
														"name": "maxSupplyBasedEmissionRate",
														"nodeType": "VariableDeclaration",
														"scope": 1800,
														"src": "19172:34:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1778,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19172:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1784,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "32",
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19231:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1780,
															"name": "MAX_EMISSION_RATE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "19209:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "19209:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19209:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19172:61:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1785,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "19255:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1786,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1769,
														"src": "19270:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19255:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1791,
												"nodeType": "IfStatement",
												"src": "19251:85:8",
												"trueBody": {
													"id": 1790,
													"nodeType": "Block",
													"src": "19278:58:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1788,
																"name": "maxSupplyBasedEmissionRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1779,
																"src": "19299:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1750,
															"id": 1789,
															"nodeType": "Return",
															"src": "19292:33:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1797,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1769,
															"src": "19400:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1794,
																	"name": "totalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "19383:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1792,
																	"name": "maxSupplyBasedEmissionRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "19352:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 133,
																"src": "19352:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19352:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "19352:47:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19352:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1799,
												"nodeType": "Return",
												"src": "19345:62:8"
											}
										]
									},
									"documentation": "@return Emission rate based on the ratio of total staked to total supply.",
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSupplyBasedEmissionRate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18934:2:8"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "18958:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18958:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18957:9:8"
									},
									"scope": 2374,
									"src": "18899:515:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "19866:607:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1814,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "19880:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19891:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19880:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1817,
															"name": "_depositDate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "19896:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19912:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19896:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19880:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1826,
												"nodeType": "IfStatement",
												"src": "19876:55:8",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19923:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19926:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19929:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1824,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "19922:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
															"typeString": "tuple(int_const 0,int_const 0,int_const 0)"
														}
													},
													"functionReturnParameters": 1813,
													"id": 1825,
													"nodeType": "Return",
													"src": "19915:16:8"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1827,
														"name": "timePassed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "19941:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1831,
																"name": "_depositDate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "19965:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1828,
																	"name": "_now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "19954:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19954:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "19954:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19954:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19941:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1834,
												"nodeType": "ExpressionStatement",
												"src": "19941:37:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1835,
														"name": "timePassed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "19992:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20006:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19992:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1843,
												"nodeType": "IfStatement",
												"src": "19988:37:8",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20017:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20020:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20023:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1841,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "20016:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
															"typeString": "tuple(int_const 0,int_const 0,int_const 0)"
														}
													},
													"functionReturnParameters": 1813,
													"id": 1842,
													"nodeType": "Return",
													"src": "20009:16:8"
												}
											},
											{
												"assignments": [
													1845
												],
												"declarations": [
													{
														"constant": false,
														"id": 1845,
														"name": "userEmissionRate",
														"nodeType": "VariableDeclaration",
														"scope": 1906,
														"src": "20035:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1844,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20035:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1852,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1849,
																	"name": "timePassed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "20087:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20080:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int256"
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20080:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1846,
															"name": "sigmoid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "20062:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$2547_storage",
																"typeString": "struct Sigmoid.State storage ref"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "calculate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2718,
														"src": "20062:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_State_$2547_storage_ptr_$_t_int256_$returns$_t_uint256_$bound_to$_t_struct$_State_$2547_storage_ptr_$",
															"typeString": "function (struct Sigmoid.State storage pointer,int256) view returns (uint256)"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20062:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20035:64:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1853,
														"name": "userEmissionRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "20109:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1856,
																	"name": "getSupplyBasedEmissionRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "20149:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20149:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1854,
																"name": "userEmissionRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "20128:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 56,
															"src": "20128:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20128:50:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20109:69:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "20109:69:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1861,
														"name": "userEmissionRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1845,
														"src": "20192:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20212:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20192:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1869,
												"nodeType": "IfStatement",
												"src": "20188:52:8",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20223:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20226:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"argumentTypes": null,
																"id": 1866,
																"name": "timePassed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "20229:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1867,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "20222:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_uint256_$",
															"typeString": "tuple(int_const 0,int_const 0,uint256)"
														}
													},
													"functionReturnParameters": 1813,
													"id": 1868,
													"nodeType": "Return",
													"src": "20215:25:8"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1871,
																"name": "userEmissionRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "20257:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1872,
																"name": "MAX_EMISSION_RATE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "20277:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20257:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1870,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2731,
														"src": "20250:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20250:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1875,
												"nodeType": "ExpressionStatement",
												"src": "20250:45:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1876,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "20305:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1885,
																	"name": "YEAR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "20364:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20371:7:8",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "20364:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1882,
																		"name": "timePassed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "20348:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1879,
																				"name": "MAX_EMISSION_RATE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 928,
																				"src": "20325:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1877,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1805,
																				"src": "20313:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 133,
																			"src": "20313:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20313:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 133,
																	"src": "20313:34:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20313:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 149,
															"src": "20313:50:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20313:66:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20305:74:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1890,
												"nodeType": "ExpressionStatement",
												"src": "20305:74:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1891,
														"name": "userShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "20389:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1900,
																	"name": "YEAR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "20451:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20458:7:8",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1"
																},
																"src": "20451:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1897,
																		"name": "timePassed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "20435:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1894,
																				"name": "userEmissionRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1845,
																				"src": "20413:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1892,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1805,
																				"src": "20401:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 133,
																			"src": "20401:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20401:29:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 133,
																	"src": "20401:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20401:45:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 149,
															"src": "20401:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20401:65:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20389:77:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "20389:77:8"
											}
										]
									},
									"documentation": "@param _depositDate Deposit date.\n@param _amount Amount based on which emission is calculated and accrued.\n@return Total accrued emission (for the user and Liquidity Providers), user share, and seconds passed since the previous deposit started.",
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAccruedEmission",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"name": "_depositDate",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "19739:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19739:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "19769:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19769:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19729:61:8"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"name": "total",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "19812:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19812:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"name": "userShare",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "19827:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19827:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"name": "timePassed",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "19846:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19846:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "19811:54:8"
									},
									"scope": 2374,
									"src": "19702:771:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "20615:47:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 1916,
															"name": "sigmoid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "20632:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$2547_storage",
																"typeString": "struct Sigmoid.State storage ref"
															}
														},
														"id": 1917,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getParameters",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2665,
														"src": "20632:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_State_$2547_storage_ptr_$returns$_t_uint256_$_t_int256_$_t_uint256_$bound_to$_t_struct$_State_$2547_storage_ptr_$",
															"typeString": "function (struct Sigmoid.State storage pointer) view returns (uint256,int256,uint256)"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20632:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_uint256_$",
														"typeString": "tuple(uint256,int256,uint256)"
													}
												},
												"functionReturnParameters": 1915,
												"id": 1919,
												"nodeType": "Return",
												"src": "20625:30:8"
											}
										]
									},
									"documentation": "@return Sigmoid parameters.",
									"id": 1921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSigmoidParameters",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20559:2:8"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "20583:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20583:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "20594:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1911,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20594:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"name": "c",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "20604:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20604:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20582:32:8"
									},
									"scope": 2374,
									"src": "20530:132:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "21010:585:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1933,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1927,
																"src": "21028:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21038:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21028:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6465706f73697420616d6f756e742073686f756c64206265206d6f7265207468616e2030",
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21041:38:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335651f95752b5b2f9e6f772a51ea21ec319e6d88b710d1d6b6aed8232257902",
																"typeString": "literal_string \"deposit amount should be more than 0\""
															},
															"value": "deposit amount should be more than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335651f95752b5b2f9e6f772a51ea21ec319e6d88b710d1d6b6aed8232257902",
																"typeString": "literal_string \"deposit amount should be more than 0\""
															}
														],
														"id": 1932,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "21020:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21020:60:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1938,
												"nodeType": "ExpressionStatement",
												"src": "21020:60:8"
											},
											{
												"assignments": [
													1940,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1940,
														"name": "sigmoidParamA",
														"nodeType": "VariableDeclaration",
														"scope": 2011,
														"src": "21091:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21091:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null
												],
												"id": 1943,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1941,
														"name": "getSigmoidParameters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "21118:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$_t_int256_$_t_uint256_$",
															"typeString": "function () view returns (uint256,int256,uint256)"
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21118:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_uint256_$",
														"typeString": "tuple(uint256,int256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21090:50:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1944,
															"name": "sigmoidParamA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "21154:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21171:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "21154:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1947,
																"name": "totalSupplyFactor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "21176:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21176:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21199:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "21176:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "21154:46:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1956,
												"nodeType": "IfStatement",
												"src": "21150:78:8",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "656d697373696f6e2073746f70706564",
																"id": 1953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21209:18:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_3e4a4bc928dbda446db8cb65376e3f7f80c18a9a98ac6188cffd79113087af26",
																	"typeString": "literal_string \"emission stopped\""
																},
																"value": "emission stopped"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_3e4a4bc928dbda446db8cb65376e3f7f80c18a9a98ac6188cffd79113087af26",
																	"typeString": "literal_string \"emission stopped\""
																}
															],
															"id": 1952,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																2747,
																2748
															],
															"referencedDeclaration": 2748,
															"src": "21202:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 1954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21202:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1955,
													"nodeType": "ExpressionStatement",
													"src": "21202:26:8"
												}
											},
											{
												"assignments": [
													1958,
													1960
												],
												"declarations": [
													{
														"constant": false,
														"id": 1958,
														"name": "userShare",
														"nodeType": "VariableDeclaration",
														"scope": 2011,
														"src": "21239:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1957,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21239:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1960,
														"name": "timePassed",
														"nodeType": "VariableDeclaration",
														"scope": 2011,
														"src": "21258:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1959,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21258:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1966,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1962,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "21286:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1963,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "21295:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21300:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1961,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2275,
														"src": "21280:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,uint256,uint256) returns (uint256,uint256)"
														}
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21280:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21238:64:8"
											},
											{
												"assignments": [
													1968
												],
												"declarations": [
													{
														"constant": false,
														"id": 1968,
														"name": "newBalance",
														"nodeType": "VariableDeclaration",
														"scope": 2011,
														"src": "21312:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1967,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21312:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1977,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1975,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "21360:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1969,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "21333:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 1971,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1970,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1923,
																	"src": "21342:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "21333:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 1973,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1972,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1925,
																"src": "21351:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21333:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 56,
														"src": "21333:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21333:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21312:56:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1978,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "21378:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1981,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1979,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "21387:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21378:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1982,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1980,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "21396:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21378:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1983,
														"name": "newBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "21403:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21378:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1985,
												"nodeType": "ExpressionStatement",
												"src": "21378:35:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1986,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "21423:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1989,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1927,
																"src": "21453:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1987,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "21437:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 56,
															"src": "21437:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21437:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21423:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1992,
												"nodeType": "ExpressionStatement",
												"src": "21423:38:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1993,
																"name": "depositDates",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 971,
																"src": "21471:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1996,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1994,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "21484:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21471:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1997,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1995,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "21493:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "21471:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1998,
															"name": "_now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "21500:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21500:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21471:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "21471:35:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2003,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "21531:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2004,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "21540:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2005,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1927,
															"src": "21545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2006,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "21554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2007,
															"name": "userShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "21566:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2008,
															"name": "timePassed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "21577:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2002,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "21521:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21521:67:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2010,
												"nodeType": "EmitStatement",
												"src": "21516:72:8"
											}
										]
									},
									"documentation": "@dev Calls internal \"_mint\" method, increases the user balance, and updates the deposit date.\n@param _sender The address of the sender.\n@param _id User's unique deposit ID.\n@param _amount The amount to deposit.",
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1930,
											"modifierName": {
												"argumentTypes": null,
												"id": 1929,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 740,
												"src": "20997:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "20997:12:8"
										}
									],
									"name": "_deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"name": "_sender",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "20941:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20941:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "20958:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20958:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1927,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "20971:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20971:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "20940:47:8"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21010:0:8"
									},
									"scope": 2374,
									"src": "20923:672:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2188,
										"nodeType": "Block",
										"src": "22038:1133:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2026,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "22056:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22062:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "22056:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2029,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "22067:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2030,
																		"name": "lastDepositIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "22074:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2032,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2031,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2014,
																		"src": "22089:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22074:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22067:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "22056:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77726f6e67206465706f736974206964",
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22099:18:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e67914a0bee98582863c2459075123e6da70d0a57b2feaff0cd3d2edd1a314c1",
																"typeString": "literal_string \"wrong deposit id\""
															},
															"value": "wrong deposit id"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e67914a0bee98582863c2459075123e6da70d0a57b2feaff0cd3d2edd1a314c1",
																"typeString": "literal_string \"wrong deposit id\""
															}
														],
														"id": 2025,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "22048:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22048:70:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2037,
												"nodeType": "ExpressionStatement",
												"src": "22048:70:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2039,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 965,
																			"src": "22136:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 2041,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 2040,
																			"name": "_sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2014,
																			"src": "22145:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "22136:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2043,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2042,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2016,
																		"src": "22154:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22136:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22161:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "22136:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2046,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 965,
																			"src": "22166:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 2048,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 2047,
																			"name": "_sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2014,
																			"src": "22175:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "22166:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2050,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2049,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2016,
																		"src": "22184:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22166:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2051,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "22192:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22166:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "22136:63:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e73756666696369656e742066756e6473",
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22201:20:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																"typeString": "literal_string \"insufficient funds\""
															},
															"value": "insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																"typeString": "literal_string \"insufficient funds\""
															}
														],
														"id": 2038,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "22128:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22128:94:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "22128:94:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2059,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "22269:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2060,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "22278:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2058,
																"name": "lockAfterStakeDurationPassed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "22240:28:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22240:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616e206e6f7420776974686472617720647572696e6720696e697469616c206c6f636b20706572696f64",
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22284:45:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a232e1f8b28a085f31f602663a0343288b51e95e524fa8082d77230266997c5c",
																"typeString": "literal_string \"can not withdraw during initial lock period\""
															},
															"value": "can not withdraw during initial lock period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a232e1f8b28a085f31f602663a0343288b51e95e524fa8082d77230266997c5c",
																"typeString": "literal_string \"can not withdraw during initial lock period\""
															}
														],
														"id": 2057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "22232:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22232:98:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2064,
												"nodeType": "ExpressionStatement",
												"src": "22232:98:8"
											},
											{
												"assignments": [
													2066,
													2068
												],
												"declarations": [
													{
														"constant": false,
														"id": 2066,
														"name": "accruedEmission",
														"nodeType": "VariableDeclaration",
														"scope": 2188,
														"src": "22341:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2065,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22341:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2068,
														"name": "timePassed",
														"nodeType": "VariableDeclaration",
														"scope": 2188,
														"src": "22366:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2067,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22366:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2074,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2070,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "22394:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2071,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "22403:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2072,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "22408:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2069,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2275,
														"src": "22388:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address,uint256,uint256) returns (uint256,uint256)"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22388:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22340:76:8"
											},
											{
												"assignments": [
													2076
												],
												"declarations": [
													{
														"constant": false,
														"id": 2076,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 2188,
														"src": "22426:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2075,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22426:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2090,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2077,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "22443:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22454:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "22443:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2087,
																"name": "accruedEmission",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2066,
																"src": "22495:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2085,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2018,
																"src": "22483:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 56,
															"src": "22483:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22483:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "22443:68:8",
													"trueExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2080,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "22458:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2082,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2081,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2014,
																"src": "22467:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22458:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2084,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2083,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "22476:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "22458:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22426:85:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2091,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "22521:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2094,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2092,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2014,
																"src": "22530:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22521:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2095,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2093,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "22539:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "22521:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2102,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "22573:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 2096,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "22546:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 2098,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2097,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2014,
																		"src": "22555:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22546:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2100,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2099,
																	"name": "_id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2016,
																	"src": "22564:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22546:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "22546:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22546:34:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22521:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2105,
												"nodeType": "ExpressionStatement",
												"src": "22521:59:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2106,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "22590:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2109,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "22620:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2107,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "22604:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 72,
															"src": "22604:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22604:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22590:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2112,
												"nodeType": "ExpressionStatement",
												"src": "22590:37:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2113,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "22641:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2115,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2114,
																"name": "_sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2014,
																"src": "22650:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22641:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2117,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2116,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "22659:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "22641:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22667:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22641:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2129,
												"nodeType": "IfStatement",
												"src": "22637:88:8",
												"trueBody": {
													"id": 2128,
													"nodeType": "Block",
													"src": "22670:55:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2120,
																			"name": "depositDates",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 971,
																			"src": "22684:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 2123,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 2121,
																			"name": "_sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2014,
																			"src": "22697:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "22684:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2124,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2122,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2016,
																		"src": "22706:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "22684:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22713:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "22684:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2127,
															"nodeType": "ExpressionStatement",
															"src": "22684:30:8"
														}
													]
												}
											},
											{
												"assignments": [
													2131
												],
												"declarations": [
													{
														"constant": false,
														"id": 2131,
														"name": "feeValue",
														"nodeType": "VariableDeclaration",
														"scope": 2188,
														"src": "22734:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22734:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2133,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22753:1:8",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22734:20:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 2134,
													"name": "_forced",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2020,
													"src": "22768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2164,
												"nodeType": "IfStatement",
												"src": "22764:223:8",
												"trueBody": {
													"id": 2163,
													"nodeType": "Block",
													"src": "22777:210:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2135,
																	"name": "feeValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2131,
																	"src": "22791:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 2142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22824:7:8",
																			"subdenomination": "ether",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2138,
																						"name": "fee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1659,
																						"src": "22813:3:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 2139,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "22813:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2136,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "22802:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 133,
																				"src": "22802:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22802:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 149,
																		"src": "22802:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22802:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22791:41:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2145,
															"nodeType": "ExpressionStatement",
															"src": "22791:41:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2146,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "22846:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2149,
																			"name": "feeValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2131,
																			"src": "22866:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2147,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2076,
																			"src": "22855:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 72,
																		"src": "22855:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22855:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22846:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2152,
															"nodeType": "ExpressionStatement",
															"src": "22846:29:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2156,
																					"name": "liquidityProvidersRewardAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1746,
																					"src": "22912:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22912:33:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 2158,
																				"name": "feeValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2131,
																				"src": "22947:8:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2154,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 933,
																				"src": "22897:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
																					"typeString": "contract IERC20Mintable"
																				}
																			},
																			"id": 2155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2385,
																			"src": "22897:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22897:59:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "7472616e73666572206661696c6564",
																		"id": 2160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22958:17:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																			"typeString": "literal_string \"transfer failed\""
																		},
																		"value": "transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																			"typeString": "literal_string \"transfer failed\""
																		}
																	],
																	"id": 2153,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2745,
																		2746
																	],
																	"referencedDeclaration": 2746,
																	"src": "22889:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22889:87:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2162,
															"nodeType": "ExpressionStatement",
															"src": "22889:87:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2168,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "23019:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 2169,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "23028:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2166,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "23004:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
																		"typeString": "contract IERC20Mintable"
																	}
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2385,
																"src": "23004:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23004:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e73666572206661696c6564",
															"id": 2171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23037:17:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															},
															"value": "transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															}
														],
														"id": 2165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "22996:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22996:59:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2173,
												"nodeType": "ExpressionStatement",
												"src": "22996:59:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2175,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "23080:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2176,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "23089:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2177,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "23094:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2178,
															"name": "feeValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2131,
															"src": "23102:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2179,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "23112:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 2181,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2180,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "23121:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "23112:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 2183,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2182,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2016,
																"src": "23130:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23112:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2184,
															"name": "accruedEmission",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "23136:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2185,
															"name": "timePassed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "23153:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2174,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "23070:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23070:94:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2187,
												"nodeType": "EmitStatement",
												"src": "23065:99:8"
											}
										]
									},
									"documentation": "@dev Calls internal \"_mint\" method and then transfers tokens to the sender.\n@param _sender The address of the sender.\n@param _id User's unique deposit ID.\n@param _amount The amount to withdraw (0 - to withdraw all).\n@param _forced Defines whether to apply fee (true), or not (false).",
									"id": 2189,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2023,
											"modifierName": {
												"argumentTypes": null,
												"id": 2022,
												"name": "nonReentrant",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 740,
												"src": "22025:12:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "22025:12:8"
										}
									],
									"name": "_withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"name": "_sender",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "21955:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21955:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2016,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "21972:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21972:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "21985:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21985:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2020,
												"name": "_forced",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "22002:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2019,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22002:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "21954:61:8"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22038:0:8"
									},
									"scope": 2374,
									"src": "21936:1235:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2274,
										"nodeType": "Block",
										"src": "23621:555:8",
										"statements": [
											{
												"assignments": [
													2203
												],
												"declarations": [
													{
														"constant": false,
														"id": 2203,
														"name": "currentBalance",
														"nodeType": "VariableDeclaration",
														"scope": 2274,
														"src": "23631:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2202,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23631:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2209,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2204,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "23656:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 2206,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2205,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "23665:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "23656:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2208,
													"indexExpression": {
														"argumentTypes": null,
														"id": 2207,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2193,
														"src": "23672:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "23656:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23631:45:8"
											},
											{
												"assignments": [
													2211
												],
												"declarations": [
													{
														"constant": false,
														"id": 2211,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 2274,
														"src": "23686:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2210,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23686:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2218,
												"initialValue": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2212,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "23703:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23714:1:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "23703:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 2216,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "23735:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "23703:39:8",
													"trueExpression": {
														"argumentTypes": null,
														"id": 2215,
														"name": "currentBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2203,
														"src": "23718:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23686:56:8"
											},
											{
												"assignments": [
													2220,
													2222,
													2224
												],
												"declarations": [
													{
														"constant": false,
														"id": 2220,
														"name": "total",
														"nodeType": "VariableDeclaration",
														"scope": 2274,
														"src": "23753:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23753:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2222,
														"name": "userShare",
														"nodeType": "VariableDeclaration",
														"scope": 2274,
														"src": "23768:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2221,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23768:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2224,
														"name": "timePassed",
														"nodeType": "VariableDeclaration",
														"scope": 2274,
														"src": "23787:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23787:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2233,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 2226,
																	"name": "depositDates",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "23828:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(uint256 => uint256))"
																	}
																},
																"id": 2228,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 2227,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2191,
																	"src": "23841:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "23828:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 2230,
															"indexExpression": {
																"argumentTypes": null,
																"id": 2229,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2193,
																"src": "23848:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23828:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2231,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "23854:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2225,
														"name": "getAccruedEmission",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "23809:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256,uint256,uint256)"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23809:52:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23752:109:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2234,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2220,
														"src": "23875:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23883:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23875:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2269,
												"nodeType": "IfStatement",
												"src": "23871:259:8",
												"trueBody": {
													"id": 2268,
													"nodeType": "Block",
													"src": "23886:244:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 2237,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 965,
																			"src": "23900:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 2240,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 2238,
																			"name": "_user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2191,
																			"src": "23909:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "23900:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2241,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 2239,
																		"name": "_id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2193,
																		"src": "23916:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "23900:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2244,
																			"name": "userShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2222,
																			"src": "23942:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2242,
																			"name": "currentBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "23923:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 56,
																		"src": "23923:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23923:29:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23900:52:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2247,
															"nodeType": "ExpressionStatement",
															"src": "23900:52:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2248,
																	"name": "totalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "23966:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2251,
																			"name": "userShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2222,
																			"src": "23996:9:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 2249,
																			"name": "totalStaked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "23980:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 56,
																		"src": "23980:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23980:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23966:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2254,
															"nodeType": "ExpressionStatement",
															"src": "23966:40:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2258,
																					"name": "liquidityProvidersRewardAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1746,
																					"src": "24043:31:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 2259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24043:33:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 2262,
																						"name": "userShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2222,
																						"src": "24088:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 2260,
																						"name": "total",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2220,
																						"src": "24078:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 72,
																					"src": "24078:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24078:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 2256,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 933,
																				"src": "24028:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20Mintable_$2418",
																					"typeString": "contract IERC20Mintable"
																				}
																			},
																			"id": 2257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2385,
																			"src": "24028:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 2264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24028:71:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "7472616e73666572206661696c6564",
																		"id": 2265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24101:17:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																			"typeString": "literal_string \"transfer failed\""
																		},
																		"value": "transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																			"typeString": "literal_string \"transfer failed\""
																		}
																	],
																	"id": 2255,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2745,
																		2746
																	],
																	"referencedDeclaration": 2746,
																	"src": "24020:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24020:99:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2267,
															"nodeType": "ExpressionStatement",
															"src": "24020:99:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"id": 2270,
															"name": "userShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2222,
															"src": "24147:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2271,
															"name": "timePassed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2224,
															"src": "24158:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2272,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "24146:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 2201,
												"id": 2273,
												"nodeType": "Return",
												"src": "24139:30:8"
											}
										]
									},
									"documentation": "@dev Mints MAX_EMISSION_RATE per annum and distributes the emission between the user and Liquidity Providers in proportion.\n@param _user User's address.\n@param _id User's unique deposit ID.\n@param _amount Amount based on which emission is calculated and accrued. When 0, current deposit balance is used.",
									"id": 2275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "23540:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23540:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "23555:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23555:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "23568:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23568:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23539:45:8"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "23603:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23603:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "23612:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "23602:18:8"
									},
									"scope": 2374,
									"src": "23525:651:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2320,
										"nodeType": "Block",
										"src": "24362:279:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2282,
															"name": "_param",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "24376:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
																"typeString": "struct EasyStaking.UintParam storage pointer"
															}
														},
														"id": 2283,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 939,
														"src": "24376:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24396:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24376:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2294,
																	"name": "_param",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2277,
																	"src": "24486:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
																		"typeString": "struct EasyStaking.UintParam storage pointer"
																	}
																},
																"id": 2295,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 939,
																"src": "24486:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2293,
															"name": "_paramUpdateDelayElapsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "24461:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 2296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24461:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 2305,
													"nodeType": "IfStatement",
													"src": "24457:106:8",
													"trueBody": {
														"id": 2304,
														"nodeType": "Block",
														"src": "24505:58:8",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 2302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2297,
																			"name": "_param",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2277,
																			"src": "24519:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
																				"typeString": "struct EasyStaking.UintParam storage pointer"
																			}
																		},
																		"id": 2299,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "oldValue",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 935,
																		"src": "24519:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2300,
																			"name": "_param",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2277,
																			"src": "24537:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
																				"typeString": "struct EasyStaking.UintParam storage pointer"
																			}
																		},
																		"id": 2301,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "newValue",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 937,
																		"src": "24537:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "24519:33:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2303,
																"nodeType": "ExpressionStatement",
																"src": "24519:33:8"
															}
														]
													}
												},
												"id": 2306,
												"nodeType": "IfStatement",
												"src": "24372:191:8",
												"trueBody": {
													"id": 2292,
													"nodeType": "Block",
													"src": "24399:52:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2286,
																		"name": "_param",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "24413:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
																			"typeString": "struct EasyStaking.UintParam storage pointer"
																		}
																	},
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "oldValue",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 935,
																	"src": "24413:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 2289,
																	"name": "_newValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2279,
																	"src": "24431:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24413:27:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2291,
															"nodeType": "ExpressionStatement",
															"src": "24413:27:8"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2307,
															"name": "_param",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "24572:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
																"typeString": "struct EasyStaking.UintParam storage pointer"
															}
														},
														"id": 2309,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "newValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 937,
														"src": "24572:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2310,
														"name": "_newValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2279,
														"src": "24590:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24572:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2312,
												"nodeType": "ExpressionStatement",
												"src": "24572:27:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2313,
															"name": "_param",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "24609:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
																"typeString": "struct EasyStaking.UintParam storage pointer"
															}
														},
														"id": 2315,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 939,
														"src": "24609:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2316,
															"name": "_now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "24628:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 2317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24628:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24609:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2319,
												"nodeType": "ExpressionStatement",
												"src": "24609:25:8"
											}
										]
									},
									"documentation": "@dev Sets the next value of the parameter and the timestamp of this setting.",
									"id": 2321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateUintParam",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"name": "_param",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "24308:24:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
													"typeString": "struct EasyStaking.UintParam"
												},
												"typeName": {
													"contractScope": null,
													"id": 2276,
													"name": "UintParam",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 940,
													"src": "24308:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
														"typeString": "struct EasyStaking.UintParam"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"name": "_newValue",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "24334:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24334:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24307:45:8"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24362:0:8"
									},
									"scope": 2374,
									"src": "24282:359:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2338,
										"nodeType": "Block",
										"src": "24807:102:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2329,
																	"name": "_param",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2323,
																	"src": "24849:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UintParam_$940_memory_ptr",
																		"typeString": "struct EasyStaking.UintParam memory"
																	}
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 939,
																"src": "24849:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2328,
															"name": "_paramUpdateDelayElapsed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "24824:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 2331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24824:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2334,
															"name": "_param",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2323,
															"src": "24887:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_memory_ptr",
																"typeString": "struct EasyStaking.UintParam memory"
															}
														},
														"id": 2335,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "oldValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 935,
														"src": "24887:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "24824:78:8",
													"trueExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2332,
															"name": "_param",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2323,
															"src": "24869:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintParam_$940_memory_ptr",
																"typeString": "struct EasyStaking.UintParam memory"
															}
														},
														"id": 2333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "newValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 937,
														"src": "24869:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2327,
												"id": 2337,
												"nodeType": "Return",
												"src": "24817:85:8"
											}
										]
									},
									"documentation": "@return Returns the current value of the parameter.",
									"id": 2339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getUintParamValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"name": "_param",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "24750:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintParam_$940_memory_ptr",
													"typeString": "struct EasyStaking.UintParam"
												},
												"typeName": {
													"contractScope": null,
													"id": 2322,
													"name": "UintParam",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 940,
													"src": "24750:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintParam_$940_storage_ptr",
														"typeString": "struct EasyStaking.UintParam"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24749:25:8"
									},
									"returnParameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "24798:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24798:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "24797:9:8"
									},
									"scope": 2374,
									"src": "24722:187:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2354,
										"nodeType": "Block",
										"src": "25078:72:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2346,
															"name": "_now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "25095:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 2347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25095:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2350,
																"name": "PARAM_UPDATE_DELAY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 931,
																"src": "25124:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 2348,
																"name": "_paramTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2341,
																"src": "25104:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 56,
															"src": "25104:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25104:39:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25095:48:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2345,
												"id": 2353,
												"nodeType": "Return",
												"src": "25088:55:8"
											}
										]
									},
									"documentation": "@return Returns true if param update delay elapsed.",
									"id": 2355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_paramUpdateDelayElapsed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"name": "_paramTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "25024:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25024:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25023:25:8"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2355,
												"src": "25072:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25072:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25071:6:8"
									},
									"scope": 2374,
									"src": "24990:160:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "25260:33:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2360,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "25270:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2361,
														"name": "_locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2357,
														"src": "25279:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25270:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2363,
												"nodeType": "ExpressionStatement",
												"src": "25270:16:8"
											}
										]
									},
									"documentation": "@dev Sets lock to prevent reentrance.",
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setLocked",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"name": "_locked",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "25237:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25237:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25236:14:8"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25260:0:8"
									},
									"scope": 2374,
									"src": "25217:76:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2372,
										"nodeType": "Block",
										"src": "25405:252:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2370,
													"name": "now",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2744,
													"src": "25598:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2369,
												"id": 2371,
												"nodeType": "Return",
												"src": "25591:10:8"
											}
										]
									},
									"documentation": "@return Returns current timestamp.",
									"id": 2373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_now",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25370:2:8"
									},
									"returnParameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "25396:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25396:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "25395:9:8"
									},
									"scope": 2374,
									"src": "25357:300:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2375,
							"src": "722:24937:8"
						}
					],
					"src": "0:25660:8"
				},
				"id": 8
			},
			"contracts/IERC20Mintable.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20Mintable.sol",
					"exportedSymbols": {
						"IERC20Mintable": [
							2418
						]
					},
					"id": 2419,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2376,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:9"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 2418,
							"linearizedBaseContracts": [
								2418
							],
							"name": "IERC20Mintable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 2385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 2385,
												"src": "75:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2380,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 2385,
												"src": "88:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "88:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "74:29:9"
									},
									"returnParameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2383,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2385,
												"src": "122:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "122:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "121:6:9"
									},
									"scope": 2418,
									"src": "57:71:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "155:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "170:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2391,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "183:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "183:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "154:44:9"
									},
									"returnParameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2396,
												"src": "217:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2393,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "217:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "216:6:9"
									},
									"scope": 2418,
									"src": "133:90:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "242:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "255:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "241:29:9"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "289:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "289:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "288:6:9"
									},
									"scope": 2418,
									"src": "228:67:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"name": "_account",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "319:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "318:18:9"
									},
									"returnParameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "360:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "359:9:9"
									},
									"scope": 2418,
									"src": "300:69:9",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 2417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:2:9"
									},
									"returnParameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "420:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "419:9:9"
									},
									"scope": 2418,
									"src": "374:55:9",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 2419,
							"src": "26:405:9"
						}
					],
					"src": "0:432:9"
				},
				"id": 9
			},
			"contracts/Sacrifice.sol": {
				"ast": {
					"absolutePath": "contracts/Sacrifice.sol",
					"exportedSymbols": {
						"Sacrifice": [
							2431
						]
					},
					"id": 2432,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2420,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:10"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2431,
							"linearizedBaseContracts": [
								2431
							],
							"name": "Sacrifice",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2429,
										"nodeType": "Block",
										"src": "105:41:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2426,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2422,
															"src": "128:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 2425,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2750,
														"src": "115:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "115:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2428,
												"nodeType": "ExpressionStatement",
												"src": "115:24:10"
											}
										]
									},
									"documentation": null,
									"id": 2430,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2422,
												"name": "_recipient",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "62:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "61:28:10"
									},
									"returnParameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "105:0:10"
									},
									"scope": 2431,
									"src": "50:96:10",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 2432,
							"src": "25:123:10"
						}
					],
					"src": "0:149:10"
				},
				"id": 10
			},
			"contracts/lib/ExtendedMath.sol": {
				"ast": {
					"absolutePath": "contracts/lib/ExtendedMath.sol",
					"exportedSymbols": {
						"ExtendedMath": [
							2520
						]
					},
					"id": 2521,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2433,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:11"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2520,
							"linearizedBaseContracts": [
								2520
							],
							"name": "ExtendedMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2464,
										"nodeType": "Block",
										"src": "182:170:11",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2440,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "196:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2441,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "201:1:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "196:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2446,
												"nodeType": "IfStatement",
												"src": "192:45:11",
												"trueBody": {
													"id": 2445,
													"nodeType": "Block",
													"src": "204:33:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "225:1:11",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2439,
															"id": 2444,
															"nodeType": "Return",
															"src": "218:8:11"
														}
													]
												}
											},
											{
												"assignments": [
													2448
												],
												"declarations": [
													{
														"constant": false,
														"id": 2448,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 2464,
														"src": "246:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2447,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "246:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2452,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2449,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "258:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2450,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2435,
														"src": "262:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "258:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "246:17:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2454,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2448,
																	"src": "281:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2455,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "285:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "281:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2457,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2435,
																"src": "290:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "281:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "457874656e6465644d6174683a207371756172696e67206f766572666c6f77",
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "293:33:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bba6aeffe3d2c413519fa3a03aeb871116a9c02b09b83935659ee2d5b892d439",
																"typeString": "literal_string \"ExtendedMath: squaring overflow\""
															},
															"value": "ExtendedMath: squaring overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bba6aeffe3d2c413519fa3a03aeb871116a9c02b09b83935659ee2d5b892d439",
																"typeString": "literal_string \"ExtendedMath: squaring overflow\""
															}
														],
														"id": 2453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "273:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "273:54:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2461,
												"nodeType": "ExpressionStatement",
												"src": "273:54:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2462,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2448,
													"src": "344:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2439,
												"id": 2463,
												"nodeType": "Return",
												"src": "337:8:11"
											}
										]
									},
									"documentation": "@return The given number raised to the power of 2",
									"id": 2465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pow2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "139:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "139:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "138:11:11"
									},
									"returnParameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "173:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "172:9:11"
									},
									"scope": 2520,
									"src": "125:227:11",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2518,
										"nodeType": "Block",
										"src": "478:239:11",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2472,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2467,
														"src": "492:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33",
														"id": 2473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "496:1:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "492:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2508,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2467,
															"src": "673:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 2509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "678:1:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "673:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 2516,
													"nodeType": "IfStatement",
													"src": "669:42:11",
													"trueBody": {
														"id": 2515,
														"nodeType": "Block",
														"src": "681:30:11",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 2513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 2511,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2470,
																		"src": "695:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 2512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "699:1:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "695:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2514,
																"nodeType": "ExpressionStatement",
																"src": "695:5:11"
															}
														]
													}
												},
												"id": 2517,
												"nodeType": "IfStatement",
												"src": "488:223:11",
												"trueBody": {
													"id": 2507,
													"nodeType": "Block",
													"src": "499:164:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 2475,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "513:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 2476,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2467,
																	"src": "517:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "513:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2478,
															"nodeType": "ExpressionStatement",
															"src": "513:5:11"
														},
														{
															"assignments": [
																2480
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2480,
																	"name": "x",
																	"nodeType": "VariableDeclaration",
																	"scope": 2507,
																	"src": "532:6:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2479,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "532:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2486,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2481,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2467,
																		"src": "541:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 2482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "545:1:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "541:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "549:1:11",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "541:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "532:18:11"
														},
														{
															"body": {
																"id": 2505,
																"nodeType": "Block",
																"src": "578:75:11",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2490,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2470,
																				"src": "596:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 2491,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2480,
																				"src": "600:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "596:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2493,
																		"nodeType": "ExpressionStatement",
																		"src": "596:5:11"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 2503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 2494,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2480,
																				"src": "619:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2499,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2497,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 2495,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2467,
																									"src": "624:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"argumentTypes": null,
																									"id": 2496,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2480,
																									"src": "628:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "624:5:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 2498,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2480,
																								"src": "632:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "624:9:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2500,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "623:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"argumentTypes": null,
																					"hexValue": "32",
																					"id": 2501,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "637:1:11",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "623:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "619:19:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2504,
																		"nodeType": "ExpressionStatement",
																		"src": "619:19:11"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2487,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2480,
																	"src": "571:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2488,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "575:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "571:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2506,
															"nodeType": "WhileStatement",
															"src": "564:89:11"
														}
													]
												}
											}
										]
									},
									"documentation": "@return The square root of the given number",
									"id": 2519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "439:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "439:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "438:8:11"
									},
									"returnParameters": {
										"id": 2471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "470:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2469,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "469:8:11"
									},
									"scope": 2520,
									"src": "425:292:11",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2521,
							"src": "25:694:11"
						}
					],
					"src": "0:720:11"
				},
				"id": 11
			},
			"contracts/lib/Sigmoid.sol": {
				"ast": {
					"absolutePath": "contracts/lib/Sigmoid.sol",
					"exportedSymbols": {
						"Sigmoid": [
							2727
						]
					},
					"id": 2728,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2522,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
							"file": "@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol",
							"id": 2523,
							"nodeType": "ImportDirective",
							"scope": 2728,
							"sourceUnit": 217,
							"src": "25:78:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/lib/ExtendedMath.sol",
							"file": "./ExtendedMath.sol",
							"id": 2524,
							"nodeType": "ImportDirective",
							"scope": 2728,
							"sourceUnit": 2521,
							"src": "104:28:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2727,
							"linearizedBaseContracts": [
								2727
							],
							"name": "Sigmoid",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2527,
									"libraryName": {
										"contractScope": null,
										"id": 2525,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 216,
										"src": "162:8:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$216",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "156:27:12",
									"typeName": {
										"id": 2526,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "175:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2530,
									"libraryName": {
										"contractScope": null,
										"id": 2528,
										"name": "ExtendedMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2520,
										"src": "194:12:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ExtendedMath_$2520",
											"typeString": "library ExtendedMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "188:31:12",
									"typeName": {
										"id": 2529,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "211:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 2533,
									"name": "PARAM_UPDATE_DELAY",
									"nodeType": "VariableDeclaration",
									"scope": 2727,
									"src": "293:51:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2531,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "293:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "37",
										"id": 2532,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "338:6:12",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Sigmoid.Params",
									"id": 2540,
									"members": [
										{
											"constant": false,
											"id": 2535,
											"name": "a",
											"nodeType": "VariableDeclaration",
											"scope": 2540,
											"src": "375:9:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2534,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "375:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2537,
											"name": "b",
											"nodeType": "VariableDeclaration",
											"scope": 2540,
											"src": "394:8:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2536,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "394:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2539,
											"name": "c",
											"nodeType": "VariableDeclaration",
											"scope": 2540,
											"src": "412:9:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2538,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "412:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Params",
									"nodeType": "StructDefinition",
									"scope": 2727,
									"src": "351:77:12",
									"visibility": "public"
								},
								{
									"canonicalName": "Sigmoid.State",
									"id": 2547,
									"members": [
										{
											"constant": false,
											"id": 2542,
											"name": "oldParams",
											"nodeType": "VariableDeclaration",
											"scope": 2547,
											"src": "457:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Params_$2540_storage_ptr",
												"typeString": "struct Sigmoid.Params"
											},
											"typeName": {
												"contractScope": null,
												"id": 2541,
												"name": "Params",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 2540,
												"src": "457:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Params_$2540_storage_ptr",
													"typeString": "struct Sigmoid.Params"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2544,
											"name": "newParams",
											"nodeType": "VariableDeclaration",
											"scope": 2547,
											"src": "483:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Params_$2540_storage_ptr",
												"typeString": "struct Sigmoid.Params"
											},
											"typeName": {
												"contractScope": null,
												"id": 2543,
												"name": "Params",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 2540,
												"src": "483:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Params_$2540_storage_ptr",
													"typeString": "struct Sigmoid.Params"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2546,
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 2547,
											"src": "509:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2545,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "509:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "State",
									"nodeType": "StructDefinition",
									"scope": 2727,
									"src": "434:99:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2618,
										"nodeType": "Block",
										"src": "792:439:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2559,
																"name": "_c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2555,
																"src": "810:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 2560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "816:1:12",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "810:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73686f756c642062652067726561746572207468616e2030",
															"id": 2562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "819:26:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_068d7015809191b79df17973ee9b81f06776e23218107dc7575b37870dd8e576",
																"typeString": "literal_string \"should be greater than 0\""
															},
															"value": "should be greater than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_068d7015809191b79df17973ee9b81f06776e23218107dc7575b37870dd8e576",
																"typeString": "literal_string \"should be greater than 0\""
															}
														],
														"id": 2558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2745,
															2746
														],
														"referencedDeclaration": 2746,
														"src": "802:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "802:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2564,
												"nodeType": "ExpressionStatement",
												"src": "802:44:12"
											},
											{
												"assignments": [
													2566
												],
												"declarations": [
													{
														"constant": false,
														"id": 2566,
														"name": "currentTimestamp",
														"nodeType": "VariableDeclaration",
														"scope": 2618,
														"src": "884:24:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2565,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "884:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2569,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2567,
														"name": "_now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2726,
														"src": "911:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "911:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "884:33:12"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2570,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2549,
															"src": "931:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																"typeString": "struct Sigmoid.State storage pointer"
															}
														},
														"id": 2571,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2546,
														"src": "931:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "949:1:12",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "931:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2585,
															"name": "currentTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2566,
															"src": "1022:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2589,
																	"name": "PARAM_UPDATE_DELAY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2533,
																	"src": "1060:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2586,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2549,
																		"src": "1041:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																			"typeString": "struct Sigmoid.State storage pointer"
																		}
																	},
																	"id": 2587,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2546,
																	"src": "1041:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 56,
																"src": "1041:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1041:38:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1022:57:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 2600,
													"nodeType": "IfStatement",
													"src": "1018:119:12",
													"trueBody": {
														"id": 2599,
														"nodeType": "Block",
														"src": "1081:56:12",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2592,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "1095:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																				"typeString": "struct Sigmoid.State storage pointer"
																			}
																		},
																		"id": 2594,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "oldParams",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2542,
																		"src": "1095:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Params_$2540_storage",
																			"typeString": "struct Sigmoid.Params storage ref"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2595,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2549,
																			"src": "1112:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																				"typeString": "struct Sigmoid.State storage pointer"
																			}
																		},
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "newParams",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2544,
																		"src": "1112:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Params_$2540_storage",
																			"typeString": "struct Sigmoid.Params storage ref"
																		}
																	},
																	"src": "1095:31:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Params_$2540_storage",
																		"typeString": "struct Sigmoid.Params storage ref"
																	}
																},
																"id": 2598,
																"nodeType": "ExpressionStatement",
																"src": "1095:31:12"
															}
														]
													}
												},
												"id": 2601,
												"nodeType": "IfStatement",
												"src": "927:210:12",
												"trueBody": {
													"id": 2584,
													"nodeType": "Block",
													"src": "952:60:12",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2574,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2549,
																		"src": "966:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																			"typeString": "struct Sigmoid.State storage pointer"
																		}
																	},
																	"id": 2576,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "oldParams",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2542,
																	"src": "966:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Params_$2540_storage",
																		"typeString": "struct Sigmoid.Params storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2578,
																			"name": "_a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2551,
																			"src": "990:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2579,
																			"name": "_b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2553,
																			"src": "994:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 2580,
																			"name": "_c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2555,
																			"src": "998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2577,
																		"name": "Params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2540,
																		"src": "983:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Params_$2540_storage_ptr_$",
																			"typeString": "type(struct Sigmoid.Params storage pointer)"
																		}
																	},
																	"id": 2581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "983:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Params_$2540_memory",
																		"typeString": "struct Sigmoid.Params memory"
																	}
																},
																"src": "966:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Params_$2540_storage",
																	"typeString": "struct Sigmoid.Params storage ref"
																}
															},
															"id": 2583,
															"nodeType": "ExpressionStatement",
															"src": "966:35:12"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2602,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2549,
															"src": "1146:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																"typeString": "struct Sigmoid.State storage pointer"
															}
														},
														"id": 2604,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "newParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2544,
														"src": "1146:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Params_$2540_storage",
															"typeString": "struct Sigmoid.Params storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2606,
																"name": "_a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2551,
																"src": "1170:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 2607,
																"name": "_b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2553,
																"src": "1174:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"argumentTypes": null,
																"id": 2608,
																"name": "_c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2555,
																"src": "1178:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2605,
															"name": "Params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2540,
															"src": "1163:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Params_$2540_storage_ptr_$",
																"typeString": "type(struct Sigmoid.Params storage pointer)"
															}
														},
														"id": 2609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1163:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Params_$2540_memory",
															"typeString": "struct Sigmoid.Params memory"
														}
													},
													"src": "1146:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Params_$2540_storage",
														"typeString": "struct Sigmoid.Params storage ref"
													}
												},
												"id": 2611,
												"nodeType": "ExpressionStatement",
												"src": "1146:35:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2612,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2549,
															"src": "1191:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																"typeString": "struct Sigmoid.State storage pointer"
															}
														},
														"id": 2614,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2546,
														"src": "1191:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2615,
														"name": "currentTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2566,
														"src": "1208:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1191:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2617,
												"nodeType": "ExpressionStatement",
												"src": "1191:33:12"
											}
										]
									},
									"documentation": "@dev Sets sigmoid parameters\n@param _a Sigmoid parameter A.\n@param _b Sigmoid parameter B.\n@param _c Sigmoid parameter C.",
									"id": 2619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setParameters",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "728:18:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
													"typeString": "struct Sigmoid.State"
												},
												"typeName": {
													"contractScope": null,
													"id": 2548,
													"name": "State",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2547,
													"src": "728:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
														"typeString": "struct Sigmoid.State"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2551,
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "748:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2553,
												"name": "_b",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "760:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2552,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "760:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2555,
												"name": "_c",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "771:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "771:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:55:12"
									},
									"returnParameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "792:0:12"
									},
									"scope": 2727,
									"src": "705:526:12",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2664,
										"nodeType": "Block",
										"src": "1379:245:12",
										"statements": [
											{
												"assignments": [
													2631
												],
												"declarations": [
													{
														"constant": false,
														"id": 2631,
														"name": "isUpdated",
														"nodeType": "VariableDeclaration",
														"scope": 2664,
														"src": "1389:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2630,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1389:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2640,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2632,
															"name": "_now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2726,
															"src": "1406:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 2633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1406:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 2637,
																"name": "PARAM_UPDATE_DELAY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2533,
																"src": "1434:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2634,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2621,
																	"src": "1415:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																		"typeString": "struct Sigmoid.State storage pointer"
																	}
																},
																"id": 2635,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2546,
																"src": "1415:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 56,
															"src": "1415:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1415:38:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1406:47:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1389:64:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"id": 2641,
														"name": "isUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2631,
														"src": "1470:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2652,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "1564:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																			"typeString": "struct Sigmoid.State storage pointer"
																		}
																	},
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "oldParams",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2542,
																	"src": "1564:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Params_$2540_storage",
																		"typeString": "struct Sigmoid.Params storage ref"
																	}
																},
																"id": 2654,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "a",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2535,
																"src": "1564:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2655,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "1582:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																			"typeString": "struct Sigmoid.State storage pointer"
																		}
																	},
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "oldParams",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2542,
																	"src": "1582:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Params_$2540_storage",
																		"typeString": "struct Sigmoid.Params storage ref"
																	}
																},
																"id": 2657,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "b",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2537,
																"src": "1582:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2658,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "1600:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																			"typeString": "struct Sigmoid.State storage pointer"
																		}
																	},
																	"id": 2659,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "oldParams",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2542,
																	"src": "1600:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Params_$2540_storage",
																		"typeString": "struct Sigmoid.Params storage ref"
																	}
																},
																"id": 2660,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "c",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2539,
																"src": "1600:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2661,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1563:54:12",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_uint256_$",
															"typeString": "tuple(uint256,int256,uint256)"
														}
													},
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1470:147:12",
													"trueExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2642,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "1495:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																			"typeString": "struct Sigmoid.State storage pointer"
																		}
																	},
																	"id": 2643,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "newParams",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2544,
																	"src": "1495:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Params_$2540_storage",
																		"typeString": "struct Sigmoid.Params storage ref"
																	}
																},
																"id": 2644,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "a",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2535,
																"src": "1495:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2645,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "1513:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																			"typeString": "struct Sigmoid.State storage pointer"
																		}
																	},
																	"id": 2646,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "newParams",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2544,
																	"src": "1513:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Params_$2540_storage",
																		"typeString": "struct Sigmoid.Params storage ref"
																	}
																},
																"id": 2647,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "b",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2537,
																"src": "1513:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 2648,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2621,
																		"src": "1531:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																			"typeString": "struct Sigmoid.State storage pointer"
																		}
																	},
																	"id": 2649,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "newParams",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2544,
																	"src": "1531:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Params_$2540_storage",
																		"typeString": "struct Sigmoid.Params storage ref"
																	}
																},
																"id": 2650,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "c",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2539,
																"src": "1531:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2651,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1494:54:12",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_uint256_$",
															"typeString": "tuple(uint256,int256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_uint256_$",
														"typeString": "tuple(uint256,int256,uint256)"
													}
												},
												"functionReturnParameters": 2629,
												"id": 2663,
												"nodeType": "Return",
												"src": "1463:154:12"
											}
										]
									},
									"documentation": "@return Sigmoid parameters",
									"id": 2665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getParameters",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "1310:18:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
													"typeString": "struct Sigmoid.State"
												},
												"typeName": {
													"contractScope": null,
													"id": 2620,
													"name": "State",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2547,
													"src": "1310:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
														"typeString": "struct Sigmoid.State"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1309:20:12"
									},
									"returnParameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "1353:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1353:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2626,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "1362:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2625,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1362:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2628,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "1370:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1352:26:12"
									},
									"scope": 2727,
									"src": "1287:337:12",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2717,
										"nodeType": "Block",
										"src": "1789:215:12",
										"statements": [
											{
												"assignments": [
													2675,
													2677,
													2679
												],
												"declarations": [
													{
														"constant": false,
														"id": 2675,
														"name": "a",
														"nodeType": "VariableDeclaration",
														"scope": 2717,
														"src": "1800:9:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1800:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2677,
														"name": "b",
														"nodeType": "VariableDeclaration",
														"scope": 2717,
														"src": "1811:8:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2676,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1811:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2679,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 2717,
														"src": "1821:9:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2678,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1821:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2683,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2681,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2667,
															"src": "1848:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																"typeString": "struct Sigmoid.State storage pointer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
																"typeString": "struct Sigmoid.State storage pointer"
															}
														],
														"id": 2680,
														"name": "getParameters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2665,
														"src": "1834:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_State_$2547_storage_ptr_$returns$_t_uint256_$_t_int256_$_t_uint256_$",
															"typeString": "function (struct Sigmoid.State storage pointer) view returns (uint256,int256,uint256)"
														}
													},
													"id": 2682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1834:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_int256_$_t_uint256_$",
														"typeString": "tuple(uint256,int256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1799:54:12"
											},
											{
												"assignments": [
													2685
												],
												"declarations": [
													{
														"constant": false,
														"id": 2685,
														"name": "k",
														"nodeType": "VariableDeclaration",
														"scope": 2717,
														"src": "1863:8:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2684,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1863:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2689,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2686,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2669,
														"src": "1874:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2687,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2677,
														"src": "1879:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1874:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1863:17:12"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2690,
														"name": "k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2685,
														"src": "1894:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1898:1:12",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1894:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2695,
												"nodeType": "IfStatement",
												"src": "1890:19:12",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1908:1:12",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 2673,
													"id": 2694,
													"nodeType": "Return",
													"src": "1901:8:12"
												}
											},
											{
												"assignments": [
													2697
												],
												"declarations": [
													{
														"constant": false,
														"id": 2697,
														"name": "uk",
														"nodeType": "VariableDeclaration",
														"scope": 2717,
														"src": "1919:10:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2696,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1919:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2701,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2699,
															"name": "k",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2685,
															"src": "1940:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 2698,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1932:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": "uint256"
													},
													"id": 2700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1932:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1919:23:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 2711,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2679,
																			"src": "1987:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2707,
																					"name": "uk",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2697,
																					"src": "1973:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pow2",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2465,
																				"src": "1973:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1973:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 56,
																		"src": "1973:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1973:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sqrt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2519,
																"src": "1973:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1973:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2704,
																	"name": "uk",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2697,
																	"src": "1965:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 2702,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2675,
																	"src": "1959:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 133,
																"src": "1959:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1959:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "1959:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2673,
												"id": 2716,
												"nodeType": "Return",
												"src": "1952:45:12"
											}
										]
									},
									"documentation": "@return The corresponding Y value for a given X value",
									"id": 2718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "1726:18:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
													"typeString": "struct Sigmoid.State"
												},
												"typeName": {
													"contractScope": null,
													"id": 2666,
													"name": "State",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 2547,
													"src": "1726:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_State_$2547_storage_ptr",
														"typeString": "struct Sigmoid.State"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2669,
												"name": "_x",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "1746:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2668,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1746:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1725:31:12"
									},
									"returnParameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "1780:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1779:9:12"
									},
									"scope": 2727,
									"src": "1707:297:12",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2725,
										"nodeType": "Block",
										"src": "2116:252:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2723,
													"name": "now",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2744,
													"src": "2309:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2722,
												"id": 2724,
												"nodeType": "Return",
												"src": "2302:10:12"
											}
										]
									},
									"documentation": "@return Returns current timestamp.",
									"id": 2726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_now",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:2:12"
									},
									"returnParameters": {
										"id": 2722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2721,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "2107:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2106:9:12"
									},
									"scope": 2727,
									"src": "2068:300:12",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 2728,
							"src": "134:2236:12"
						}
					],
					"src": "0:2371:12"
				},
				"id": 12
			}
		}
	}
}